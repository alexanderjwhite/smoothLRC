[{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/Parameter Selection.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Parameter Selection","text":"smoothLRC method uses smoothing parameter (\\(/lambda\\)) rank parameter (\\(k\\)) produce results. article demonstrates selection parameters.","code":"library(smoothLRC) library(ggplot2) library(dplyr) set.seed(1)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/Parameter Selection.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load Data","title":"Parameter Selection","text":"Using spatialLIBD package, ’ll load sample 151671 DLPFC data.","code":"sample <- \"151671\"  sce <- spatialLIBD::fetch_data(type = \"sce\") sce <- sce[, sce$sample_name == sample]"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/Parameter Selection.html","id":"parameter-grid","dir":"Articles","previous_headings":"","what":"Parameter Grid","title":"Parameter Selection","text":"’ll consider \\(/lambda=(5, 10, 15)\\) \\(k=(10, 20)\\). , ’ll use 100 pixels test size.","code":"lambdas <- c(5, 10, 15) ks <- c(10, 20) parameter_grid <- expand.grid(lambda = lambdas, k = ks) test_size <- 100"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/Parameter Selection.html","id":"cross-validation","dir":"Articles","previous_headings":"","what":"Cross-Validation","title":"Parameter Selection","text":"Next, ’ll use cross-validation select optimal parameter values.   can see using recommend procedure, selected combination (\\(\\lambda=15\\), \\(k=20\\)). practice, recommend running much larger number iterations (e.g. 1,000) looking larger parameter space.","code":"metrics <- NULL for(combo in 1:nrow(parameter_grid)){   print(parameter_grid[combo,])   combination <- smooth_cv(sce, lambda = parameter_grid[combo,\"lambda\"], k = parameter_grid[combo,\"k\"], test_size, maxiter = 5)   metrics <- rbind(metrics, tibble(lambda = parameter_grid[combo,\"lambda\"],                                     k = parameter_grid[combo,\"k\"],                                    penal_lik = combination$penal_like,                                    cv_like = combination$cv_like)                    ) } #>   lambda  k #> 1      5 10 #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC on training set...\" #> iteration: 1 | convergence: 0.422554 | 0.0563444 | 1 #> iteration: 2 | convergence: 0.173078 | 0.0404936 | 0.00987567 #> iteration: 3 | convergence: 0.163679 | 0.0450668 | 0.0102672 #> iteration: 4 | convergence: 0.175742 | 0.0471282 | 0.0110242 #> iteration: 5 | convergence: 0.182077 | 0.0482414 | 0.0120774 #> [1] \"Compute neighborhood likelihood...\" #> [1] \"Done!\" #>   lambda  k #> 2     10 10 #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC on training set...\" #> iteration: 1 | convergence: 0.422057 | 0.0554037 | 1 #> iteration: 2 | convergence: 0.164508 | 0.0401319 | 0.00985858 #> iteration: 3 | convergence: 0.161535 | 0.0453195 | 0.010362 #> iteration: 4 | convergence: 0.186979 | 0.0486879 | 0.0112138 #> iteration: 5 | convergence: 0.184922 | 0.0508453 | 0.012346 #> [1] \"Compute neighborhood likelihood...\" #> [1] \"Done!\" #>   lambda  k #> 3     15 10 #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC on training set...\" #> iteration: 1 | convergence: 0.42013 | 0.0539799 | 1 #> iteration: 2 | convergence: 0.167513 | 0.0398524 | 0.00986839 #> iteration: 3 | convergence: 0.176619 | 0.0454105 | 0.0104753 #> iteration: 4 | convergence: 0.191349 | 0.0489113 | 0.0113943 #> iteration: 5 | convergence: 0.181778 | 0.0511128 | 0.012534 #> [1] \"Compute neighborhood likelihood...\" #> [1] \"Done!\" #>   lambda  k #> 4      5 20 #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC on training set...\" #> iteration: 1 | convergence: 0.496827 | 0.0727383 | 1 #> iteration: 2 | convergence: 0.234482 | 0.0531852 | 0.0114419 #> iteration: 3 | convergence: 0.209897 | 0.0595182 | 0.0125506 #> iteration: 4 | convergence: 0.185418 | 0.0596158 | 0.0143264 #> iteration: 5 | convergence: 0.183947 | 0.0612591 | 0.0167131 #> [1] \"Compute neighborhood likelihood...\" #> [1] \"Done!\" #>   lambda  k #> 5     10 20 #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC on training set...\" #> iteration: 1 | convergence: 0.492975 | 0.0694401 | 1 #> iteration: 2 | convergence: 0.227639 | 0.0526918 | 0.0111891 #> iteration: 3 | convergence: 0.2107 | 0.0592167 | 0.012326 #> iteration: 4 | convergence: 0.191362 | 0.0600496 | 0.0141495 #> iteration: 5 | convergence: 0.191143 | 0.0630135 | 0.0165308 #> [1] \"Compute neighborhood likelihood...\" #> [1] \"Done!\" #>   lambda  k #> 6     15 20 #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC on training set...\" #> iteration: 1 | convergence: 0.491289 | 0.0671663 | 1 #> iteration: 2 | convergence: 0.238924 | 0.052163 | 0.0110855 #> iteration: 3 | convergence: 0.201901 | 0.0582762 | 0.0122061 #> iteration: 4 | convergence: 0.189654 | 0.0588165 | 0.0140169 #> iteration: 5 | convergence: 0.187515 | 0.0622647 | 0.0163196 #> [1] \"Compute neighborhood likelihood...\" #> [1] \"Done!\"  metrics %>%    ggplot(aes(x = lambda, y = cv_like)) +   geom_point() +   geom_line() +   facet_wrap(~k) +   ylab(\"CV Likelihood\") metrics %>%    group_by(k) %>%   slice_max(order_by = cv_like, n = 1) %>%   ungroup() %>%   mutate(Selected = ifelse(penal_lik == max(penal_lik), \"Yes\", \"No\")) %>%   ggplot(aes(x = k, y = penal_lik, label = lambda)) +   geom_point() +   geom_line() +   geom_label(aes(color = Selected)) +   ylab(\"Penalized Likelihood\")"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/smoothLRC.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Introduction to smoothLRC","text":"smoothLRC novel tool clustering spatial transcriptomics data. technique utilizes regularized maximum likelihood estimator approximate noisy observed expression matrix incorporate spatial information address expression dropout. approximation Poisson distribution low-rank spatially smooth. Furthermore, smoothLRC enables spatial clustering modeling low-dimensional representation count-based gene expression matrix. Thus, approach encourages neighboring cells belong cluster via penalized matrix decomposition. smoothLRC employs SummarizedExperiment framework spatial transcriptomics data. example, cluster dorsolateral prefrontal cortex (DLPFC) collected annotated Maynard et al. (2020).","code":"library(smoothLRC) library(SummarizedExperiment) library(ggplot2) library(dplyr) set.seed(1)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/smoothLRC.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load Data","title":"Introduction to smoothLRC","text":"Using spatialLIBD package, ’ll load sample 151671 DLPFC data.","code":"sample <- \"151671\"  sce <- spatialLIBD::fetch_data(type = \"sce\") sce <- sce[, sce$sample_name == sample]"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/smoothLRC.html","id":"expression-plot","dir":"Articles","previous_headings":"","what":"Expression Plot","title":"Introduction to smoothLRC","text":"’ll find highly variable gene (HVG) sample explore expression spatial context.","code":"hvg <- rownames(sce)[which.max(apply(assay(sce), 1, var))] sce %>%    spatial_plot(feature_name = hvg)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/smoothLRC.html","id":"clustering","dir":"Articles","previous_headings":"","what":"Clustering","title":"Introduction to smoothLRC","text":"Next, ’ll use smoothLRC perform low-rank clustering data. recommend setting maximum number iterations large value (e.g. 1,000). smoothLRC add clustering results colData model results metadata SummarizedExperiment object.","code":"sce <- smooth_lrc(sce, lambda = 5, k = 30, n_clust = 5, maxiter = 5) #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC...\" #> iteration: 1 | convergence: 0.517552 | 0.0777191 | 1 #> iteration: 2 | convergence: 0.258088 | 0.0619568 | 0.0124418 #> iteration: 3 | convergence: 0.224198 | 0.0678516 | 0.0140945 #> iteration: 4 | convergence: 0.198246 | 0.0673172 | 0.0170241 #> iteration: 5 | convergence: 0.190463 | 0.0720095 | 0.0208061 #> [1] \"Clustering right singular vectors...\" #> [1] \"Done!\""},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/smoothLRC.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"Introduction to smoothLRC","text":"’ll visualize results model pre-computed model larger number iterations compare manual annotations.    Finally, can reexamine HVG using smoothed results model.  Reproducibility","code":"clust_1000 <- read.csv(\"151671.csv\", colClasses = \"factor\")$smooth_cluster_1000 manual_labels <- colData(sce)$layer_guess_reordered  sce %>%    spatial_plot(type = \"cluster\") +    ggtitle(\"smoothLRC (5 iterations)\") sce %>%    spatial_plot(type = \"cluster\", labels = clust_1000) +   ggtitle(\"smoothLRC (1000 iterations)\") sce %>%    spatial_plot(type = \"cluster\", labels = manual_labels) +   ggtitle(\"Manual Annotation\") sce %>%    spatial_plot(feature_name = hvg, type = \"smooth\") sessionInfo() #> R version 4.1.3 (2022-03-10) #> Platform: x86_64-w64-mingw32/x64 (64-bit) #> Running under: Windows 10 x64 (build 19044) #>  #> Matrix products: default #>  #> locale: #> [1] LC_COLLATE=English_United States.1252  #> [2] LC_CTYPE=English_United States.1252    #> [3] LC_MONETARY=English_United States.1252 #> [4] LC_NUMERIC=C                           #> [5] LC_TIME=English_United States.1252     #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] dplyr_1.0.9                 ggplot2_3.3.6               #>  [3] SummarizedExperiment_1.24.0 Biobase_2.54.0              #>  [5] GenomicRanges_1.46.1        GenomeInfoDb_1.30.1         #>  [7] IRanges_2.28.0              S4Vectors_0.32.4            #>  [9] BiocGenerics_0.40.0         MatrixGenerics_1.6.0        #> [11] matrixStats_0.62.0          smoothLRC_0.99.0            #>  #> loaded via a namespace (and not attached): #>   [1] utf8_1.2.2                    R.utils_2.12.0                #>   [3] tidyselect_1.1.2              RSQLite_2.2.14                #>   [5] AnnotationDbi_1.56.2          htmlwidgets_1.5.4             #>   [7] grid_4.1.3                    BiocParallel_1.28.3           #>   [9] DropletUtils_1.14.2           munsell_0.5.0                 #>  [11] ScaledMatrix_1.2.0            codetools_0.2-18              #>  [13] ragg_1.2.2                    DT_0.23                       #>  [15] withr_2.5.0                   colorspace_2.0-3              #>  [17] filelock_1.0.2                config_0.3.1                  #>  [19] highr_0.9                     knitr_1.39                    #>  [21] rstudioapi_0.13               SingleCellExperiment_1.16.0   #>  [23] shinyWidgets_0.7.1            labeling_0.4.2                #>  [25] GenomeInfoDbData_1.2.7        bit64_4.0.5                   #>  [27] farver_2.1.1                  rhdf5_2.38.1                  #>  [29] rprojroot_2.0.3               vctrs_0.4.1                   #>  [31] generics_0.1.3                xfun_0.31                     #>  [33] BiocFileCache_2.2.1           R6_2.5.1                      #>  [35] doParallel_1.0.17             ggbeeswarm_0.6.0              #>  [37] rsvd_1.0.5                    locfit_1.5-9.6                #>  [39] fields_14.0                   bitops_1.0-7                  #>  [41] rhdf5filters_1.6.0            cachem_1.0.6                  #>  [43] DelayedArray_0.20.0           assertthat_0.2.1              #>  [45] promises_1.2.0.1              BiocIO_1.4.0                  #>  [47] scales_1.2.0                  beeswarm_0.4.0                #>  [49] gtable_0.3.0                  beachmat_2.10.0               #>  [51] benchmarkmeData_1.0.4         spam_2.9-0                    #>  [53] rlang_1.0.4                   systemfonts_1.0.4             #>  [55] scatterplot3d_0.3-41          rtracklayer_1.54.0            #>  [57] lazyeval_0.2.2                BiocManager_1.30.18           #>  [59] yaml_2.3.5                    httpuv_1.6.5                  #>  [61] tools_4.1.3                   usethis_2.1.6                 #>  [63] SpatialExperiment_1.4.0       ellipsis_0.3.2                #>  [65] jquerylib_0.1.4               RColorBrewer_1.1-3            #>  [67] sessioninfo_1.2.2             Rcpp_1.0.9                    #>  [69] sparseMatrixStats_1.6.0       zlibbioc_1.40.0               #>  [71] purrr_0.3.4                   RCurl_1.98-1.7                #>  [73] viridis_0.6.2                 cowplot_1.1.1                 #>  [75] ggrepel_0.9.1                 fs_1.5.2                      #>  [77] magrittr_2.0.3                data.table_1.14.2             #>  [79] magick_2.7.3                  pkgload_1.3.0                 #>  [81] mime_0.12                     evaluate_0.15                 #>  [83] xtable_1.8-4                  XML_3.99-0.10                 #>  [85] mclust_5.4.10                 sparsesvd_0.2                 #>  [87] gridExtra_2.3                 compiler_4.1.3                #>  [89] scater_1.22.0                 tibble_3.1.7                  #>  [91] maps_3.4.0                    crayon_1.5.1                  #>  [93] R.oo_1.25.0                   htmltools_0.5.2               #>  [95] later_1.3.0                   tidyr_1.2.0                   #>  [97] DBI_1.1.3                     ExperimentHub_2.2.1           #>  [99] dbplyr_2.2.1                  rappdirs_0.3.3                #> [101] Matrix_1.4-1                  cli_3.3.0                     #> [103] R.methodsS3_1.8.2             benchmarkme_1.0.8             #> [105] parallel_4.1.3                dotCall64_1.0-1               #> [107] golem_0.3.3                   pkgconfig_2.0.3               #> [109] pkgdown_2.0.6                 GenomicAlignments_1.30.0      #> [111] plotly_4.10.0                 scuttle_1.4.0                 #> [113] xml2_1.3.3                    roxygen2_7.2.0                #> [115] foreach_1.5.2                 vipor_0.4.5                   #> [117] bslib_0.4.0                   dqrng_0.3.0                   #> [119] XVector_0.34.0                attempt_0.3.1                 #> [121] stringr_1.4.0                 digest_0.6.29                 #> [123] Biostrings_2.62.0             rmarkdown_2.14                #> [125] edgeR_3.36.0                  DelayedMatrixStats_1.16.0     #> [127] restfulr_0.0.15               curl_4.3.2                    #> [129] shiny_1.7.1                   Rsamtools_2.10.0              #> [131] rjson_0.2.21                  lifecycle_1.0.1               #> [133] jsonlite_1.8.0                Rhdf5lib_1.16.0               #> [135] BiocNeighbors_1.12.0          spatialLIBD_1.6.5             #> [137] desc_1.4.1                    viridisLite_0.4.0             #> [139] limma_3.50.3                  fansi_1.0.3                   #> [141] pillar_1.7.0                  lattice_0.20-45               #> [143] KEGGREST_1.34.0               fastmap_1.1.0                 #> [145] httr_1.4.3                    interactiveDisplayBase_1.32.0 #> [147] glue_1.6.2                    FNN_1.1.3.1                   #> [149] png_0.1-7                     iterators_1.0.14              #> [151] Polychrome_1.5.1              BiocVersion_3.14.0            #> [153] bit_4.0.4                     stringi_1.7.6                 #> [155] sass_0.4.1                    HDF5Array_1.22.1              #> [157] blob_1.2.3                    textshaping_0.3.6             #> [159] BiocSingular_1.10.0           AnnotationHub_3.2.2           #> [161] memoise_2.0.1                 irlba_2.3.5"},{"path":"https://alexanderjwhite.github.io/smoothLRC/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexander White. Author, maintainer. Sha Cao. Author. Pengtao Dang. Contributor. Changlin Wan. Contributor. Arnu Zhang. Contributor. Chi Zhang. Contributor.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"White , Cao S (2022). smoothLRC: Tools Clustering Spatial Transcriptomics Data Based Low Rank Smoothing.. R package version 0.99.0, https://alexanderjwhite.github.io/smoothLRC/.","code":"@Manual{,   title = {smoothLRC: Tools For Clustering Spatial Transcriptomics Data Based On Low Rank Smoothing.},   author = {Alexander White and Sha Cao},   year = {2022},   note = {R package version 0.99.0},   url = {https://alexanderjwhite.github.io/smoothLRC/}, }"},{"path":"https://alexanderjwhite.github.io/smoothLRC/index.html","id":"smoothlrc-","dir":"","previous_headings":"","what":"Tools For Clustering Spatial Transcriptomics Data Based On Low Rank Smoothing.","title":"Tools For Clustering Spatial Transcriptomics Data Based On Low Rank Smoothing.","text":"Smooth Low-Rank Clustering (smoothLRC) provides tools analyze cluster spatial transcriptomics data.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools For Clustering Spatial Transcriptomics Data Based On Low Rank Smoothing.","text":"can install development version smoothLRC GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"alexanderjwhite/smoothLRC\")"},{"path":"https://alexanderjwhite.github.io/smoothLRC/index.html","id":"articles","dir":"","previous_headings":"","what":"Articles","title":"Tools For Clustering Spatial Transcriptomics Data Based On Low Rank Smoothing.","text":"Please visit smoothLRC documentation website details.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 smoothLRC authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/example_sce.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an example SummarizedExperiment object with spatial data — example_sce","title":"Create an example SummarizedExperiment object with spatial data — example_sce","text":"Create example SummarizedExperiment object spatial data","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/example_sce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an example SummarizedExperiment object with spatial data — example_sce","text":"","code":"example_sce(   n_row = 10,   n_col = 10,   n_gene = 1000,   lambda = 2,   frac_sparse = 0.95 )"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/example_sce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an example SummarizedExperiment object with spatial data — example_sce","text":"n_row integer; number simulated spatial pixel rows n_col integer; number simulated spatial pixel columns n_gene integer; number simulated genes lambda numeric; poisson parameter frac_sparse numeric; fraction 0s.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/example_sce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an example SummarizedExperiment object with spatial data — example_sce","text":"SummarizedExperiment object","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/example_sce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an example SummarizedExperiment object with spatial data — example_sce","text":"","code":"example_sce() #> class: SummarizedExperiment  #> dim: 1000 100  #> metadata(0): #> assays(2): counts logcounts #> rownames(1000): Feature 1 Feature 2 ... Feature 999 Feature 1000 #> rowData names(0): #> colnames(100): Pixel 1 Pixel 2 ... Pixel 99 Pixel 100 #> colData names(2): row col"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_clust.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster the right singular vectors from model output — smooth_clust","title":"Cluster the right singular vectors from model output — smooth_clust","text":"Cluster right singular vectors model output","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_clust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster the right singular vectors from model output — smooth_clust","text":"","code":"smooth_clust(v, n_clust)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_clust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster the right singular vectors from model output — smooth_clust","text":"v matrix; right singular vectors n_clust integer; number clusters.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_clust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster the right singular vectors from model output — smooth_clust","text":"vector cluster labels","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_clust.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster the right singular vectors from model output — smooth_clust","text":"","code":"sce <- example_sce() x <- SummarizedExperiment::assay(sce) coords <- SummarizedExperiment::colData(sce)[, c(\"col\", \"row\")] k <- 10 init <- smooth_init(x, coords, k) lambda <- 1 epsilon <- 1e-3 maxiter <- 5 model <- smooth_model(x, init$u0, init$v0, init$w, init$index, lambda, epsilon, maxiter) #> iteration: 1 | convergence: 0.103343 | 0.0353524 | 1 #> iteration: 2 | convergence: 0.0827336 | 0.0308956 | 0.00515834 #> iteration: 3 | convergence: 0.078883 | 0.0366244 | 0.00545559 #> iteration: 4 | convergence: 0.0793429 | 0.0396822 | 0.00597432 #> iteration: 5 | convergence: 0.0815055 | 0.0408646 | 0.00670067 n_clust <- 3 smooth_clust(model$v, n_clust) #> fitting ... #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>   [1] 2 2 2 1 3 2 2 3 2 3 2 2 2 2 1 2 2 2 2 1 1 2 1 1 2 2 2 2 2 2 2 2 2 2 1 3 2 #>  [38] 2 2 2 2 2 2 3 3 2 2 2 2 2 2 2 2 2 2 2 3 2 2 3 1 3 2 1 1 3 2 2 2 2 1 2 2 2 #>  [75] 1 3 3 2 2 2 1 2 2 1 2 1 3 2 3 3 2 2 3 1 2 3 2 2 2 2"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Selection via Cross-Validation — smooth_cv","title":"Parameter Selection via Cross-Validation — smooth_cv","text":"Parameter Selection via Cross-Validation","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter Selection via Cross-Validation — smooth_cv","text":"","code":"smooth_cv(   input,   lambda,   k,   test_size,   seed = 1,   epsilon = 0.001,   maxiter = 1000 )"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Selection via Cross-Validation — smooth_cv","text":"input SummarizedExperiment object containing counts assay row/col coordinates. lambda positive numeric; penalization parameter. k integer; indicates desired rank singular value decomposition. test_size number pixels use test set. seed random seed produce consistent pixel samples across parameter values cross-validation. epsilon positive numeric; convergence criterion. maxiter positive integer; maximum desired iterations","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter Selection via Cross-Validation — smooth_cv","text":"list containing penalized likelihood model cross-validated likelihood test set.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter Selection via Cross-Validation — smooth_cv","text":"","code":"sce <- example_sce() smooth_cv(sce, 1, 10, 100, maxiter = 10) #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC on training set...\" #> iteration: 1 | convergence: 0.111061 | 0.0366463 | 1 #> iteration: 2 | convergence: 0.0862367 | 0.0286072 | 0.00520091 #> iteration: 3 | convergence: 0.0803633 | 0.034502 | 0.005298 #> iteration: 4 | convergence: 0.0782274 | 0.037543 | 0.00558285 #> iteration: 5 | convergence: 0.0798144 | 0.0387308 | 0.00608401 #> iteration: 6 | convergence: 0.0824022 | 0.0395071 | 0.00676662 #> iteration: 7 | convergence: 0.0841697 | 0.0401604 | 0.00760243 #> iteration: 8 | convergence: 0.0850095 | 0.0407016 | 0.00857454 #> iteration: 9 | convergence: 0.0849737 | 0.0411525 | 0.00966784 #> iteration: 10 | convergence: 0.0842121 | 0.0415193 | 0.0108695 #> [1] \"Compute neighborhood likelihood...\" #> [1] \"Done!\" #> $penal_like #> [1] -78969.33 #>  #> $cv_like #> [1] -965.0305 #>"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialization objects for smoothLRC — smooth_init","title":"Initialization objects for smoothLRC — smooth_init","text":"Initialization objects smoothLRC","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialization objects for smoothLRC — smooth_init","text":"","code":"smooth_init(x, coords, k, knn = 6)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialization objects for smoothLRC — smooth_init","text":"x matrix; count assay. coords matrix; spatial coordinates. k integer; indicates desired rank singular value decomposition. knn integer; nearest neighbors.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialization objects for smoothLRC — smooth_init","text":"list objects smooth_model function.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialization objects for smoothLRC — smooth_init","text":"","code":"sce <- example_sce() x <- SummarizedExperiment::assay(sce) coords <- SummarizedExperiment::colData(sce)[, c(\"col\", \"row\")] k <- 10 smooth_init(x, coords, k) #> $u0 #>               [,1]          [,2]          [,3]          [,4]          [,5] #>    [1,] 0.05122130 -0.0832156286  4.205609e-02 -7.679408e-02  0.0531385558 #>    [2,] 0.16724569 -0.2162148585 -2.261569e-01 -1.073216e-01 -0.0905638225 #>    [3,] 0.11352574  0.0261964955 -1.956545e-02 -4.178925e-02  0.0006767882 #>    [4,] 0.04593941  0.0198731626 -1.498677e-02  1.848225e-02 -0.0364527303 #>    [5,] 0.05259307 -0.0588576087 -3.193934e-03 -2.698861e-03 -0.0584902389 #>    [6,] 0.02517657 -0.0178319236 -2.177179e-02  2.393621e-02  0.0023207468 #>    [7,] 0.02693615  0.0452076523  1.809504e-02 -5.555458e-03  0.0341867712 #>    [8,] 0.03142077 -0.0260014973 -3.683637e-02 -1.696496e-02 -0.0296070937 #>    [9,] 0.07034625 -0.0394330407 -5.885675e-02  1.315089e-02  0.0679509697 #>   [10,] 0.17989436  0.0225340121 -4.674095e-02 -1.842159e-02 -0.1144071136 #>   [11,] 0.14411339 -0.0960196110 -3.180163e-02  7.945134e-02 -0.0047869492 #>   [12,] 0.24383384 -0.1526837945 -3.244591e-01  1.934684e-01  0.1769048648 #>   [13,] 0.12562853 -0.1142798352 -5.949712e-02 -6.158093e-02  0.2214821131 #>   [14,] 0.17699890 -0.0613766239 -8.520000e-02  6.704797e-02 -0.2303298743 #>   [15,] 0.05486537 -0.0144996232 -2.033896e-02 -2.529880e-02 -0.0026572215 #>   [16,] 0.11506370 -0.0393561218 -6.967951e-02 -7.142832e-02  0.0332250240 #>   [17,] 0.13877920 -0.0619078693 -2.890264e-03 -3.360050e-02 -0.0479809237 #>   [18,] 0.25774177 -0.1743095638  7.566195e-02  9.570672e-02 -0.3837824126 #>   [19,] 0.19195690 -0.1205976017 -2.372520e-01  5.370443e-03  0.1455962863 #>   [20,] 0.14312565 -0.0270494039  1.445976e-02  1.789715e-02 -0.0785232279 #>   [21,] 0.04247370 -0.0075958462 -2.429905e-02 -2.463280e-02 -0.0282237969 #>   [22,] 0.14254919 -0.0394489740 -6.464203e-02 -3.164999e-02 -0.2068133537 #>   [23,] 0.29115284  0.0140884743  8.577513e-02  2.521271e-01  0.1744195109 #>   [24,] 0.06686916 -0.0125315870 -2.391378e-02  5.068229e-02 -0.0358495006 #>   [25,] 0.11495650 -0.0370895469  1.054130e-01 -6.104726e-02 -0.0104671347 #>   [26,] 0.19277745  0.0197332648  2.563488e-02  1.858711e-01  0.2222394263 #>   [27,] 0.22726242 -0.0869969517  4.239144e-02 -5.609913e-02 -0.1390326862 #>   [28,] 0.17570523 -0.1544906215 -4.925760e-02 -2.848071e-02 -0.2324144986 #>   [29,] 0.07550304  0.0032853401 -9.123927e-02  8.084572e-02  0.0132025201 #>   [30,] 0.07759170 -0.0745559275  4.269616e-03 -5.689015e-02 -0.0163350088 #>   [31,] 0.15549580  0.0380226414  1.031221e-01  1.714915e-01  0.1596139215 #>   [32,] 0.13661875 -0.1726999839  8.852309e-02 -1.235200e-01 -0.0870078040 #>   [33,] 0.28847892  0.0489446046  7.424419e-02 -1.173153e-01  0.0355231610 #>   [34,] 0.20410106 -0.1546484731 -2.317165e-01 -3.169962e-02  0.0523320351 #>   [35,] 0.10192220  0.3261952465 -5.008239e-02 -1.400645e-01 -0.0780851945 #>   [36,] 0.08845612  0.0071989708  2.053648e-02  7.008056e-02  0.0375223059 #>   [37,] 0.09961286 -0.0351329313 -1.523413e-01 -9.544041e-02 -0.0453331056 #>   [38,] 0.11356007 -0.0214886478 -1.495088e-02  1.026466e-01 -0.0113022455 #>   [39,] 0.15344578 -0.0978528600 -1.345077e-01 -1.293457e-01  0.0196169418 #>   [40,] 0.18122850  0.1027933301 -3.276845e-02  8.220889e-02 -0.0607800377 #>   [41,] 0.05876735 -0.0539424979 -1.166558e-01  6.340337e-03  0.0083281112 #>   [42,] 0.11310816 -0.0041843756  2.205421e-02  1.304377e-02 -0.0430179985 #>   [43,] 0.21498877  0.0253145582 -1.413011e-01  2.514434e-01 -0.0064019855 #>   [44,] 0.04757632  0.0132340247  5.970920e-02 -7.895843e-02 -0.0096845327 #>   [45,] 0.15779434  0.0537682670 -5.153235e-02 -1.150920e-01 -0.1393891964 #>   [46,] 0.13337338 -0.0934487223  1.921124e-01 -1.064702e-01  0.0313540617 #>   [47,] 0.09047857 -0.0206907468  8.391396e-02  4.760751e-03  0.0264297663 #>   [48,] 0.18045864  0.0768087803  1.081772e-01  4.490789e-02 -0.0533274430 #>   [49,] 0.13438242 -0.0076065982  1.000814e-01  9.538451e-02  0.0018423612 #>   [50,] 0.10160970 -0.0723050625  4.531421e-02 -1.826065e-01 -0.0494386859 #>   [51,] 0.07768155  0.0504334997  4.119225e-02  7.675056e-02  0.0253039711 #>   [52,] 0.09233069 -0.1204896404 -9.294644e-02 -9.648529e-02  0.0724507134 #>   [53,] 0.11612868 -0.0490835450  1.085927e-01 -4.784667e-02  0.0199614147 #>   [54,] 0.07992348 -0.0878203013  8.134074e-03 -7.753047e-02 -0.0455054262 #>   [55,] 0.00000000  0.0000000000  0.000000e+00  0.000000e+00  0.0000000000 #>   [56,] 0.10671050 -0.0975148814  8.435716e-02 -7.076604e-03  0.0023344790 #>   [57,] 0.11338126 -0.0536558873  1.445742e-01 -1.792828e-01 -0.0205238419 #>   [58,] 0.18602773 -0.0275650776 -7.085009e-02  1.749148e-01 -0.0474180754 #>   [59,] 0.04690642 -0.0386411653  6.460194e-03 -2.342240e-02 -0.0228255007 #>   [60,] 0.18738139  0.0656259272  3.074839e-01 -4.727538e-02  0.0305996469 #>   [61,] 0.20365263 -0.0657384731  3.170364e-01 -7.357801e-02 -0.0643003636 #>   [62,] 0.22641434 -0.0767456757 -2.972422e-02  9.946433e-02 -0.1192661258 #>   [63,] 0.03780938  0.0562116986 -1.759104e-03  5.249378e-02 -0.0410692083 #>   [64,] 0.20283879  0.1389878359 -8.702177e-02  9.495809e-02  0.0856689358 #>   [65,] 0.08367839 -0.0137793809  3.629913e-02 -1.874900e-02 -0.0057938285 #>   [66,] 0.03271682 -0.0134605691 -5.682604e-02 -5.102563e-03  0.0524088423 #>   [67,] 0.16148915 -0.0025336510 -9.906576e-02 -8.450747e-02  0.0726847848 #>   [68,] 0.05649635 -0.0054614477  2.322722e-02  6.360348e-02  0.0008272741 #>   [69,] 0.00000000  0.0000000000  0.000000e+00  0.000000e+00  0.0000000000 #>   [70,] 0.00000000  0.0000000000  0.000000e+00  0.000000e+00  0.0000000000 #>   [71,] 0.15158135  0.0420364575  1.466871e-02 -1.257299e-01  0.0879283591 #>   [72,] 0.20811346  0.0561551717  1.109228e-01  1.422111e-01  0.1348825439 #>   [73,] 0.16200117  0.0067058471 -6.698115e-02  3.333705e-02 -0.2739115675 #>   [74,] 0.14653384  0.0387232872  4.456184e-02  1.624659e-01  0.1645052089 #>   [75,] 0.10989591  0.0213210987 -4.353877e-02  1.132842e-02  0.0888433143 #>   [76,] 0.13812590  0.2100440353  3.913457e-02 -7.346686e-02 -0.0289257640 #>   [77,] 0.06490062 -0.0306948773  6.102175e-03  1.140177e-01  0.1727680172 #>   [78,] 0.09869854  0.0646769731  6.604021e-02  2.178777e-02  0.0330545727 #>   [79,] 0.19666147  0.0122500314  1.688054e-01  2.911404e-01  0.0735239811 #>   [80,] 0.06723375 -0.0245347929  7.264098e-02  1.106632e-01 -0.0834006079 #>   [81,] 0.12200752  0.3712057147 -4.866886e-02 -1.586539e-01 -0.0581240417 #>   [82,] 0.10817545 -0.0928144637  7.392103e-02 -1.323248e-01 -0.0464919955 #>   [83,] 0.13696284  0.0479715040  8.152153e-02 -4.512416e-02 -0.1341935626 #>   [84,] 0.06757111  0.1542720292 -5.187090e-02 -3.351353e-02 -0.0567602896 #>   [85,] 0.10102378 -0.0358982003 -9.575379e-02  5.894039e-02  0.0489368391 #>   [86,] 0.07683263 -0.0869647006 -3.506651e-03  3.536343e-03 -0.0797179880 #>   [87,] 0.20037885 -0.1681448608  1.759043e-01  7.759855e-02  0.1294066221 #>   [88,] 0.15198232  0.0707477147  5.360159e-02  1.862361e-02  0.0490531495 #>   [89,] 0.10743373 -0.0485840983 -2.155855e-02 -1.187498e-01  0.0802479837 #>   [90,] 0.10270854  0.3085895702 -4.269260e-02 -1.273413e-01 -0.0527876080 #>   [91,] 0.12427842 -0.0481536076  1.466528e-03 -1.138413e-01  0.1026211994 #>   [92,] 0.08531992 -0.1123129159 -1.640506e-01 -6.475167e-02  0.0887692367 #>   [93,] 0.14776523  0.1695300430 -5.534235e-02  1.559638e-01  0.2019749266 #>   [94,] 0.12814766 -0.1512731829 -4.929665e-02  1.147457e-01 -0.0736074358 #>   [95,] 0.12722269  0.1628221069 -1.964931e-01 -4.168482e-02 -0.0242946600 #>   [96,] 0.12283237 -0.0177648877  1.059487e-01 -7.835023e-02 -0.0729866602 #>   [97,] 0.09510789 -0.0563739571 -8.421629e-02 -1.560954e-01  0.0200938047 #>   [98,] 0.09669720  0.0254489473  1.298738e-02  1.006725e-02 -0.0605288097 #>   [99,] 0.13890544 -0.1490790932 -2.295866e-01 -1.720180e-01  0.0997371571 #>  [100,] 0.08930250 -0.0104383465 -4.319714e-02  1.246576e-02  0.0484789792 #>                  [,6]          [,7]          [,8]          [,9]         [,10] #>    [1,]  0.0082037255  1.755618e-02 -0.1358052890  3.256127e-02  2.738373e-02 #>    [2,]  0.1182608636  6.752253e-03  0.2124889309 -9.599448e-02  4.096195e-02 #>    [3,] -0.2103418927  6.988977e-03  0.0507960724 -1.186887e-01  5.636311e-02 #>    [4,]  0.0063744109  1.288354e-01 -0.0524486621 -1.755775e-02 -6.582723e-03 #>    [5,] -0.0342381565 -4.961828e-02 -0.0258922694 -7.283735e-02 -3.549597e-02 #>    [6,] -0.0456314221 -2.788927e-02 -0.0285899124  2.655081e-02  4.252020e-02 #>    [7,]  0.0016443579  3.705585e-02  0.0102785504  5.243781e-02 -1.932784e-02 #>    [8,] -0.0264713263  1.832777e-02 -0.0188246379  2.166227e-02  2.589544e-02 #>    [9,]  0.1499264602  3.740923e-02  0.0159264826  4.915041e-02 -3.290690e-02 #>   [10,] -0.1688408538  7.935404e-02  0.1093581784 -2.553694e-02 -4.514716e-02 #>   [11,] -0.0745015184 -1.479094e-01 -0.0774959475 -3.753958e-03  4.525401e-02 #>   [12,]  0.0920466643 -2.303317e-01  0.1454547778  1.693944e-01 -1.932733e-01 #>   [13,] -0.0615743919 -8.114844e-02 -0.0729524010 -2.964818e-02 -1.083553e-01 #>   [14,] -0.1986019351  3.964442e-02 -0.2006878914  5.147700e-02  1.266573e-01 #>   [15,] -0.1018126557 -3.041354e-02 -0.1120387032 -3.046578e-02  5.415404e-02 #>   [16,] -0.1267043959  1.677301e-03 -0.0362764758  8.086664e-02  1.094514e-02 #>   [17,] -0.1494610889  1.306548e-01 -0.1429619513  4.857012e-02 -7.469654e-03 #>   [18,]  0.0415578890  1.885517e-01 -0.1609528890 -2.826865e-01 -9.538059e-02 #>   [19,]  0.2321834821  6.245207e-02  0.1365136328 -7.316628e-02  9.676180e-02 #>   [20,] -0.0835490406  1.775914e-01  0.0836985573  1.747909e-02  1.225367e-01 #>   [21,] -0.0301053041  3.952002e-02  0.0104706521 -1.575226e-02  2.444923e-02 #>   [22,]  0.0047543722  1.185903e-03 -0.1218507067 -2.395037e-02 -1.419850e-01 #>   [23,]  0.2107693463  4.482095e-01 -0.2724661119 -6.235410e-02  3.272397e-01 #>   [24,]  0.0042396977 -6.750417e-03 -0.0731376036 -3.422549e-02  2.198451e-03 #>   [25,] -0.1078639351  1.248462e-01  0.0254607614  1.469314e-02  6.133972e-02 #>   [26,] -0.1938562417 -8.254604e-02 -0.0442747031  1.547849e-01 -1.616788e-01 #>   [27,] -0.2194598198  1.056295e-01 -0.0383754549 -8.271271e-02 -1.727801e-01 #>   [28,] -0.2005986117  2.222741e-02  0.0153041388 -2.809136e-02 -1.397551e-01 #>   [29,] -0.0520729995 -1.095779e-01  0.0915989947  2.784843e-04 -3.311748e-03 #>   [30,] -0.0163036290 -1.319204e-02 -0.0743373835  7.428425e-02 -2.287570e-02 #>   [31,] -0.0173513481  9.133153e-02  0.2095625330  1.791415e-01 -1.752218e-01 #>   [32,] -0.1196049215 -4.638392e-02 -0.1262658805  1.522671e-01 -1.111735e-01 #>   [33,] -0.2809352263  8.564989e-02  0.0550244861 -1.567776e-01  1.921305e-02 #>   [34,]  0.0738905233 -1.596199e-01 -0.0174466829  2.307543e-01  1.108289e-01 #>   [35,]  0.0382526860 -1.719037e-01 -0.0653305960 -1.322733e-01 -1.575969e-02 #>   [36,]  0.1134666727  1.554013e-01 -0.0236923059  7.125158e-02  1.002145e-01 #>   [37,]  0.0720178127 -6.905394e-02  0.0951543181  3.721418e-02  2.049210e-01 #>   [38,] -0.0887021233  2.589345e-03 -0.0602989902 -2.981065e-02 -1.078486e-01 #>   [39,] -0.0346630312 -3.729702e-02 -0.1453016358 -4.542193e-02 -6.975790e-02 #>   [40,] -0.0108358926 -2.730084e-01 -0.1312092640 -8.955354e-02  1.530727e-01 #>   [41,] -0.0432495999 -8.254327e-02  0.0545067486 -2.651838e-02 -1.023614e-01 #>   [42,]  0.0261349046  8.216596e-02  0.1884743945 -7.257764e-02  1.445793e-01 #>   [43,] -0.0215724708  5.582971e-04 -0.0546812048 -8.106380e-02  3.745195e-01 #>   [44,]  0.0049911361  3.517466e-02  0.0128748578  6.849502e-03  1.890655e-02 #>   [45,] -0.0177917094  1.833537e-01  0.0451817317 -6.151938e-03 -1.071295e-02 #>   [46,] -0.0039769242 -3.662478e-02  0.1642208779  1.261548e-01 -8.170684e-02 #>   [47,] -0.0692856389  8.006212e-02  0.0009693861 -5.599107e-02  8.786727e-02 #>   [48,] -0.1910974977  2.315850e-01 -0.0775005743 -1.005480e-01 -2.809558e-02 #>   [49,] -0.0091085097 -2.496893e-02 -0.1756666356 -1.163271e-01  7.798175e-02 #>   [50,] -0.0460753698  3.493751e-02  0.0282823038  1.036624e-01  1.648374e-02 #>   [51,]  0.1241187439  8.995253e-02 -0.0838454041  4.637517e-03  9.763652e-02 #>   [52,]  0.0877888769 -2.971116e-02  0.1511263500 -1.321989e-01 -1.525105e-02 #>   [53,] -0.0264313230 -1.258062e-01 -0.0023890351  1.224651e-01 -1.010957e-01 #>   [54,] -0.0081101983  1.209672e-01 -0.0301948539 -1.055253e-01 -3.675117e-02 #>   [55,]  0.0000000000  0.000000e+00  0.0000000000  0.000000e+00  0.000000e+00 #>   [56,] -0.0212202859  2.599081e-02 -0.1274866180 -1.457923e-01 -2.250749e-01 #>   [57,]  0.0386174312  5.934826e-02  0.1733703238 -1.118553e-02  4.901067e-02 #>   [58,]  0.0567471955 -5.095934e-02 -0.2968224332  1.599467e-01  4.714217e-02 #>   [59,] -0.0670089612  6.760710e-02 -0.0199024145  1.363560e-02 -1.486642e-02 #>   [60,]  0.0488741064  1.023963e-01  0.2065567861  1.615887e-01 -4.800687e-02 #>   [61,]  0.0186954635 -9.703163e-02  0.2074814179  1.075175e-01 -7.316940e-02 #>   [62,]  0.0232134215 -2.491129e-01 -0.0547254686  3.394658e-01  1.563945e-01 #>   [63,]  0.0081264812 -1.069091e-01 -0.0166297932 -6.303892e-02  6.506098e-02 #>   [64,]  0.1661869652  1.246375e-01 -0.0512417298  2.215499e-01  8.875174e-02 #>   [65,] -0.1172481820  3.258944e-02  0.0894147626  1.321228e-01  9.610598e-02 #>   [66,]  0.0723858028  3.375514e-02 -0.0296627819  2.227296e-02  1.627265e-02 #>   [67,] -0.2193700769 -5.063997e-02 -0.1072126051 -1.308749e-02  7.858992e-02 #>   [68,] -0.0299063308 -6.007341e-02 -0.0630867368 -3.319373e-02  1.640625e-03 #>   [69,]  0.0000000000  0.000000e+00  0.0000000000  0.000000e+00  0.000000e+00 #>   [70,]  0.0000000000  0.000000e+00  0.0000000000  0.000000e+00  0.000000e+00 #>   [71,] -0.1537581362 -1.220001e-02 -0.0259483189 -1.015491e-01 -5.616671e-02 #>   [72,]  0.0800007541  9.931988e-02 -0.1101714989 -4.738449e-02  1.428203e-01 #>   [73,] -0.0719340298  1.931319e-01  0.1132906038 -1.560147e-01 -1.216052e-01 #>   [74,] -0.0709496184 -9.545424e-02 -0.1631591092 -8.105481e-02  1.808202e-03 #>   [75,] -0.0196807044  2.668306e-02 -0.0019944418 -4.762834e-02 -1.162533e-02 #>   [76,]  0.1077766561 -2.527674e-01 -0.0150398420 -2.780767e-02  3.369642e-02 #>   [77,]  0.0192642186 -6.641610e-02 -0.0575029586 -4.738535e-02 -1.471013e-01 #>   [78,] -0.0254591043 -6.027167e-02  0.0211324902 -4.470428e-02  3.231428e-02 #>   [79,]  0.1019061138  8.368479e-02 -0.1079138899 -1.530556e-01 -1.933224e-01 #>   [80,]  0.0118312765  7.697931e-02 -0.0417446591 -1.590765e-01 -1.687045e-01 #>   [81,]  0.0523005248  4.514599e-02 -0.0840670054 -1.009256e-01 -8.964816e-04 #>   [82,] -0.1011904263  1.642411e-02  0.0525662952  8.267571e-02 -6.842782e-02 #>   [83,]  0.0411888149 -6.568487e-02  0.0303517245 -7.904354e-02 -8.632940e-03 #>   [84,]  0.0265688716 -3.238745e-02 -0.0148296956 -8.240584e-02 -1.514783e-02 #>   [85,]  0.1488193318  1.010504e-01 -0.0270138695  8.017453e-02  3.931481e-02 #>   [86,]  0.0239457682 -1.233236e-02  0.1496032204 -9.880378e-02 -6.001446e-02 #>   [87,]  0.1195725338  1.389348e-01 -0.1998132982 -2.028995e-01  1.151310e-01 #>   [88,] -0.1839922045 -2.109484e-02 -0.0026063895  9.987468e-02 -8.403610e-02 #>   [89,] -0.0011494992  2.811425e-02 -0.0320130883 -9.939815e-02  3.416420e-02 #>   [90,]  0.0102500792 -9.829808e-02  0.0053329011 -4.816077e-02  2.427267e-02 #>   [91,] -0.0340709876  2.638802e-02 -0.0029631338 -3.838247e-02  1.768615e-01 #>   [92,]  0.1082518355  5.091573e-02  0.0029116233 -2.179343e-02 -9.074206e-02 #>   [93,] -0.1713452468  1.058351e-01  0.0069897145  9.317156e-02 -6.462372e-02 #>   [94,] -0.1277562704  1.089968e-01  0.0783041282 -1.534114e-01  7.353256e-02 #>   [95,]  0.2440149406  4.536836e-02  0.0089905953 -5.229490e-05 -1.230950e-01 #>   [96,] -0.1738353836 -1.452055e-03  0.1328561076  2.472979e-01  1.146347e-01 #>   [97,]  0.0140118797  6.349819e-02 -0.0767949293  2.822644e-02  1.184629e-01 #>   [98,]  0.1833469611  6.090157e-02 -0.0690701180 -3.448168e-02 -9.133753e-04 #>   [99,]  0.1143024283  6.188978e-02  0.0654862159 -2.136038e-01 -4.586789e-02 #>  [100,]  0.0603796609 -1.507634e-01 -0.0352526365  8.705684e-02 -5.932445e-04 #>  [ reached getOption(\"max.print\") -- omitted 900 rows ] #>  #> $v0 #>             [,1]         [,2]         [,3]         [,4]         [,5] #>   [1,] 0.4363139  0.179946674 -0.315080074 -0.326787297  0.066436215 #>   [2,] 0.4661557  0.013781113 -0.382995207  0.056463906  0.172208609 #>   [3,] 0.4473449  0.230189495 -0.154863109  0.241426946 -0.435326209 #>   [4,] 0.4195863 -0.022211676  0.346435282  0.081352309  0.038331158 #>   [5,] 0.4553386 -0.059152912 -0.073149881 -0.578577520  0.410366435 #>   [6,] 0.5594968 -0.007833995 -0.350538935  0.166314018 -0.791905009 #>   [7,] 0.4006508 -0.071250344  0.816952825 -0.392348489  0.136397887 #>   [8,] 0.3590271  0.053080040  0.320362412  0.051816554 -0.273015337 #>   [9,] 0.3032813 -0.052821219  0.105934124 -0.155260328 -0.065822401 #>  [10,] 0.3323697 -0.068863361 -0.091964298  0.067210520  0.039737712 #>  [11,] 0.4142427  0.361069186 -0.011108961  0.327320013 -0.253157745 #>  [12,] 0.4040934 -0.167799896 -0.201421461  0.218650133  0.020957159 #>  [13,] 0.3431421  0.079460286  0.284174292  0.247341554 -0.009206025 #>  [14,] 0.3207803  0.113037833  0.011305494  0.042300072 -0.171555120 #>  [15,] 0.4150247 -0.023160211 -0.214202504  0.102864075 -0.251885103 #>  [16,] 0.3032735  0.250448920  0.008263438  0.235018048 -0.168795097 #>  [17,] 0.3763901 -0.126334203 -0.054324642  0.342796077  0.151262951 #>  [18,] 0.4121673  0.183189215 -0.067968092  0.179118989 -0.345027171 #>  [19,] 0.3245263 -0.143544712  0.143023295 -0.186547270 -0.190423783 #>  [20,] 0.4695901  0.708434877  0.142366832 -0.048845632  0.354046351 #>  [21,] 0.3616097  0.072117894  0.044829418 -0.088213679  0.422135582 #>  [22,] 0.5460030 -0.407411929 -0.601908224  0.407192075 -0.777464615 #>  [23,] 0.4104264  0.215507618 -0.118322465 -0.391388468  0.097556837 #>  [24,] 0.3307460  0.175312711 -0.211615624 -0.065375011  0.129329298 #>  [25,] 0.3891706 -0.248135353  0.554346551  0.008562185  0.048206212 #>  [26,] 0.5368346 -0.429117174  0.832455774  0.216648358  0.573776222 #>  [27,] 0.4230870 -0.097885421  0.282618273  0.026713049  0.004562929 #>  [28,] 0.4213925 -0.200612514 -0.648773652  0.231432947  0.262236447 #>  [29,] 0.3517924 -0.020424124  0.155561044  0.153171466  0.009530487 #>  [30,] 0.4671111  0.190745836 -0.106450632 -0.030894024 -0.604674161 #>  [31,] 0.7157961  2.085653218 -0.223569680 -0.822429729 -0.161401096 #>  [32,] 0.3633076 -0.198113070 -0.267698261 -0.559756043  0.496212944 #>  [33,] 0.5093728 -0.190177083  0.554528117  0.628856350 -0.416248594 #>  [34,] 0.4055708  0.103665717 -0.122156962 -0.471794643  0.228038431 #>  [35,] 0.3554428 -0.393099563 -0.155847199  0.078634197  0.027615973 #>  [36,] 0.3833083 -0.220716359  0.251922815  0.079423079 -0.112485188 #>  [37,] 0.4580687  0.157984920  0.027420344  0.379339508  0.224348845 #>  [38,] 0.5279945  0.213360230 -0.064624488  0.800968704  0.398041645 #>  [39,] 0.4748701  0.005683889  0.407757831  0.069021948 -0.176267782 #>  [40,] 0.3443053  0.251811959  0.058146156  0.139850184  0.006727558 #>  [41,] 0.5528057 -0.842557275 -0.927416760 -0.516134180  0.368093250 #>  [42,] 0.4091233 -0.021464338 -0.116740858 -0.141668556 -0.253353216 #>  [43,] 0.5843681 -0.080199685  1.004347600  0.090704283  0.430203554 #>  [44,] 0.3556720 -0.215202286 -0.368674338  0.047707219  0.021599464 #>  [45,] 0.5186229 -0.099108613  0.261455844 -0.129641959  0.036438219 #>  [46,] 0.4147602  0.337664132 -0.328477080 -0.011675742 -0.110033900 #>  [47,] 0.2638242  0.037825077 -0.111210345  0.071020513 -0.113597154 #>  [48,] 0.3460441 -0.194006210 -0.117092043 -0.368743928 -0.245090754 #>  [49,] 0.3365389  0.003381023  0.170420766  0.196679180  0.049194131 #>  [50,] 0.3819608 -0.026156749 -0.086577117  0.120540743  0.012092539 #>  [51,] 0.4461005 -0.172551572 -0.115978703  0.298317709  0.720708982 #>  [52,] 0.4423958 -0.186661594 -0.339423434  0.254166583  0.300507220 #>  [53,] 0.4719850 -0.092157484  0.136649842  0.588972403  0.665245981 #>  [54,] 0.3906843 -0.196729765 -0.451950779 -0.155871501 -0.050302098 #>  [55,] 0.2887434 -0.086663920 -0.032376907 -0.041471509  0.234337118 #>  [56,] 0.4370057  0.141516452  0.164708094  0.132176185 -0.101772829 #>  [57,] 0.3172378  0.013370477  0.042065394  0.061518301  0.119876823 #>  [58,] 0.4552787  0.101421160  0.162916330 -0.245343937  0.038581262 #>  [59,] 0.5238816  0.341180152 -0.081934613  0.535242135  0.286001089 #>  [60,] 0.4779834 -0.425841355  0.019871813 -0.079807646 -0.424624901 #>  [61,] 0.2677482 -0.212813895 -0.214465507 -0.158320946 -0.155081165 #>  [62,] 0.4706815 -0.272877302 -0.878084604  0.014337937  0.327980057 #>  [63,] 0.4665063 -0.178204948  0.571577707 -0.586664791  0.090836797 #>  [64,] 0.5591862  0.498998944 -0.479507616  0.859009581  0.915993780 #>  [65,] 0.4224232 -0.062624722  0.445613343  0.054685158 -0.235053446 #>  [66,] 0.4093037 -0.241287995 -0.016470435  0.344308123 -0.259927041 #>  [67,] 0.4051582  0.162265302  0.320435807 -0.142095668  0.112129666 #>  [68,] 0.2795602 -0.015909295 -0.006869583 -0.067585760 -0.086615196 #>  [69,] 0.4223210  0.025864564  0.235933421  0.129613500  0.211560985 #>  [70,] 0.4205262  0.242968171 -0.181201508  0.246284173 -0.141664406 #>  [71,] 0.4251534 -0.243902083 -0.173030374 -0.109566498 -0.444134891 #>  [72,] 0.4583153  0.368610893 -0.089755985  0.098269877 -0.320138460 #>  [73,] 0.4376279  0.156390125  0.252690646  0.311506846 -0.281629007 #>  [74,] 0.3640983 -0.206763322  0.020413420 -0.262786677  0.281154536 #>  [75,] 0.3834990 -0.276267167  0.015673538 -0.324989763  0.313068206 #>  [76,] 0.3099431  0.146119870 -0.033869175  0.164146052 -0.279928561 #>  [77,] 0.4605113 -0.855183937  0.344252019 -0.613277475  0.057724262 #>  [78,] 0.4416019 -0.141328605  0.400668075  0.096703187 -0.715070087 #>  [79,] 0.4531894 -0.012859027  0.472819946  0.053374070  0.070175002 #>  [80,] 0.2578547  0.027360967  0.095134062  0.086788646 -0.063793263 #>  [81,] 0.3518082 -0.193797768  0.064193268 -0.293682365 -0.205845764 #>  [82,] 0.3837206 -0.247916951 -0.441574937 -0.514007010  0.311407024 #>  [83,] 0.3380892  0.155582708  0.134780156 -0.057661219 -0.403911188 #>  [84,] 0.3792691 -0.259349891 -0.132313509 -0.047242570  0.483133156 #>  [85,] 0.3939411  0.130002652  0.214959188 -0.598929026  0.048220485 #>  [86,] 0.3989488 -0.201250537 -0.301260305  0.183392695 -0.201783930 #>  [87,] 0.4392824 -0.495390842 -0.036675265 -0.307987506 -0.437125848 #>  [88,] 0.4045503  0.022213788  0.351311547  0.057868734 -0.164312971 #>  [89,] 0.4280298 -0.363375489  0.166747291 -0.121173075  0.002758800 #>  [90,] 0.4251723 -0.013055520  0.140160193 -0.484218983 -0.116260578 #>  [91,] 0.3432695  0.061511095 -0.053840619 -0.204079547 -0.305658754 #>  [92,] 0.3426176  0.337127705  0.132666159 -0.040216408  0.244653674 #>  [93,] 0.4240007  0.065777151  0.133097879 -0.363346797 -0.074397132 #>  [94,] 0.4038274  0.324169650 -0.111063716 -0.362306628  0.467187217 #>  [95,] 0.3259090 -0.213711408 -0.128804008 -0.281126041 -0.308963679 #>  [96,] 0.4251120  0.235991480 -0.039157291 -0.450794157  0.362191712 #>  [97,] 0.5223341 -0.005596507 -0.463097655 -0.058960309 -0.589022564 #>  [98,] 0.2941366 -0.149584695 -0.291574664 -0.045437296  0.038979915 #>  [99,] 0.4551014  0.041774725 -0.040942217  0.016506433 -0.054520715 #> [100,] 0.5248099 -0.228192186 -0.093476763  0.899526817  0.056731678 #>                [,6]        [,7]         [,8]          [,9]        [,10] #>   [1,]  0.481782016  0.25760098 -0.285280221  0.4084509907 -0.025329368 #>   [2,] -0.610034494  0.12988455  0.181806910  0.0579598169  0.164345556 #>   [3,]  0.059154558  0.12197992  0.015896078 -0.2361487522 -0.270766572 #>   [4,] -0.286560944  0.45698522  0.003751587 -0.2443727007  0.228938759 #>   [5,] -0.409362049  0.03041923  0.049805648  0.1683099959 -0.110079049 #>   [6,] -0.182252787  0.49263131 -0.418003366  0.2256775331  0.200869999 #>   [7,]  0.230786349 -0.31040145  0.366348934  0.6646698170  0.001180706 #>   [8,] -0.132717372  0.19982563  0.350229204  0.1968817372 -0.049861341 #>   [9,]  0.184140317 -0.11481885  0.211608303  0.0356962360 -0.156122233 #>  [10,]  0.226195278 -0.46674222 -0.014508745  0.2869191939 -0.119321469 #>  [11,]  0.049369387 -0.64828957 -0.099483166 -0.3764568080  0.386172281 #>  [12,] -0.406114948 -0.24775444 -0.250556313  0.2322811387  0.369730756 #>  [13,]  0.095531890 -0.19516248 -0.206367769 -0.3567833938 -0.242642505 #>  [14,] -0.285067226 -0.04556584 -0.467397491  0.0095843952  0.054990725 #>  [15,]  0.024177668  0.21517321  0.461832088 -0.0048406962  0.258989830 #>  [16,]  0.143978988  0.04431052  0.001675478 -0.2124206606 -0.210675702 #>  [17,] -0.223254926  0.30040359  0.327730844  0.1996481562  0.214627555 #>  [18,] -0.667385028  0.12057182  0.106252040 -0.3062090341 -0.081114337 #>  [19,] -0.069691148 -0.14751658 -0.156458470  0.0307483171 -0.243568963 #>  [20,] -0.518922817  0.27752045  0.065958568  0.2239537970 -0.013904826 #>  [21,]  0.154288176  0.23440465 -0.396441667 -0.0496463892  0.506375165 #>  [22,]  0.423662890 -0.81492750 -0.506764904  0.8384093890 -0.297388638 #>  [23,] -0.254949745 -0.30891828 -0.054690476 -0.1198241130  0.087549971 #>  [24,] -0.180811148 -0.12029081  0.022737991 -0.0766239297  0.045676769 #>  [25,]  0.266752544 -0.16392658  0.410946666  0.3440945959  0.021694537 #>  [26,]  0.297656124 -0.15586392 -0.041856331 -0.2596467291  0.539551674 #>  [27,]  0.341512067 -0.69708573  0.099623373  0.3220009058 -0.140068027 #>  [28,] -0.129876957 -0.40896802  0.522137268 -0.0395594149 -0.433674778 #>  [29,] -0.084492047 -0.03578238  0.136948231 -0.1265224185  0.127583626 #>  [30,]  0.226417656  0.59109558  0.321672491  0.0105354953 -0.334354892 #>  [31,]  0.343997355 -0.67164066 -0.151911635 -0.5089769609 -0.085961887 #>  [32,] -0.101561854  0.15946079 -0.193551599 -0.2873703113  0.076992042 #>  [33,]  0.119842847  0.18026314 -0.195845280 -1.0019734092 -0.987198224 #>  [34,] -0.553597857 -0.13001265  0.339952634 -0.3954346264  0.254633052 #>  [35,]  0.019545879 -0.17935598  0.098127229  0.0601797089 -0.194047168 #>  [36,]  0.360214104 -0.17620839 -0.319946356 -0.3366031473  0.079129925 #>  [37,] -0.247257405 -0.82650955 -0.269729722 -0.4181068329  0.331287531 #>  [38,]  0.365400296  0.48149564 -0.671148858  0.3177959208  0.366932183 #>  [39,]  0.093584094 -0.09321606  0.562354356  0.2996740427 -0.540711296 #>  [40,] -0.104893995 -0.20736002 -0.182792935 -0.2338693925  0.112849490 #>  [41,]  0.545540284  0.08504268  0.714375738 -0.9996332528  0.100752030 #>  [42,] -0.548224689 -0.12303212 -0.535741579 -0.0651966479  0.212773862 #>  [43,]  0.436977975 -0.28767014  0.314943423 -0.0958137852  0.127127068 #>  [44,] -0.043673371 -0.25980734 -0.137575582  0.0121802862 -0.320346754 #>  [45,] -0.094557042  0.21462186  0.070283985 -0.0095187786  0.293456888 #>  [46,]  0.451156599  0.07302565 -0.006543562 -0.0771259504 -0.258970672 #>  [47,] -0.055687228  0.33265600 -0.062553518  0.0603675691 -0.016432760 #>  [48,]  0.244214776  0.12180675 -0.151868881  0.1027166251  0.049744967 #>  [49,] -0.134921673 -0.19192379 -0.103077349 -0.1671172167  0.019519433 #>  [50,] -0.449906268 -0.28386737  0.123581545  0.3103719079 -0.030251088 #>  [51,]  0.024920759 -0.49941923 -0.029316608 -0.0163655839 -0.614729020 #>  [52,] -0.253411705 -0.05056377  0.277276807  0.2325299664  0.091206609 #>  [53,]  0.116121326 -0.07178955 -0.376133711 -0.3155561864 -0.526506954 #>  [54,] -0.082384389  0.15915161 -0.310366783  0.2729422012  0.272222025 #>  [55,] -0.169860109 -0.09107951 -0.242383826 -0.1460245605  0.160399064 #>  [56,]  0.846130811  0.54098706 -0.298725418  0.2472346883  0.162116297 #>  [57,]  0.418563738  0.05957853  0.095695564  0.0721788384 -0.148471132 #>  [58,]  0.601764991  0.13309791 -0.048225120 -0.2014094903 -0.030493776 #>  [59,] -0.053308824 -0.05380135 -0.020579174 -0.2610679325  0.420857432 #>  [60,] -0.016528630 -0.20737945 -0.241616423 -0.6601719364 -0.229475510 #>  [61,] -0.158858686 -0.03730031 -0.099463142  0.1200020735  0.186660615 #>  [62,]  0.866786153  0.24086837 -0.015583169  0.3584860098 -0.282107007 #>  [63,] -0.202340181  0.17423843  0.573559625  0.3884593501 -0.070648799 #>  [64,] -0.266064270  0.45245887  0.332676349  0.5533360140 -0.766605602 #>  [65,] -0.107652955  0.12262826  0.185495244 -0.0702458530  0.504544423 #>  [66,] -0.053207382 -0.10830163  0.077246973  0.2571926846  0.217516989 #>  [67,] -0.233360249  0.05128766  0.215044424  0.1047274747 -0.191840168 #>  [68,] -0.108143623  0.18765527  0.038098193  0.0728725180  0.030248955 #>  [69,] -0.308747264 -0.31458570 -0.205415147  0.1679418422 -0.111573895 #>  [70,] -0.151090311  0.53137062  0.535023337  0.2122410987 -0.492540827 #>  [71,] -0.841289747 -0.20060735 -0.438058390  0.2599349072 -0.073909465 #>  [72,]  0.342539245 -0.24757401 -0.216142726  0.3418555711  0.036045659 #>  [73,]  0.080605807  0.25410399 -0.348231197 -0.2514283441  0.387060485 #>  [74,]  0.124139049 -0.10786984 -0.238883699 -0.0630936758  0.109388078 #>  [75,] -0.212418856 -0.05209686 -0.370153975  0.0434637270 -0.560132333 #>  [76,] -0.113765276  0.05079338  0.248896193  0.2505435803  0.245209911 #>  [77,] -0.081275866 -0.07844426 -0.793728911  0.3345103585 -0.268262281 #>  [78,]  0.006672779 -0.24078530  0.446149265 -0.2455031425 -0.492045032 #>  [79,]  0.494226217  0.49436217 -0.658551720  0.0862295737  0.421625746 #>  [80,] -0.147255577  0.10147819  0.082825002  0.0295000220 -0.192071024 #>  [81,] -0.310937132  0.28058820 -0.260206715 -0.0045545050 -0.180675325 #>  [82,]  0.136053865 -0.11075172 -0.043452546  0.0005504445  0.573735349 #>  [83,] -0.005014113 -0.14508726  0.118895620  0.0626020357 -0.110616781 #>  [84,] -0.061839450 -0.34319400 -0.050851691  0.0393959322  0.074651701 #>  [85,]  0.089028968  0.18631579 -0.003329825  0.0826109561 -0.121988074 #>  [86,]  0.104584418 -0.16299029  0.456305410 -0.3408128507  0.665242193 #>  [87,] -0.111898066  0.57223816  0.141351440 -0.5475082968 -0.412198534 #>  [88,] -0.440547596 -0.09196626  0.364991811  0.7714971069  0.406288776 #>  [89,] -0.033725870  0.09333627 -0.092126014  0.0849237718 -0.213098763 #>  [90,]  0.158024584  0.25302793  0.564055497 -0.1864998552  0.254361785 #>  [91,] -0.190287376  0.23672488  0.164328178 -0.0745370414 -0.017337348 #>  [92,]  0.011597658  0.26087356  0.071386056  0.3635546858 -0.133187248 #>  [93,] -0.560523017 -0.08026301 -0.243995692  0.2317780870 -0.042879326 #>  [94,] -0.128258769  0.21969240 -0.042432132 -0.2082438707 -0.220749512 #>  [95,] -0.194650673 -0.13414601 -0.287230954 -0.1740439514 -0.254752699 #>  [96,]  0.161322266  0.21351958  0.024932466  0.0967639842 -0.196387246 #>  [97,]  0.650658500 -0.39096662  0.668728187  0.4103401566  0.647318905 #>  [98,] -0.062974537  0.02229117 -0.079271921 -0.2593859669  0.306350800 #>  [99,]  0.019409229  1.06754868 -0.469678965 -0.0046115672  0.113595190 #> [100,] -0.291035202  0.18248189  0.513347734 -0.4542494074  0.616360547 #>  #> $w #> 100 x 100 sparse Matrix of class \"dgCMatrixsuppressing 67 columns and 70 rows in show(); maybe adjust 'options(max.print= *, width = *)' #>  .............................. #>                                                                                 #>  [86,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ...... #>  [87,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ...... #>  [88,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ...... #>  [89,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ...... #>  [90,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ...... #>  [91,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ...... #>  [92,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ...... #>  [93,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ...... #>  [94,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ...... #>  [95,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ...... #>  [96,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ...... #>  [97,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ...... #>  [98,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ...... #>  [99,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ...... #> [100,] . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ...... #>  #> $index #>        [,1] [,2] [,3] [,4] [,5] [,6] #>   [1,]    2   11   12    3   21   13 #>   [2,]    1   12    3   11   13   22 #>   [3,]   13    2    4   12   14    1 #>   [4,]   14    5    3   15   13   24 #>   [5,]   15    4    6   14   16   25 #>   [6,]   16    7    5   17   15   26 #>   [7,]   17    6    8   16   18   27 #>   [8,]   18    9    7   19   17   10 #>   [9,]   10   19    8   20   18   29 #>  [10,]    9   20   19    8   30   18 #>  [11,]   12    1   21    2   22   13 #>  [12,]   11    2   13   22    1    3 #>  [13,]    3   12   23   14    2   22 #>  [14,]    4   15   24   13    5   25 #>  [15,]    5   14   25   16    4   24 #>  [16,]    6   17   26   15    7   27 #>  [17,]    7   16   27   18    6   26 #>  [18,]    8   19   28   17    9   29 #>  [19,]   20    9   18   29   10    8 #>  [20,]   19   10   30    9   29   18 #>  [21,]   22   11   31   12   32   23 #>  [22,]   21   23   12   32   11   13 #>  [23,]   22   13   24   33   12   14 #>  [24,]   25   14   23   34   15   13 #>  [25,]   24   15   35   26   14   34 #>  [26,]   27   16   36   25   17   37 #>  [27,]   26   17   28   37   16   18 #>  [28,]   29   18   27   38   19   17 #>  [29,]   30   28   19   39   20   18 #>  [30,]   29   20   40   19   39   28 #>  [31,]   32   41   21   42   22   33 #>  [32,]   31   42   33   22   41   43 #>  [33,]   43   32   34   23   42   44 #>  [34,]   35   44   33   24   45   43 #>  [35,]   34   45   25   36   44   24 #>  [36,]   37   46   26   35   47   27 #>  [37,]   36   47   38   27   46   48 #>  [38,]   48   39   37   28   49   47 #>  [39,]   40   49   38   29   50   48 #>  [40,]   39   50   30   49   29   38 #>  [41,]   42   31   51   32   52   43 #>  [42,]   41   32   43   52   31   33 #>  [43,]   33   42   44   53   32   34 #>  [44,]   45   34   43   54   35   33 #>  [45,]   44   35   46   55   34   36 #>  [46,]   47   36   45   56   37   35 #>  [47,]   46   37   48   57   36   38 #>  [48,]   38   49   47   58   39   37 #>  [49,]   50   39   48   59   40   38 #>  [50,]   49   40   60   39   59   48 #>  [51,]   52   61   41   62   42   53 #>  [52,]   51   62   53   42   61   63 #>  [53,]   63   52   54   43   62   64 #>  [54,]   55   64   53   44   65   63 #>  [55,]   54   65   56   45   64   66 #>  [56,]   57   66   55   46   67   65 #>  [57,]   56   67   58   47   66   68 #>  [58,]   68   59   57   48   69   67 #>  [59,]   60   69   58   49   70   68 #>  [60,]   59   70   50   69   49   58 #>  [61,]   62   51   71   52   72   63 #>  [62,]   61   52   63   72   51   53 #>  [63,]   53   62   64   73   52   54 #>  [64,]   65   54   63   74   55   53 #>  [65,]   64   55   75   66   54   74 #>  [66,]   67   56   76   65   57   77 #>  [67,]   66   57   68   77   56   58 #>  [68,]   58   69   67   78   59   57 #>  [69,]   70   59   68   79   60   58 #>  [70,]   69   60   80   59   79   68 #>  [71,]   72   81   61   82   62   73 #>  [72,]   71   73   82   62   81   83 #>  [73,]   72   83   74   63   82   84 #>  [74,]   75   84   73   64   85   83 #>  [75,]   74   85   65   76   84   64 #>  [76,]   77   86   66   75   87   67 #>  [77,]   76   87   78   67   86   88 #>  [78,]   79   88   77   68   89   87 #>  [79,]   80   78   89   69   90   88 #>  [80,]   79   90   70   89   69   78 #>  [81,]   82   91   71   92   72   83 #>  [82,]   81   92   83   72   91   93 #>  [83,]   93   82   73   84   92   72 #>  [84,]   94   85   74   83   95   75 #>  [85,]   95   84   75   86   94   74 #>  [86,]   96   87   76   85   97   77 #>  [87,]   97   86   77   88   96   76 #>  [88,]   98   89   78   87   99   79 #>  [89,]   90   99   88   79  100   98 #>  [90,]   89  100   80   99   79   88 #>  [91,]   92   81   82   93   71   83 #>  [92,]   91   82   93   81   83   72 #>  [93,]   83   92   94   82   84   91 #>  [94,]   84   95   93   85   83   74 #>  [95,]   85   94   96   84   86   75 #>  [96,]   86   97   95   87   85   76 #>  [97,]   87   96   98   86   88   77 #>  [98,]   88   99   97   89   87  100 #>  [99,]  100   89   98   90   88   79 #> [100,]   99   90   89   98   80   88 #>"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_lrc.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster spatial transcriptomics data — smooth_lrc","title":"Cluster spatial transcriptomics data — smooth_lrc","text":"Cluster spatial transcriptomics data","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_lrc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster spatial transcriptomics data — smooth_lrc","text":"","code":"smooth_lrc(input, lambda, k, n_clust, epsilon = 0.001, maxiter = 1000)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_lrc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster spatial transcriptomics data — smooth_lrc","text":"input SummarizedExperiment object containing counts assay row/col coordinates. lambda positive numeric; penalization parameter. k integer; indicates desired rank singular value decomposition. n_clust integer; number clusters. epsilon positive numeric; convergence criterion. maxiter positive integer; maximum desired iterations","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_lrc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster spatial transcriptomics data — smooth_lrc","text":"SummarizedExperiment object u, v cluster labels.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_lrc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster spatial transcriptomics data — smooth_lrc","text":"","code":"sce <- example_sce() lambda <- 5 k <- 10 n_clust <- 5 epsilon <- 1e-3 maxiter <- 5 smooth_lrc(sce, lambda, k, n_clust, epsilon, maxiter) #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC...\" #> iteration: 1 | convergence: 0.105628 | 0.0332228 | 1 #> iteration: 2 | convergence: 0.0936244 | 0.0310137 | 0.0046088 #> iteration: 3 | convergence: 0.0864356 | 0.0309608 | 0.00439616 #> iteration: 4 | convergence: 0.082348 | 0.0316281 | 0.00435859 #> iteration: 5 | convergence: 0.080331 | 0.0326429 | 0.00447897 #> [1] \"Clustering right singular vectors...\" #> fitting ... #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #> [1] \"Done!\" #> class: SummarizedExperiment  #> dim: 1000 100  #> metadata(2): smooth_u smooth_v #> assays(2): counts logcounts #> rownames(1000): Feature 1 Feature 2 ... Feature 999 Feature 1000 #> rowData names(0): #> colnames(100): Pixel 1 Pixel 2 ... Pixel 99 Pixel 100 #> colData names(3): row col smooth_cluster"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Main smoothLRC algorithm — smooth_model","title":"Main smoothLRC algorithm — smooth_model","text":"Main smoothLRC algorithm","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main smoothLRC algorithm — smooth_model","text":"","code":"smooth_model(x, u_init, v_init, w, index, lambda, epsilon, maxiter)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main smoothLRC algorithm — smooth_model","text":"x sparse matrix; assay matrix u_init matrix; u initialization matrix v_init matrix; v initialization matrix w matrix; distance matrix. null, computed specification k nearest neighbors. index w indicies. lambda positive numeric; penalization parameter. epsilon positive numeric; convergence criterion. maxiter positive integer; maximum desired iterations","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main smoothLRC algorithm — smooth_model","text":"SummarizedExperiment object u, v cluster labels.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Main smoothLRC algorithm — smooth_model","text":"","code":"sce <- example_sce() x <- SummarizedExperiment::assay(sce) coords <- SummarizedExperiment::colData(sce)[, c(\"col\", \"row\")] k <- 10 init <- smooth_init(x, coords, k) lambda <- 1 epsilon <- 1e-3 maxiter <- 5 smooth_model(x, init$u0, init$v0, init$w, init$index, lambda, epsilon, maxiter) #> iteration: 1 | convergence: 0.100855 | 0.0365106 | 1 #> iteration: 2 | convergence: 0.078486 | 0.0315489 | 0.0049813 #> iteration: 3 | convergence: 0.074813 | 0.0349534 | 0.00510227 #> iteration: 4 | convergence: 0.0747641 | 0.0366297 | 0.00539172 #> iteration: 5 | convergence: 0.0757715 | 0.0377629 | 0.00586665 #> $u #>                  [,1]          [,2]          [,3]          [,4]          [,5] #>    [1,]  0.1083777070 -0.0354052461 -0.2127396816  3.889796e-02  2.061351e-01 #>    [2,]  0.1191301297 -0.1122869744 -0.0667367998 -2.950197e-01 -1.598159e-01 #>    [3,] -0.0081486645  0.0167806432 -0.0906955062  8.180674e-02  5.277926e-02 #>    [4,] -0.0176942193  0.0606960810 -0.0628081679  3.173045e-02  5.281364e-02 #>    [5,]  0.1179599087 -0.2500282189  0.2207366155 -9.531884e-02  8.029473e-02 #>    [6,]  0.0710079104 -0.1603116857  0.1661749459 -9.631528e-02  2.231337e-02 #>    [7,]  0.0834125292  0.0336721301 -0.0976206353 -1.350441e-02  1.056796e-01 #>    [8,]  0.0301487232 -0.1741371256 -0.1689775208  2.930766e-02  1.017080e-01 #>    [9,]  0.0149719756 -0.0244946470 -0.0242551129  1.732022e-02  5.266398e-02 #>   [10,]  0.1289725599 -0.2121181285 -0.2249050046  1.419998e-01  1.034201e-01 #>   [11,] -0.0024162313  0.0066851417 -0.0194692645 -7.279151e-03  3.998622e-02 #>   [12,]  0.1466859372 -0.1752669397  0.0099262424  1.931291e-01  1.025124e-01 #>   [13,]  0.1169199324 -0.0719432932 -0.0478807963  3.024994e-01 -1.087086e-01 #>   [14,]  0.1726297175  0.2359010153 -0.1508182944  1.240570e-01  1.043995e-01 #>   [15,]  0.0331913336 -0.1672276603  0.0154382092  1.625936e-02 -8.339746e-02 #>   [16,]  0.0524551401 -0.0058220179  0.0822475906  6.977207e-02  1.155847e-01 #>   [17,]  0.0970732758  0.0073486237  0.0040847726 -3.402174e-02 -2.340510e-02 #>   [18,]  0.0759580813  0.1901663914 -0.0946782146  1.069513e-01 -2.073360e-01 #>   [19,]  0.0544814131 -0.0211011343  0.0438150798  4.825488e-02 -4.497826e-02 #>   [20,]  0.1782086646 -0.1122217435  0.1977621554 -4.860403e-02  1.901883e-01 #>   [21,]  0.0817204072 -0.1112645508  0.0357653913 -6.237901e-03  1.093864e-01 #>   [22,]  0.2169311706 -0.1014287543 -0.1568382898 -1.298317e-01 -8.688728e-02 #>   [23,]  0.1281287830  0.0705302348 -0.0050421664  1.790838e-01  2.150104e-04 #>   [24,]  0.0655522501  0.0304144531  0.0756271416 -7.403924e-02  1.281246e-02 #>   [25,]  0.0053573600  0.0101540271 -0.0217173813 -4.704910e-02  5.784135e-02 #>   [26,] -0.0023861685  0.0631918612 -0.0471690507 -7.991550e-02  2.294711e-02 #>   [27,]  0.0684289562 -0.0368942405  0.0039036498  1.616442e-01 -9.801511e-02 #>   [28,]  0.0382059832  0.0360834496  0.0301632421  1.082234e-01  7.635465e-02 #>   [29,]  0.0062220394  0.0247696827 -0.0702801576 -1.020797e-01  5.526573e-02 #>   [30,]  0.0110603609 -0.0953797097 -0.0326783235  4.337333e-02  5.536753e-02 #>   [31,] -0.0340375135 -0.0111314575 -0.0515457897  8.046665e-02  1.298147e-02 #>   [32,]  0.1081409225 -0.1663355607 -0.1025356867  2.163588e-01  3.985421e-02 #>   [33,]  0.1240973288  0.0394865672 -0.0803483337  1.126687e-01  2.064645e-01 #>   [34,]  0.2453612972  0.3128781664 -0.0113224782  2.412342e-01  2.734071e-01 #>   [35,]  0.0516330824 -0.0238444502  0.0263094844  6.650258e-02  1.435451e-01 #>   [36,]  0.0148235833 -0.1545576207 -0.1912475233  6.406690e-02  6.953487e-02 #>   [37,]  0.0631215114 -0.1327880694  0.1216061738 -1.473278e-01 -1.287140e-01 #>   [38,]  0.0410566424  0.0574550592 -0.0191950289  6.640743e-03  4.842399e-02 #>   [39,]  0.0294166785  0.0709192928 -0.0284024551  1.106737e-01  2.267199e-02 #>   [40,]  0.0597363488 -0.1287611196 -0.1155599320  7.995480e-02  1.281359e-01 #>   [41,]  0.0914970670 -0.1147732022  0.1618521952  1.432425e-01 -2.251595e-01 #>   [42,]  0.0575421352  0.1278667409 -0.0678775032 -3.552599e-03  9.567521e-02 #>   [43,]  0.0978631724 -0.2185571411 -0.2053644320 -4.450497e-02  5.650955e-02 #>   [44,]  0.0816963867 -0.0624322380 -0.0123845974  3.992492e-02  9.899635e-02 #>   [45,]  0.0581662540  0.0827785145 -0.0959186552 -1.139117e-01 -3.554524e-02 #>   [46,]  0.0784519991  0.0910770136 -0.0193754226 -1.571268e-01 -1.174156e-01 #>   [47,]  0.0337601295  0.0193190144  0.0580014799 -3.527817e-02 -3.278516e-02 #>   [48,]  0.1074468020  0.0277575653  0.1788371722 -7.050620e-02  2.828579e-01 #>   [49,]  0.1350357672 -0.2624123332  0.0875885800  6.235541e-02 -2.152519e-01 #>   [50,]  0.1639678027 -0.0476315836  0.2044345894  1.630535e-01  4.300680e-02 #>   [51,]  0.1684833440  0.0348138498 -0.0197504081 -1.673854e-01  1.001301e-01 #>   [52,]  0.0246335824  0.0114673419 -0.0951013163  1.077114e-01 -5.844629e-02 #>   [53,] -0.0346473787 -0.0177851600 -0.0241719606  3.428127e-02  6.604506e-02 #>   [54,]  0.0812708935 -0.0475737425 -0.0140179016  9.041103e-02 -6.782722e-02 #>   [55,]  0.0749679564  0.2875408480 -0.1762851417  1.346604e-01  9.366965e-02 #>   [56,]  0.2170667764  0.0672308598  0.1197858511  1.231262e-01  2.221271e-01 #>   [57,]  0.0134863703  0.0163893688 -0.1039813406  7.912568e-02  9.226765e-02 #>   [58,]  0.0321870780  0.0249778833 -0.0293483289 -1.517199e-01 -8.383456e-02 #>   [59,]  0.1245413075 -0.0964513405 -0.0501381169  3.489395e-02  1.720345e-02 #>   [60,]  0.0777212340 -0.0392228045 -0.0822778038  8.688380e-02  4.492201e-02 #>   [61,]  0.0060639436 -0.0331449263  0.0111058125  1.092287e-01  7.562384e-02 #>   [62,]  0.1069808628 -0.1639447464  0.0191075855 -2.358006e-01  4.718644e-02 #>   [63,]  0.1377805647  0.1491715767  0.0218224299  1.816447e-01  5.930494e-02 #>   [64,]  0.1368024642  0.0036854520 -0.0459101445  9.985028e-02 -2.008563e-01 #>   [65,]  0.1259197759  0.0463875833  0.1796404899  7.076691e-02  2.297483e-01 #>   [66,]  0.0275046027 -0.0545692752 -0.0662354356  1.920664e-01 -9.929676e-02 #>   [67,]  0.0818264564  0.0353451840 -0.0445102419 -7.358143e-02  1.480695e-01 #>   [68,]  0.1972531290 -0.2889417284 -0.0359727010 -2.713422e-02  2.070368e-01 #>   [69,] -0.0532179353 -0.0094100720 -0.0454988637  2.165533e-02  4.118318e-02 #>   [70,]  0.0927215878  0.0124293374  0.0170005808 -1.491890e-01 -2.351375e-02 #>   [71,]  0.1820911549 -0.2446290782 -0.2690066199 -1.340971e-01 -3.868277e-02 #>   [72,]  0.0430426636  0.0004847587  0.0091060833 -5.438873e-02  4.691102e-02 #>   [73,] -0.0035723058  0.0014133732 -0.0317192756 -4.297325e-02  5.455320e-02 #>   [74,] -0.0532179353 -0.0094100720 -0.0454988637  2.165533e-02  4.118318e-02 #>   [75,]  0.0469543998 -0.0194368129  0.0037438517 -1.399398e-01 -1.339294e-02 #>   [76,]  0.1360024534 -0.0297088458 -0.1682287682  4.615101e-03  9.318638e-02 #>   [77,]  0.0542701929  0.0585789265 -0.0003886845 -1.825571e-01 -1.081135e-01 #>   [78,] -0.0045764072  0.0456200595  0.0054517184  3.461558e-02  1.466113e-01 #>   [79,]  0.0437492278  0.0131723104 -0.0215200460  1.065379e-01  2.423974e-02 #>   [80,]  0.0629760360 -0.1001522452  0.1817406787  3.333563e-02  1.297002e-01 #>   [81,]  0.0615863169 -0.0809969937 -0.0887675380 -1.858156e-01 -1.289805e-01 #>   [82,]  0.0607205068 -0.0254741290 -0.0203510826 -5.712611e-02  7.071907e-02 #>   [83,]  0.0901650589  0.1283933400  0.1154665604  3.336221e-03  2.198291e-01 #>   [84,]  0.0642213999 -0.1222108707  0.0286010826 -1.118478e-01  5.128323e-02 #>   [85,]  0.0490364704 -0.0066101699  0.0185336134  4.484203e-02  8.130802e-02 #>   [86,]  0.1752146372 -0.0764095190 -0.0624594775 -1.089525e-01  1.948355e-01 #>   [87,]  0.0317408878 -0.0306071934  0.0559000146  6.942121e-02  1.178828e-01 #>   [88,]  0.0287359255 -0.0131953803 -0.0494199935  1.087155e-02  9.198400e-02 #>   [89,] -0.0310091601  0.0028282965 -0.0376714136 -2.590925e-02 -2.190751e-02 #>   [90,]  0.1526872309  0.0791147586  0.0224681684  7.538765e-02 -1.146824e-01 #>   [91,]  0.0760144820  0.0159639962 -0.0517137227 -6.179767e-02  5.546741e-03 #>   [92,]  0.0281696059 -0.1685152224 -0.2033158998  6.908023e-02  6.329354e-02 #>   [93,]  0.0005809181 -0.0484160924 -0.0974044876 -8.131562e-02  4.161143e-02 #>   [94,]  0.0891397934 -0.1897415252 -0.1918725573  4.400389e-02 -6.093672e-02 #>   [95,]  0.0423692840  0.0552715317 -0.0284179816 -7.372349e-03  1.373051e-01 #>   [96,]  0.1084640824 -0.0568720196  0.0018291586  2.176282e-01 -1.058953e-01 #>   [97,]  0.1238683628  0.1536762065 -0.0779470683  1.866620e-02 -1.492681e-01 #>   [98,]  0.0524186044 -0.0892079861  0.0174633017  2.062466e-02  8.334599e-02 #>   [99,]  0.2461784792  0.3478749350 -0.2069712311  2.782601e-01 -1.424783e-01 #>  [100,]  0.1074793639  0.0496584086 -0.0481426027 -1.245800e-01 -5.289405e-02 #>                  [,6]          [,7]          [,8]          [,9]         [,10] #>    [1,] -0.1926752579 -0.0741384171  0.2053732473  1.184688e-01 -0.0778130531 #>    [2,]  0.0908883092 -0.0311946723 -0.0179926380  1.159522e-01  0.1397844194 #>    [3,]  0.0507003098 -0.0627989511 -0.0172240861  6.120430e-02 -0.1058687795 #>    [4,]  0.0197152192 -0.0173160845 -0.0069839315  4.489775e-02 -0.0244949691 #>    [5,]  0.2410032840 -0.0647447085 -0.0095223048  2.127055e-01 -0.1218505922 #>    [6,]  0.1157601040 -0.1047539977  0.0017646960  1.280156e-01 -0.0673140169 #>    [7,] -0.0267470295  0.0328862002 -0.1393919773 -1.726340e-02 -0.1263010781 #>    [8,] -0.1580268295 -0.0978418127 -0.0475090896  3.942302e-02 -0.0989085111 #>    [9,]  0.1072645379 -0.0263718279 -0.0708434064  4.219578e-02 -0.0945652199 #>   [10,]  0.0370619925  0.1900245388 -0.0531624712 -9.519961e-02 -0.0743050841 #>   [11,]  0.0107450648 -0.0611468897 -0.0623137447  5.241691e-02 -0.0310010834 #>   [12,]  0.1509038742 -0.2002187739  0.0467907030  9.705166e-02 -0.1135620275 #>   [13,] -0.1632187678  0.1017071686 -0.2131508068  2.646092e-01  0.1881563159 #>   [14,]  0.2192137030  0.0661847432  0.0687680909  1.639846e-01 -0.1717605427 #>   [15,]  0.1687353298  0.0066340906 -0.1232949135  1.058999e-01 -0.0296576962 #>   [16,] -0.0342175944  0.1434436936 -0.0949729732 -1.475382e-01 -0.1297630522 #>   [17,] -0.1109737263 -0.0880321137 -0.1684295214  7.768810e-02 -0.0839592523 #>   [18,]  0.1424190258 -0.0674809457 -0.0714764943 -1.401075e-01 -0.0714167069 #>   [19,] -0.0550029653 -0.1167877672 -0.0097978853  9.867128e-02 -0.0781673488 #>   [20,] -0.1280960473 -0.1974706270  0.2052517306  1.095268e-01  0.1496682142 #>   [21,]  0.0754016447 -0.0674475627 -0.0574698463 -1.198197e-01 -0.0872773572 #>   [22,] -0.3230692398 -0.3245395657 -0.2319192102 -7.976996e-02 -0.0779690096 #>   [23,]  0.0737897030 -0.0885398887  0.1850031765  2.514383e-02 -0.0372413847 #>   [24,]  0.0329295236  0.0314718523  0.0313531097  6.146096e-02 -0.0629662913 #>   [25,]  0.0828664630 -0.1431345703  0.0385992177  3.313566e-02  0.0082598613 #>   [26,]  0.0711680467 -0.0549840007 -0.0996193936 -8.264204e-02 -0.0488097883 #>   [27,] -0.0217152177 -0.0865711781 -0.1143137923  1.029933e-01  0.0360741239 #>   [28,]  0.0528376069  0.1270214925  0.0554339042 -5.589820e-02 -0.0015904457 #>   [29,] -0.0722658460 -0.0524289038 -0.0956351139  3.348065e-02 -0.1482651714 #>   [30,]  0.0916588678 -0.1472865707 -0.0488516716  1.700924e-02 -0.0975551137 #>   [31,]  0.0116131853 -0.0511168029 -0.0543515365  9.012322e-02 -0.0216332909 #>   [32,]  0.0019606359 -0.0077339909 -0.0902418519  3.675724e-02  0.1859998848 #>   [33,] -0.1005088142 -0.0344902097  0.0649985020  7.709511e-02  0.1498133312 #>   [34,]  0.1175570506 -0.0036295786  0.1946883973 -4.471267e-02 -0.0838297923 #>   [35,]  0.0228568859  0.1926274465  0.0809154401 -2.953046e-03 -0.0679222091 #>   [36,] -0.0144800554 -0.0510972693  0.0291934533 -2.876855e-02 -0.0316931124 #>   [37,]  0.1960194783 -0.0893285001 -0.0832132085  1.786827e-01 -0.0989825589 #>   [38,]  0.0964509116 -0.1406007720 -0.0538668992  3.476455e-02  0.1189969871 #>   [39,]  0.0698986828  0.0101752922 -0.1129464004  4.025032e-03  0.0281702983 #>   [40,]  0.0686088115  0.0047742009 -0.0940045447 -1.739684e-01 -0.0493979307 #>   [41,] -0.0822298895 -0.0390082663  0.1084209689  1.748922e-01 -0.0368965615 #>   [42,]  0.0875452070  0.0307777217  0.0304089634 -1.582856e-02 -0.0100540002 #>   [43,] -0.2052925530 -0.0856824569 -0.1769478774  4.428777e-02 -0.0679214820 #>   [44,] -0.0954001281 -0.1731224159  0.0905589298  3.931993e-02 -0.0019357788 #>   [45,]  0.2276277966 -0.0495821698 -0.0909937650  1.323749e-01 -0.0347373990 #>   [46,]  0.0603683968 -0.0022366335 -0.0987250250  5.876973e-02  0.0707980884 #>   [47,] -0.1204420049 -0.0578391198 -0.0280787976 -1.295279e-01 -0.1793000794 #>   [48,] -0.0992751535 -0.0660711774 -0.1098279021  1.072988e-01 -0.1217584125 #>   [49,]  0.2494347687 -0.1288435983 -0.0603318644  1.761352e-01 -0.1374337970 #>   [50,]  0.0294750128  0.1432007504  0.0889490046 -1.023612e-01  0.0596121393 #>   [51,] -0.1420408444 -0.0199566263  0.0059289922 -2.042394e-01  0.1192954468 #>   [52,] -0.0628593400 -0.0457229024 -0.0534961864  1.966120e-01 -0.0216588743 #>   [53,]  0.0180568858 -0.0108224259 -0.0490787869  2.477671e-02 -0.0644836065 #>   [54,] -0.0646817876  0.1239345978 -0.0351462039 -7.876260e-02 -0.1834715972 #>   [55,]  0.1175091656 -0.1210789867 -0.0755609416  1.017393e-01 -0.0449560707 #>   [56,]  0.1128416813  0.1425014685  0.2958925673  2.290763e-02  0.0841681342 #>   [57,]  0.0641039097 -0.0315183624 -0.0720047742  9.487177e-02 -0.0821205998 #>   [58,] -0.0650249159 -0.1171760048  0.0374579091  2.924668e-02 -0.0496806583 #>   [59,]  0.1072982178 -0.1752485415 -0.1265453182  4.596141e-02  0.0111486691 #>   [60,]  0.0104776477 -0.0113417750 -0.0442178753  6.773098e-02 -0.1488146205 #>   [61,]  0.1441028180 -0.0739908443  0.0681642364 -5.179420e-04 -0.1452503267 #>   [62,]  0.1159560883 -0.0141701517 -0.0794125802  1.013902e-01 -0.1051631641 #>   [63,]  0.0774148835 -0.0923591412 -0.1787474117 -1.821354e-01  0.1343914531 #>   [64,] -0.0547904751  0.0030211860  0.0726582746 -3.921534e-02 -0.1585865742 #>   [65,] -0.1473053291 -0.0418091973 -0.1528093434  1.021657e-01 -0.0142228247 #>   [66,] -0.0770392342  0.0359361778 -0.1577682014  1.653594e-01  0.0505026241 #>   [67,] -0.0314574564 -0.0471538223 -0.1348947079 -1.824837e-01  0.0857214616 #>   [68,] -0.1410671212 -0.2631622995  0.0375520632  1.276383e-01 -0.1215009964 #>   [69,]  0.0269792690 -0.0456173449 -0.0226800074  4.336634e-02 -0.0440647894 #>   [70,]  0.0616729751  0.0034368631 -0.1236771981 -3.440446e-02 -0.0870785955 #>   [71,]  0.1866581963 -0.1101380147  0.1066521968 -2.339032e-01  0.1850159849 #>   [72,]  0.1584583558  0.0239960452  0.0195230551 -1.051974e-02 -0.0898126012 #>   [73,]  0.0234196268 -0.0402341812  0.0251542055 -8.751033e-02  0.0253791121 #>   [74,]  0.0269792690 -0.0456173449 -0.0226800074  4.336634e-02 -0.0440647894 #>   [75,] -0.0918973886 -0.0635701567  0.0199320283 -1.305094e-01 -0.0912150931 #>   [76,]  0.1312544183 -0.0901953734 -0.1528242370 -1.277733e-03 -0.1303688531 #>   [77,] -0.0073160359 -0.1089888607  0.0795205466 -1.000030e-01 -0.1078768342 #>   [78,] -0.0663257441 -0.0209962637 -0.1030746230  1.994461e-02 -0.0922154115 #>   [79,] -0.1061440625 -0.0813526257 -0.1004403562  6.219109e-02  0.1172484013 #>   [80,]  0.0366549469 -0.0442773280  0.0068410714  1.293344e-01 -0.0924241219 #>   [81,]  0.0477474493 -0.0562124112  0.0219111348  5.026364e-02  0.1546227221 #>   [82,]  0.0490436308 -0.0275666911 -0.0313995483  1.765392e-01 -0.0838075880 #>   [83,] -0.0953488163  0.0345970874 -0.1139828193 -1.398757e-01 -0.0537985680 #>   [84,]  0.2527486346 -0.0281910239 -0.0896130087  6.177618e-02 -0.1056494483 #>   [85,] -0.0379667959  0.1587202139  0.1255811743 -1.062133e-01  0.0744647252 #>   [86,] -0.1113524559 -0.0969096948 -0.1061937306 -1.561213e-02 -0.2692792203 #>   [87,] -0.0370775041  0.1210433761 -0.1235931670 -1.020949e-01 -0.1160457600 #>   [88,]  0.0678834629  0.0135226198  0.0801759762  2.254763e-02  0.0657129301 #>   [89,] -0.0030795956 -0.0530097524 -0.0433877740  6.065683e-02 -0.0577767495 #>   [90,]  0.1268091707  0.1188679941  0.0226765346 -8.153383e-02  0.1571551200 #>   [91,]  0.1919429894 -0.0123466008 -0.1069028800  8.783915e-02  0.0787622899 #>   [92,]  0.1243340442 -0.0625058528  0.0614160611 -1.533898e-01  0.0735404244 #>   [93,]  0.0440358941  0.0053134074  0.0516121341  1.158955e-01 -0.0670107850 #>   [94,]  0.2032800631  0.0692651928  0.0973184752 -1.921327e-01  0.0171973990 #>   [95,] -0.0880509364 -0.1839599264  0.1119239916  7.114363e-02  0.0619746336 #>   [96,] -0.0942663172 -0.1020276215 -0.0681716987  1.963466e-01  0.0854664365 #>   [97,] -0.0810765520 -0.0374704614 -0.0663270440 -1.143557e-01 -0.1559891178 #>   [98,]  0.0542961229 -0.1918537063 -0.0698080787 -2.208205e-02 -0.0750686676 #>   [99,]  0.1116445296  0.1429632117 -0.1766181948  9.717207e-02 -0.1233814578 #>  [100,] -0.0101748025  0.1349859625 -0.0442090375  2.753950e-02  0.0142425672 #>  [ reached getOption(\"max.print\") -- omitted 900 rows ] #>  #> $v #>             [,1]         [,2]         [,3]         [,4]         [,5] #>   [1,] 0.2498995 -0.020502442 -0.197077634 -0.126961241 -0.029044136 #>   [2,] 0.2260647  0.144541467  0.117573802  0.010716620  0.128630844 #>   [3,] 0.3690685  0.595179989 -0.047339616  0.015126219 -0.702145236 #>   [4,] 0.5600848  1.873996517 -0.944065705  0.546270865  0.120311453 #>   [5,] 0.4157550 -0.040854732 -0.855488900 -0.901617973 -0.222658659 #>   [6,] 0.3665177  0.093315813  0.081424803  0.359994485  0.256760530 #>   [7,] 0.2644529  0.189625309  0.021771088  0.116261615  0.119735620 #>   [8,] 0.3276210 -0.140082865  0.386091926  0.169309492  0.430224976 #>   [9,] 0.3186853 -0.234810596  0.210661540  0.219240061 -0.256188496 #>  [10,] 0.4121024 -0.474625666  0.517714233  0.850660148 -1.496808538 #>  [11,] 0.2048846  0.166249753  0.193873596  0.132255856 -0.034683110 #>  [12,] 0.3908696  0.489774954 -0.271759074  0.382748482 -0.837247967 #>  [13,] 0.3494088  0.220673948 -0.396461981  0.227377127  0.226311548 #>  [14,] 0.3758461 -0.465719070  0.652012815 -0.048944198  0.318149828 #>  [15,] 0.1997172  0.273443749 -0.259754825 -0.113540575 -0.042361814 #>  [16,] 0.1772801  0.101793786  0.081202411 -0.215792326 -0.252383707 #>  [17,] 0.4727172  0.389320384 -0.042842512 -0.674772936 -0.842645499 #>  [18,] 0.2988604  0.150926457  0.228879374 -0.208491838 -0.317537968 #>  [19,] 0.4209948 -1.342046413 -1.522801713  0.259388523 -0.087181992 #>  [20,] 0.3943804  0.240776357 -0.742463665 -0.146579471  0.422904371 #>  [21,] 0.2302018  0.175509115  0.119617067  0.170631616 -0.221110008 #>  [22,] 0.3506337  0.221016047  0.337627159  0.188921833  0.304557530 #>  [23,] 0.2011589  0.021387519 -0.023886155  0.062770579 -0.032923946 #>  [24,] 0.2868911 -0.006983407  0.064218778  0.049731575  0.168968560 #>  [25,] 0.3446084  0.048758207  0.121129048 -0.137734440  0.327142463 #>  [26,] 0.2006995  0.064072895  0.147823865 -0.075982986 -0.113726988 #>  [27,] 0.4083023  0.510848979 -0.041010180 -0.389445506 -0.114185837 #>  [28,] 0.2989059 -0.107601485 -0.163914458 -0.350680241 -0.454272176 #>  [29,] 0.3606541  0.549131549 -0.173845306 -0.272212106  0.135984025 #>  [30,] 0.2074938 -0.013767773  0.073159846  0.228561813  0.124874793 #>  [31,] 0.4108960  0.125635045  0.594124283  0.190748944  0.518634357 #>  [32,] 0.2691426 -0.125109450  0.170267023  0.080812029 -0.178706497 #>  [33,] 0.3911487 -0.343150220 -0.923768941  0.238399181 -0.065933052 #>  [34,] 0.3181096  0.201137141 -0.086938197  0.081764580 -0.561562197 #>  [35,] 0.3394793 -0.174583011  0.079313529 -0.037798881  0.596202853 #>  [36,] 0.2155779  0.136907531  0.217694683 -0.068692627  0.018501431 #>  [37,] 0.3754510  0.231094061  0.366416505  0.017125879  0.869202398 #>  [38,] 0.3540766  0.019525729  0.149264629 -0.458623669 -0.067100476 #>  [39,] 0.3365545  0.156899404 -0.092350042 -0.182120120 -0.508206548 #>  [40,] 0.2123233  0.138233516  0.007646942 -0.236533878 -0.159378980 #>  [41,] 0.3200687 -0.051972847  0.275589403  0.031695518 -0.216221362 #>  [42,] 0.1802390 -0.018750093  0.198888922  0.227551078  0.114981317 #>  [43,] 0.2136178  0.130086206  0.176007054 -0.133094838 -0.042349140 #>  [44,] 0.2926028  0.074237463  0.039953235 -0.280549698  0.051199424 #>  [45,] 0.1922946  0.063436662 -0.087918244 -0.039207042  0.065709273 #>  [46,] 0.2477413  0.094268171  0.101180813 -0.205850197 -0.212105164 #>  [47,] 0.2951876  0.335735630 -0.094225345 -0.324539917 -0.122791258 #>  [48,] 0.3213295 -0.069953912  0.282079744 -0.007525120 -0.026259371 #>  [49,] 0.3180313  0.182727112  0.277776770 -0.691206248 -0.169607969 #>  [50,] 0.3773363 -0.487228474  0.021149866  0.182790853 -0.519490233 #>  [51,] 0.3574488 -0.511211313 -0.027005899  0.148592190  0.258026737 #>  [52,] 0.3113353  0.347623293 -0.108895838  0.037410709  0.082252064 #>  [53,] 0.2727860  0.198873364 -0.044414966  0.360443823 -0.131803818 #>  [54,] 0.3046945  0.096022264 -0.265172528  0.272241365  0.024373111 #>  [55,] 0.3124408 -0.015822921  0.377591682  0.176159287 -0.549382550 #>  [56,] 0.4639554 -1.218176398 -0.969678377  0.217593014  0.574888798 #>  [57,] 0.1851665 -0.060706667  0.040364122 -0.039555369  0.089632354 #>  [58,] 0.3730995 -0.521841996  0.035244239 -0.791352758 -0.298171868 #>  [59,] 0.2942232  0.064183462  0.264540964 -0.295043421  0.040424758 #>  [60,] 0.2745164 -0.225252109  0.175980578 -0.083156647  0.019743436 #>  [61,] 0.3593366  0.041586069 -0.177438386  0.072120395  0.498599993 #>  [62,] 0.2948306 -0.138627668  0.236768823 -0.463411368 -0.023163293 #>  [63,] 0.3310280 -0.115915343  0.214216131 -0.131489612  0.253796816 #>  [64,] 0.2836250 -0.177944310  0.190270472 -0.318790877  0.156444745 #>  [65,] 0.3477617 -0.071527260  0.345270794  0.026694366 -0.600385964 #>  [66,] 0.3208534 -0.164798404  0.202026090 -0.282326713 -0.003484504 #>  [67,] 0.3218015 -0.446277195 -0.075825977  0.520780405 -0.213131172 #>  [68,] 0.1421212 -0.094420763  0.103104377  0.159939540 -0.009730133 #>  [69,] 0.4851224  0.173630349 -0.303416993 -0.608915766  0.355442308 #>  [70,] 0.3314901  0.065159406 -0.108787953 -0.005113519 -0.226568445 #>  [71,] 0.2508462  0.014540034  0.094612445 -0.091082772 -0.307322259 #>  [72,] 0.3777363 -0.333675556  0.030401787  0.119957994  0.297506165 #>  [73,] 0.2954409  0.120402743  0.282420133 -0.057919781  0.050094672 #>  [74,] 0.3398384 -0.004393276 -0.061292941  0.895106395 -0.417659080 #>  [75,] 0.3902353  0.106809022  0.007104035 -0.988732786 -0.461931707 #>  [76,] 0.2765402 -0.266651009  0.166954342 -0.362791421  0.001191018 #>  [77,] 0.1953673  0.034136476  0.111100692  0.060596940 -0.066014420 #>  [78,] 0.2872181  0.003079035  0.105786222  0.325173153 -0.035635827 #>  [79,] 0.4257215  0.368650575 -0.031579250  0.069036017  0.788032185 #>  [80,] 0.3489229 -0.389189772  0.065965034  0.063873931  0.003955755 #>  [81,] 0.2814525  0.126670591 -0.332041505 -0.211405333 -0.277044214 #>  [82,] 0.3961968 -0.617371605  0.610988374 -0.750479419 -0.313154905 #>  [83,] 0.2132078 -0.109773799  0.186191335 -0.053018387 -0.159583660 #>  [84,] 0.2556102  0.043004154  0.269904082 -0.066973969  0.100446273 #>  [85,] 0.4702353 -0.062612735  0.349722963 -0.287027472  0.272916812 #>  [86,] 0.2487292 -0.048347980  0.029029909 -0.311550534 -0.128228523 #>  [87,] 0.2985336 -0.056699630  0.061982474  0.537193179  0.044482951 #>  [88,] 0.3627572 -0.025419438  0.311654862  0.277959237  0.745799277 #>  [89,] 0.2756090 -0.007587023  0.208013760  0.065179600  0.078558105 #>  [90,] 0.3892251 -0.058804652 -0.038607179  0.756552093 -0.445318608 #>  [91,] 0.2534776 -0.163603610 -0.292071155 -0.228656013  0.192684018 #>  [92,] 0.3400399 -0.179688298  0.508491627 -0.175250164 -0.047810651 #>  [93,] 0.3421188 -0.188497530  0.086249880  0.381830374 -0.147764329 #>  [94,] 0.3004962  0.195754482  0.164969342 -0.335125921  0.469878747 #>  [95,] 0.2803576  0.223904270  0.468185838 -0.054108274  0.354881954 #>  [96,] 0.3455292 -0.267736290 -0.003203744 -0.266999427  0.113961978 #>  [97,] 0.3340689  0.256992430 -0.225005723 -0.233652133 -0.066912918 #>  [98,] 0.4741029  0.196589160  0.645745465  0.979899996  0.134854860 #>  [99,] 0.4358462  0.537328492  0.120137829  0.594740534 -0.005130978 #> [100,] 0.3709335 -0.078368056  0.358113592  0.493400504  0.149084127 #>                [,6]         [,7]         [,8]         [,9]        [,10] #>   [1,]  0.045302415  0.183532740  0.143049314  0.309130924  0.007562916 #>   [2,]  0.089645504 -0.183778928  0.146952504 -0.161311632  0.094418800 #>   [3,]  0.212585089 -0.311547027 -0.433224937 -0.627098813 -0.057723542 #>   [4,]  0.742240019 -0.193299811 -0.051244892  0.234841698 -0.535279084 #>   [5,] -0.310415254  0.486508594  1.290372919  0.431136039  0.379674927 #>   [6,] -0.312213187 -0.235970730 -0.448486964  0.376716013  0.643956162 #>   [7,]  0.023346708  0.176470443 -0.166310883 -0.088634359  0.175307304 #>   [8,] -0.073682673  0.622573094 -0.206894765 -0.368696617 -0.336857066 #>   [9,] -0.543841692  0.260347215  0.299694449 -0.048779216  0.140264036 #>  [10,] -0.189259553 -0.039028086  0.444571233  0.352759689 -0.385210121 #>  [11,] -0.076009620 -0.047111322  0.087322055  0.143388444  0.120156555 #>  [12,]  0.517288040  0.074181347  0.315617117 -0.159082101 -0.224906409 #>  [13,]  0.032297119  0.376049097 -0.061829508  0.313383327 -0.173414004 #>  [14,]  0.060204294 -0.241147479  0.272428219  0.383130089 -0.357450938 #>  [15,] -0.004007275 -0.067391259  0.275735932 -0.058349432  0.249353748 #>  [16,] -0.132810069 -0.042135791 -0.037748373  0.110802981 -0.074804951 #>  [17,] -0.481987433  0.169643160 -1.170854157  0.318478994  0.107589240 #>  [18,]  0.559969163  0.405451838  0.345686104 -0.473452651 -0.329596628 #>  [19,]  0.618485690  0.172453044  0.162620394 -0.936925164  0.498295801 #>  [20,] -0.178863688  0.314229093  0.509744511  0.881994372 -0.301431266 #>  [21,] -0.032536478  0.287145237  0.158548623  0.068153931  0.013492885 #>  [22,] -0.451300149  0.152720977 -0.316466058  0.135613996  0.208000909 #>  [23,]  0.016777410  0.137259162  0.290664640 -0.113046033  0.082800164 #>  [24,]  0.224079443  0.377086141  0.357433358  0.048780305 -0.115776127 #>  [25,] -0.210045654  0.079101191  0.421863755  0.741638451 -0.100108980 #>  [26,]  0.101811800  0.158254005  0.033387199  0.105333930  0.039417254 #>  [27,] -0.177974340 -0.170612407  0.119406750 -0.323649367  0.353986606 #>  [28,] -0.208671542  0.023005069  0.288366514 -0.299542192  0.303967140 #>  [29,]  0.014331025  0.201058994  0.408049054 -0.465024098  0.113148373 #>  [30,]  0.156840639 -0.139052236  0.024223577 -0.002040049  0.010629608 #>  [31,] -0.019892182  1.038769802  0.530640379 -0.579818417  0.610104942 #>  [32,] -0.076543560  0.089511987  0.062158158 -0.173128774  0.181229916 #>  [33,]  0.951949461 -0.200117902 -0.412062935 -0.300341432  0.280837095 #>  [34,] -0.400400480 -0.044184526 -0.311808304 -0.253749741 -0.497563537 #>  [35,] -0.135868178  0.153103162  0.097316850 -0.659353433  0.343203990 #>  [36,] -0.117578624  0.145362584 -0.052714720 -0.236369354 -0.308596313 #>  [37,] -0.259936037  0.191351534 -0.474398705 -0.176002656 -0.339357530 #>  [38,]  0.289797734 -0.762326966  0.105986116  0.020050143  0.423195924 #>  [39,] -0.137758902  0.200692052  0.037665402 -0.365723286 -0.607364571 #>  [40,] -0.080084726 -0.089174569  0.083831237 -0.019619468  0.241892357 #>  [41,]  0.016918438  0.110820025 -0.235635291 -0.074512764  0.572167203 #>  [42,] -0.002227039  0.184514548 -0.110382062 -0.195455037 -0.194568060 #>  [43,]  0.029957194  0.038282217 -0.033430834 -0.428399468  0.129431750 #>  [44,] -0.023406792 -0.014903559  0.096863180 -0.558615636  0.268013517 #>  [45,] -0.171804228  0.206013212  0.343755393  0.235684298 -0.008716977 #>  [46,]  0.062708156  0.552985919  0.192734322  0.463163106 -0.072748012 #>  [47,]  0.081164077 -0.244251292 -0.378005463 -0.536514648  0.010817955 #>  [48,] -0.382693927  0.356514024 -0.021953058 -0.576579891  0.085323584 #>  [49,]  0.059305581  0.304424268  0.005468256  0.333348775  0.695245589 #>  [50,] -0.405745477  0.386134444  0.373002690  0.183585477 -0.319341586 #>  [51,]  0.165940560 -0.139468862  0.066549735  0.219574005 -0.356079468 #>  [52,] -0.005171290  0.261739742  0.044897448 -0.011143844  0.175797350 #>  [53,]  0.278095499  0.322238306 -0.089391006 -0.150096514  0.223124797 #>  [54,]  0.035586072 -0.095074228  0.045639006  0.074005917 -0.402516447 #>  [55,] -0.204677422 -0.649998485  0.022056204  0.134013776  0.018582262 #>  [56,] -1.076090233 -0.385515222 -0.154362984 -0.203370187 -0.345513696 #>  [57,] -0.068018843  0.107164803 -0.004458202 -0.195824907  0.031336494 #>  [58,]  0.548759811  0.140319565 -0.246043792  0.261516455  0.538828831 #>  [59,]  0.258952615  0.414934458 -0.238636192 -0.192636881 -0.008733255 #>  [60,]  0.055810505 -0.109012984 -0.017975736  0.542325696  0.262069572 #>  [61,] -0.247498488  0.016837859 -0.340950276  0.188697849 -0.139149197 #>  [62,] -0.096414582  0.027454324  0.062343847  0.204256848 -0.234394606 #>  [63,]  0.737048765  0.301900728 -0.047055662  0.027485465 -0.135889436 #>  [64,]  0.211754154  0.150859020 -0.009229318 -0.091147181 -0.512989756 #>  [65,] -0.690278167 -0.358434492  0.235108008 -0.875941029 -0.725575988 #>  [66,] -0.051003461 -0.119931367 -0.006021337 -0.367861920  0.116083668 #>  [67,] -0.149199784  0.322138643 -0.473438842 -0.064936426  0.245851623 #>  [68,] -0.021785625  0.056289874 -0.058490548  0.088892398  0.100225878 #>  [69,] -0.449184354  0.004510483 -0.581365351 -0.266157748 -1.081653360 #>  [70,] -0.248944582 -0.557336335  0.432989975 -0.368575352  0.407274808 #>  [71,] -0.243186206  0.078407152  0.276209943 -0.120337138 -0.040547779 #>  [72,]  0.354399566 -0.641744795 -0.268762511  0.088110348 -0.143028734 #>  [73,] -0.029912343 -0.102226689 -0.336644101 -0.140972665  0.556481844 #>  [74,] -0.216674709 -0.085570527 -0.282528947  0.856918342  0.403807083 #>  [75,] -0.323574138 -0.713578821  0.262575109 -0.230927833 -0.303408395 #>  [76,]  0.015403658  0.286434453 -0.056377116 -0.108751652  0.260973336 #>  [77,] -0.069427526  0.294837107 -0.113456237  0.117410851  0.062012585 #>  [78,]  0.023141103 -0.125422936 -0.084270068 -0.248709169  0.390464882 #>  [79,] -0.275053138 -0.284853457  1.001421708  0.084752300  0.152137184 #>  [80,]  0.280753018 -0.568371298 -0.054495520 -0.122377190 -0.368990411 #>  [81,] -0.401577009 -0.192556244  0.310166159  0.325046942  0.317061147 #>  [82,]  1.389418800  0.088221857 -0.158373707  0.598659968 -0.104946060 #>  [83,] -0.085454043  0.002583166  0.011486625 -0.057393712  0.075357116 #>  [84,] -0.191727350  0.334603673 -0.382308521 -0.281296534 -0.048097499 #>  [85,] -0.378604932 -1.343917258 -0.091434600  0.139083712  0.636770159 #>  [86,]  0.132363441  0.024997960 -0.179451149  0.013291247  0.121979405 #>  [87,] -0.024300717  0.295607760 -0.093022332 -0.158311064  0.375862583 #>  [88,] -0.195949184 -0.516365790 -0.132177245  0.336576849 -0.367023662 #>  [89,]  0.015215984  0.166919261  0.212851097 -0.253457411  0.474612988 #>  [90,] -0.307950080  0.566039098 -0.701720549  0.707894907  0.341210213 #>  [91,]  0.336080030  0.121562633 -0.367331302 -0.013221584  0.059109608 #>  [92,]  0.224975101  0.369917064 -0.214818753 -0.186290685 -0.293558525 #>  [93,] -0.635936057  0.535962202  0.158025326 -0.342717005 -0.200272023 #>  [94,] -0.308213902 -0.086769558 -0.062116017  0.203481936  0.312595971 #>  [95,] -0.141871891  0.236118373 -0.102432683 -0.499854298  0.222761235 #>  [96,]  0.217872397  0.276430510 -0.151834239  0.533841202 -0.458528349 #>  [97,] -0.103308801  0.518014427 -0.120144011  0.259800543  0.220256039 #>  [98,]  0.441974119 -0.333665906  1.214948710 -0.028606806  0.308670530 #>  [99,]  0.055004014 -0.266622330 -0.529175491 -0.243844946  0.682976198 #> [100,]  1.037100232 -0.337530603  0.482181891 -0.165576140 -0.720970012 #>  #> $penal_lik #> [1] -100906 #>"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/spatial_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Spatial Plot of Feature Expression or Cluster Labels — spatial_plot","title":"Create Spatial Plot of Feature Expression or Cluster Labels — spatial_plot","text":"Create Spatial Plot Feature Expression Cluster Labels","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/spatial_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Spatial Plot of Feature Expression or Cluster Labels — spatial_plot","text":"","code":"spatial_plot(   input,   type = c(\"raw\", \"smooth\", \"cluster\"),   feature_name = NULL,   labels = NULL,   assay_type = \"logcounts\",   spot_size = 1.5 )"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/spatial_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Spatial Plot of Feature Expression or Cluster Labels — spatial_plot","text":"input SummarizedExperiment object containing counts assay row/col coordinates. type Plot type, \"raw\", \"smooth, \"cluster\". \"raw\", expression feature_name using assay_type plotted. \"smooth\" smoothed expression feature_name plotted. \"cluster\" cluster labels plotted. type=\"cluster\" labels=NULL, smoothLRC labels used. feature_name type=\"raw\" type=\"smooth\", name feature plotted. labels type=\"cluster\" vector labels observation. length number columns input. NULL, smoothLRC cluster labels used. assay_type type=\"raw\" type=\"smooth\", SummarizedExperiment assay type. spot_size size pixel.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/spatial_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Spatial Plot of Feature Expression or Cluster Labels — spatial_plot","text":"ggplot object.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/spatial_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Spatial Plot of Feature Expression or Cluster Labels — spatial_plot","text":"","code":"sce <- example_sce() spatial_plot(sce, feature_name = \"Feature 1\", spot_size = 10)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/news/index.html","id":"smoothlrc-0990","dir":"Changelog","previous_headings":"","what":"smoothLRC 0.99.0","title":"smoothLRC 0.99.0","text":"Initial release smoothLRC","code":""}]
