[{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/Parameter Selection.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Parameter Selection","text":"smoothLRC method uses smoothing parameter (\\(lambda\\)) rank parameter (\\(k\\)) produce results. article demonstrates selection parameters.","code":"library(smoothLRC) library(ggplot2) library(dplyr) set.seed(1)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/Parameter Selection.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load Data","title":"Parameter Selection","text":"Using spatialLIBD package, ’ll load sample 151671 DLPFC data.","code":"sample <- \"151671\"  sce <- spatialLIBD::fetch_data(type = \"sce\") sce <- sce[, sce$sample_name == sample]"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/Parameter Selection.html","id":"parameter-grid","dir":"Articles","previous_headings":"","what":"Parameter Grid","title":"Parameter Selection","text":"’ll consider \\(lambda=(5, 10, 15)\\) \\(k=(10, 20)\\). , ’ll use 100 pixels test size.","code":"lambdas <- c(5, 10, 15) ks <- c(10, 20) parameter_grid <- expand.grid(lambda = lambdas, k = ks) test_size <- 100"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/Parameter Selection.html","id":"cross-validation","dir":"Articles","previous_headings":"","what":"Cross-Validation","title":"Parameter Selection","text":"Next, ’ll use cross-validation select optimal parameter values.   can see using recommend procedure, selected combination (\\(\\lambda=15\\), \\(k=20\\)). practice, recommend running much larger number iterations (e.g. 1,000) looking larger parameter space.","code":"metrics <- NULL for(combo in 1:nrow(parameter_grid)){   print(parameter_grid[combo,])   combination <- smooth_cv(sce, lambda = parameter_grid[combo,\"lambda\"], k = parameter_grid[combo,\"k\"], test_size, maxiter = 5)   metrics <- rbind(metrics, tibble(lambda = parameter_grid[combo,\"lambda\"],                                     k = parameter_grid[combo,\"k\"],                                    penal_lik = combination$penal_like,                                    cv_like = combination$cv_like)                    ) } #>   lambda  k #> 1      5 10 #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC on training set...\" #> iteration: 1 | convergence: 0.422554 | 0.0563444 | 1 #> iteration: 2 | convergence: 0.173078 | 0.0404936 | 0.00987567 #> iteration: 3 | convergence: 0.163679 | 0.0450668 | 0.0102672 #> iteration: 4 | convergence: 0.175742 | 0.0471282 | 0.0110242 #> iteration: 5 | convergence: 0.182077 | 0.0482414 | 0.0120774 #> [1] \"Compute neighborhood likelihood...\" #> [1] \"Done!\" #>   lambda  k #> 2     10 10 #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC on training set...\" #> iteration: 1 | convergence: 0.422057 | 0.0554037 | 1 #> iteration: 2 | convergence: 0.164508 | 0.0401319 | 0.00985858 #> iteration: 3 | convergence: 0.161535 | 0.0453195 | 0.010362 #> iteration: 4 | convergence: 0.186979 | 0.0486879 | 0.0112138 #> iteration: 5 | convergence: 0.184922 | 0.0508453 | 0.012346 #> [1] \"Compute neighborhood likelihood...\" #> [1] \"Done!\" #>   lambda  k #> 3     15 10 #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC on training set...\" #> iteration: 1 | convergence: 0.42013 | 0.0539799 | 1 #> iteration: 2 | convergence: 0.167513 | 0.0398524 | 0.00986839 #> iteration: 3 | convergence: 0.176619 | 0.0454105 | 0.0104753 #> iteration: 4 | convergence: 0.191349 | 0.0489113 | 0.0113943 #> iteration: 5 | convergence: 0.181778 | 0.0511128 | 0.012534 #> [1] \"Compute neighborhood likelihood...\" #> [1] \"Done!\" #>   lambda  k #> 4      5 20 #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC on training set...\" #> iteration: 1 | convergence: 0.496827 | 0.0727383 | 1 #> iteration: 2 | convergence: 0.234482 | 0.0531852 | 0.0114419 #> iteration: 3 | convergence: 0.209897 | 0.0595182 | 0.0125506 #> iteration: 4 | convergence: 0.185418 | 0.0596158 | 0.0143264 #> iteration: 5 | convergence: 0.183947 | 0.0612591 | 0.0167131 #> [1] \"Compute neighborhood likelihood...\" #> [1] \"Done!\" #>   lambda  k #> 5     10 20 #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC on training set...\" #> iteration: 1 | convergence: 0.492975 | 0.0694401 | 1 #> iteration: 2 | convergence: 0.227639 | 0.0526918 | 0.0111891 #> iteration: 3 | convergence: 0.2107 | 0.0592167 | 0.012326 #> iteration: 4 | convergence: 0.191362 | 0.0600496 | 0.0141495 #> iteration: 5 | convergence: 0.191143 | 0.0630135 | 0.0165308 #> [1] \"Compute neighborhood likelihood...\" #> [1] \"Done!\" #>   lambda  k #> 6     15 20 #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC on training set...\" #> iteration: 1 | convergence: 0.491289 | 0.0671663 | 1 #> iteration: 2 | convergence: 0.238924 | 0.052163 | 0.0110855 #> iteration: 3 | convergence: 0.201901 | 0.0582762 | 0.0122061 #> iteration: 4 | convergence: 0.189654 | 0.0588165 | 0.0140169 #> iteration: 5 | convergence: 0.187515 | 0.0622647 | 0.0163196 #> [1] \"Compute neighborhood likelihood...\" #> [1] \"Done!\"  metrics %>%    ggplot(aes(x = lambda, y = cv_like)) +   geom_point() +   geom_line() +   facet_wrap(~k, scales = \"free\") +   ylab(\"CV Likelihood\") metrics %>%    group_by(k) %>%   slice_max(order_by = cv_like, n = 1) %>%   ungroup() %>%   mutate(Selected = ifelse(penal_lik == max(penal_lik), \"Yes\", \"No\")) %>%   ggplot(aes(x = k, y = penal_lik, label = lambda)) +   geom_point() +   geom_line() +   geom_label(aes(color = Selected)) +   ylab(\"Penalized Likelihood\")"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/Seurat Integration.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Seurat Integration","text":"tutorial demonstrate results smoothLRC can integrated Seurat downstream analysis.","code":"library(smoothLRC) library(dplyr) library(SummarizedExperiment) library(ggplot2) library(Seurat) set.seed(1)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/Seurat Integration.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load Data","title":"Seurat Integration","text":"First load sample 151671 DLPFC data pre-computed smoothLRC metadata.","code":"sce <- readRDS(\"151671.rds\") clust_1000 <- read.csv(\"151671.csv\", colClasses = \"factor\")$smooth_cluster_1000"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/Seurat Integration.html","id":"differential-expression","dir":"Articles","previous_headings":"","what":"Differential Expression","title":"Seurat Integration","text":"Next, utilize tools (Seurat)[https://satijalab.org/seurat/] identify spatially variable features. demonstration purposes, select top three spatially variable features per cluseter. can visualize identified features individual spatial expression plot smoothing.   Lastly, can visualize features heatmap.  Reproducibility","code":"library(Seurat)  sce_seurat <- CreateSeuratObject(assay(sce)) smoothed <- sce@metadata$smooth_u %*% t(sce@metadata$smooth_v) rownames(smoothed) <- rownames(sce) colnames(smoothed) <- colnames(sce) sce_seurat[[\"smooth\"]] <- CreateAssayObject(data = smoothed) DefaultAssay(sce_seurat) <- \"smooth\"  labels <- levels(clust_1000) markers <- NULL  for (label in labels){   region_1 <- clust_1000 == label   region_2 <- clust_1000 != label   cells_1 <- colnames(sce)[region_1]   cells_2 <- colnames(sce)[region_2]   marker <- FindMarkers(sce_seurat, ident.1 = cells_1, ident.2 = cells_2)   marker$feature <- rownames(marker)   markers <- rbind(markers,cbind(marker, cluster = label)) }  top_by_cluster <- as_tibble(markers) %>%    group_by(cluster) %>%    slice_min(order_by = p_val, n = 3)  top_feat <- top_by_cluster %>%    pull(feature)   sce %>%    spatial_plot(feature_name = top_feat[1], type = \"raw\") sce %>%    spatial_plot(feature_name = top_feat[1], type = \"smooth\") library(NMF) cell_order <- tibble(label = clust_1000, order = 1:length(clust_1000)) %>%    arrange(label) %>%    pull(order) data_heatmap <- as.matrix(assay(sce, 2)[top_feat,cell_order]) aheatmap(data_heatmap, Rowv = NA, Colv = NA, labCol = NA,                annCol = data.frame(Cluster = clust_1000[cell_order]),               annRow = data.frame(Cluster = top_by_cluster %>% pull(cluster))) sessionInfo() #> R version 4.1.3 (2022-03-10) #> Platform: x86_64-w64-mingw32/x64 (64-bit) #> Running under: Windows 10 x64 (build 19044) #>  #> Matrix products: default #>  #> locale: #> [1] LC_COLLATE=English_United States.1252  #> [2] LC_CTYPE=English_United States.1252    #> [3] LC_MONETARY=English_United States.1252 #> [4] LC_NUMERIC=C                           #> [5] LC_TIME=English_United States.1252     #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] RColorBrewer_1.1-3          NMF_0.24.0                  #>  [3] cluster_2.1.3               rngtools_1.5.2              #>  [5] pkgmaker_0.32.2             registry_0.5-1              #>  [7] SingleCellExperiment_1.16.0 sp_1.5-0                    #>  [9] SeuratObject_4.1.0          Seurat_4.1.1                #> [11] ggplot2_3.3.6               SummarizedExperiment_1.24.0 #> [13] Biobase_2.54.0              GenomicRanges_1.46.1        #> [15] GenomeInfoDb_1.30.1         IRanges_2.28.0              #> [17] S4Vectors_0.32.4            BiocGenerics_0.40.0         #> [19] MatrixGenerics_1.6.0        matrixStats_0.62.0          #> [21] dplyr_1.0.9                 smoothLRC_0.99.0            #>  #> loaded via a namespace (and not attached): #>   [1] systemfonts_1.0.4      plyr_1.8.7             igraph_1.3.3           #>   [4] lazyeval_0.2.2         splines_4.1.3          listenv_0.8.0          #>   [7] scattermore_0.8        gridBase_0.4-7         digest_0.6.29          #>  [10] foreach_1.5.2          htmltools_0.5.2        fansi_1.0.3            #>  [13] magrittr_2.0.3         memoise_2.0.1          doParallel_1.0.17      #>  [16] tensor_1.5             ROCR_1.0-11            limma_3.50.3           #>  [19] globals_0.15.1         pkgdown_2.0.6          spatstat.sparse_2.1-1  #>  [22] colorspace_2.0-3       ggrepel_0.9.1          textshaping_0.3.6      #>  [25] xfun_0.31              sparsesvd_0.2          crayon_1.5.1           #>  [28] RCurl_1.98-1.7         jsonlite_1.8.0         progressr_0.10.1       #>  [31] spatstat.data_2.2-0    iterators_1.0.14       survival_3.3-1         #>  [34] zoo_1.8-10             glue_1.6.2             polyclip_1.10-0        #>  [37] gtable_0.3.0           zlibbioc_1.40.0        XVector_0.34.0         #>  [40] leiden_0.4.2           DelayedArray_0.20.0    future.apply_1.9.0     #>  [43] abind_1.4-5            scales_1.2.0           DBI_1.1.3              #>  [46] spatstat.random_2.2-0  miniUI_0.1.1.1         Rcpp_1.0.9             #>  [49] viridisLite_0.4.0      xtable_1.8-4           reticulate_1.25        #>  [52] spatstat.core_2.4-4    mclust_5.4.10          htmlwidgets_1.5.4      #>  [55] httr_1.4.3             FNN_1.1.3.1            ellipsis_0.3.2         #>  [58] ica_1.0-3              farver_2.1.1           pkgconfig_2.0.3        #>  [61] uwot_0.1.11            sass_0.4.1             deldir_1.0-6           #>  [64] utf8_1.2.2             labeling_0.4.2         tidyselect_1.1.2       #>  [67] rlang_1.0.4            reshape2_1.4.4         later_1.3.0            #>  [70] munsell_0.5.0          tools_4.1.3            cachem_1.0.6           #>  [73] cli_3.3.0              generics_0.1.3         ggridges_0.5.3         #>  [76] evaluate_0.15          stringr_1.4.0          fastmap_1.1.0          #>  [79] goftest_1.2-3          yaml_2.3.5             ragg_1.2.2             #>  [82] knitr_1.39             fs_1.5.2               fitdistrplus_1.1-8     #>  [85] purrr_0.3.4            RANN_2.6.1             nlme_3.1-158           #>  [88] pbapply_1.5-0          future_1.26.1          mime_0.12              #>  [91] compiler_4.1.3         rstudioapi_0.13        plotly_4.10.0          #>  [94] png_0.1-7              spatstat.utils_2.3-1   tibble_3.1.7           #>  [97] bslib_0.4.0            stringi_1.7.6          highr_0.9              #> [100] desc_1.4.1             rgeos_0.5-9            lattice_0.20-45        #> [103] Matrix_1.4-1           vctrs_0.4.1            pillar_1.7.0           #> [106] lifecycle_1.0.1        spatstat.geom_2.4-0    lmtest_0.9-40          #> [109] jquerylib_0.1.4        RcppAnnoy_0.0.19       data.table_1.14.2      #> [112] cowplot_1.1.1          bitops_1.0-7           irlba_2.3.5            #> [115] httpuv_1.6.5           patchwork_1.1.1        R6_2.5.1               #> [118] promises_1.2.0.1       KernSmooth_2.23-20     gridExtra_2.3          #> [121] parallelly_1.32.0      codetools_0.2-18       MASS_7.3-58            #> [124] assertthat_0.2.1       rprojroot_2.0.3        withr_2.5.0            #> [127] sctransform_0.3.3      GenomeInfoDbData_1.2.7 mgcv_1.8-40            #> [130] parallel_4.1.3         rpart_4.1.16           grid_4.1.3             #> [133] tidyr_1.2.0            rmarkdown_2.14         Rtsne_0.16             #> [136] shiny_1.7.1"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/smoothLRC.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Introduction to smoothLRC","text":"smoothLRC novel tool clustering spatial transcriptomics data. technique utilizes regularized maximum likelihood estimator approximate noisy observed expression matrix incorporate spatial information address expression dropout. approximation Poisson distribution low-rank spatially smooth. Furthermore, smoothLRC enables spatial clustering modeling low-dimensional representation count-based gene expression matrix. Thus, approach encourages neighboring cells belong cluster via penalized matrix decomposition. smoothLRC employs SummarizedExperiment framework spatial transcriptomics data. example, cluster dorsolateral prefrontal cortex (DLPFC) collected annotated Maynard et al. (2020).","code":"library(smoothLRC) library(SummarizedExperiment) library(ggplot2) library(dplyr) set.seed(1)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/smoothLRC.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load Data","title":"Introduction to smoothLRC","text":"Using spatialLIBD package, ’ll load sample 151671 DLPFC data.","code":"sample <- \"151671\"  sce <- spatialLIBD::fetch_data(type = \"sce\") sce <- sce[, sce$sample_name == sample]"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/smoothLRC.html","id":"expression-plot","dir":"Articles","previous_headings":"","what":"Expression Plot","title":"Introduction to smoothLRC","text":"’ll find highly variable gene (HVG) sample explore expression spatial context.","code":"hvg <- rownames(sce)[which.max(apply(assay(sce), 1, var))] sce %>%    spatial_plot(feature_name = hvg)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/smoothLRC.html","id":"clustering","dir":"Articles","previous_headings":"","what":"Clustering","title":"Introduction to smoothLRC","text":"Next, ’ll use smoothLRC perform low-rank clustering data. recommend setting maximum number iterations large value (e.g. 1,000). smoothLRC add clustering results colData model results metadata SummarizedExperiment object.","code":"sce <- smooth_lrc(sce, lambda = 5, k = 30, n_clust = 5, maxiter = 5) #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC...\" #> iteration: 1 | convergence: 0.517552 | 0.0777191 | 1 #> iteration: 2 | convergence: 0.258088 | 0.0619568 | 0.0124418 #> iteration: 3 | convergence: 0.224198 | 0.0678516 | 0.0140945 #> iteration: 4 | convergence: 0.198246 | 0.0673172 | 0.0170241 #> iteration: 5 | convergence: 0.190463 | 0.0720095 | 0.0208061 #> [1] \"Clustering right singular vectors...\" #> [1] \"Done!\""},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/smoothLRC.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"Introduction to smoothLRC","text":"’ll visualize results model pre-computed model larger number iterations compare manual annotations.    Finally, can reexamine HVG using smoothed results model.  Reproducibility","code":"clust_1000 <- read.csv(\"151671.csv\", colClasses = \"factor\")$smooth_cluster_1000 manual_labels <- colData(sce)$layer_guess_reordered  sce %>%    spatial_plot(type = \"cluster\") +    ggtitle(\"smoothLRC (5 iterations)\") sce %>%    spatial_plot(type = \"cluster\", labels = clust_1000) +   ggtitle(\"smoothLRC (1000 iterations)\") sce %>%    spatial_plot(type = \"cluster\", labels = manual_labels) +   ggtitle(\"Manual Annotation\") sce %>%    spatial_plot(feature_name = hvg, type = \"smooth\") sessionInfo() #> R version 4.1.3 (2022-03-10) #> Platform: x86_64-w64-mingw32/x64 (64-bit) #> Running under: Windows 10 x64 (build 19044) #>  #> Matrix products: default #>  #> locale: #> [1] LC_COLLATE=English_United States.1252  #> [2] LC_CTYPE=English_United States.1252    #> [3] LC_MONETARY=English_United States.1252 #> [4] LC_NUMERIC=C                           #> [5] LC_TIME=English_United States.1252     #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] dplyr_1.0.9                 ggplot2_3.3.6               #>  [3] SummarizedExperiment_1.24.0 Biobase_2.54.0              #>  [5] GenomicRanges_1.46.1        GenomeInfoDb_1.30.1         #>  [7] IRanges_2.28.0              S4Vectors_0.32.4            #>  [9] BiocGenerics_0.40.0         MatrixGenerics_1.6.0        #> [11] matrixStats_0.62.0          smoothLRC_0.99.0            #>  #> loaded via a namespace (and not attached): #>   [1] utf8_1.2.2                    R.utils_2.12.0                #>   [3] tidyselect_1.1.2              RSQLite_2.2.14                #>   [5] AnnotationDbi_1.56.2          htmlwidgets_1.5.4             #>   [7] grid_4.1.3                    BiocParallel_1.28.3           #>   [9] DropletUtils_1.14.2           munsell_0.5.0                 #>  [11] ScaledMatrix_1.2.0            codetools_0.2-18              #>  [13] ragg_1.2.2                    DT_0.23                       #>  [15] withr_2.5.0                   colorspace_2.0-3              #>  [17] filelock_1.0.2                config_0.3.1                  #>  [19] highr_0.9                     knitr_1.39                    #>  [21] rstudioapi_0.13               SingleCellExperiment_1.16.0   #>  [23] shinyWidgets_0.7.1            labeling_0.4.2                #>  [25] GenomeInfoDbData_1.2.7        bit64_4.0.5                   #>  [27] farver_2.1.1                  rhdf5_2.38.1                  #>  [29] rprojroot_2.0.3               vctrs_0.4.1                   #>  [31] generics_0.1.3                xfun_0.31                     #>  [33] BiocFileCache_2.2.1           R6_2.5.1                      #>  [35] doParallel_1.0.17             ggbeeswarm_0.6.0              #>  [37] rsvd_1.0.5                    locfit_1.5-9.6                #>  [39] fields_14.0                   bitops_1.0-7                  #>  [41] rhdf5filters_1.6.0            cachem_1.0.6                  #>  [43] DelayedArray_0.20.0           assertthat_0.2.1              #>  [45] promises_1.2.0.1              BiocIO_1.4.0                  #>  [47] scales_1.2.0                  beeswarm_0.4.0                #>  [49] gtable_0.3.0                  beachmat_2.10.0               #>  [51] benchmarkmeData_1.0.4         spam_2.9-0                    #>  [53] rlang_1.0.4                   systemfonts_1.0.4             #>  [55] scatterplot3d_0.3-41          rtracklayer_1.54.0            #>  [57] lazyeval_0.2.2                BiocManager_1.30.18           #>  [59] yaml_2.3.5                    httpuv_1.6.5                  #>  [61] tools_4.1.3                   usethis_2.1.6                 #>  [63] SpatialExperiment_1.4.0       ellipsis_0.3.2                #>  [65] jquerylib_0.1.4               RColorBrewer_1.1-3            #>  [67] sessioninfo_1.2.2             Rcpp_1.0.9                    #>  [69] sparseMatrixStats_1.6.0       zlibbioc_1.40.0               #>  [71] purrr_0.3.4                   RCurl_1.98-1.7                #>  [73] viridis_0.6.2                 cowplot_1.1.1                 #>  [75] ggrepel_0.9.1                 fs_1.5.2                      #>  [77] magrittr_2.0.3                data.table_1.14.2             #>  [79] magick_2.7.3                  pkgload_1.3.0                 #>  [81] mime_0.12                     evaluate_0.15                 #>  [83] xtable_1.8-4                  XML_3.99-0.10                 #>  [85] mclust_5.4.10                 sparsesvd_0.2                 #>  [87] gridExtra_2.3                 compiler_4.1.3                #>  [89] scater_1.22.0                 tibble_3.1.7                  #>  [91] maps_3.4.0                    crayon_1.5.1                  #>  [93] R.oo_1.25.0                   htmltools_0.5.2               #>  [95] later_1.3.0                   tidyr_1.2.0                   #>  [97] DBI_1.1.3                     ExperimentHub_2.2.1           #>  [99] dbplyr_2.2.1                  rappdirs_0.3.3                #> [101] Matrix_1.4-1                  cli_3.3.0                     #> [103] R.methodsS3_1.8.2             benchmarkme_1.0.8             #> [105] parallel_4.1.3                dotCall64_1.0-1               #> [107] golem_0.3.3                   pkgconfig_2.0.3               #> [109] pkgdown_2.0.6                 GenomicAlignments_1.30.0      #> [111] plotly_4.10.0                 scuttle_1.4.0                 #> [113] xml2_1.3.3                    roxygen2_7.2.0                #> [115] foreach_1.5.2                 vipor_0.4.5                   #> [117] bslib_0.4.0                   dqrng_0.3.0                   #> [119] XVector_0.34.0                attempt_0.3.1                 #> [121] stringr_1.4.0                 digest_0.6.29                 #> [123] Biostrings_2.62.0             rmarkdown_2.14                #> [125] edgeR_3.36.0                  DelayedMatrixStats_1.16.0     #> [127] restfulr_0.0.15               curl_4.3.2                    #> [129] shiny_1.7.1                   Rsamtools_2.10.0              #> [131] rjson_0.2.21                  lifecycle_1.0.1               #> [133] jsonlite_1.8.0                Rhdf5lib_1.16.0               #> [135] BiocNeighbors_1.12.0          spatialLIBD_1.6.5             #> [137] desc_1.4.1                    viridisLite_0.4.0             #> [139] limma_3.50.3                  fansi_1.0.3                   #> [141] pillar_1.7.0                  lattice_0.20-45               #> [143] KEGGREST_1.34.0               fastmap_1.1.0                 #> [145] httr_1.4.3                    interactiveDisplayBase_1.32.0 #> [147] glue_1.6.2                    FNN_1.1.3.1                   #> [149] png_0.1-7                     iterators_1.0.14              #> [151] Polychrome_1.5.1              BiocVersion_3.14.0            #> [153] bit_4.0.4                     stringi_1.7.6                 #> [155] sass_0.4.1                    HDF5Array_1.22.1              #> [157] blob_1.2.3                    textshaping_0.3.6             #> [159] BiocSingular_1.10.0           AnnotationHub_3.2.2           #> [161] memoise_2.0.1                 irlba_2.3.5"},{"path":"https://alexanderjwhite.github.io/smoothLRC/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexander White. Author, maintainer. Sha Cao. Author. Pengtao Dang. Contributor. Changlin Wan. Contributor. Arnu Zhang. Contributor. Chi Zhang. Contributor.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"White , Cao S (2022). smoothLRC: Tools Clustering Spatial Transcriptomics Data Based Low Rank Smoothing.. R package version 0.99.0, https://alexanderjwhite.github.io/smoothLRC/.","code":"@Manual{,   title = {smoothLRC: Tools For Clustering Spatial Transcriptomics Data Based On Low Rank Smoothing.},   author = {Alexander White and Sha Cao},   year = {2022},   note = {R package version 0.99.0},   url = {https://alexanderjwhite.github.io/smoothLRC/}, }"},{"path":"https://alexanderjwhite.github.io/smoothLRC/index.html","id":"smoothlrc-","dir":"","previous_headings":"","what":"Tools For Clustering Spatial Transcriptomics Data Based On Low Rank Smoothing.","title":"Tools For Clustering Spatial Transcriptomics Data Based On Low Rank Smoothing.","text":"Smooth Low-Rank Clustering (smoothLRC) provides tools analyze cluster spatial transcriptomics data.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools For Clustering Spatial Transcriptomics Data Based On Low Rank Smoothing.","text":"can install development version smoothLRC GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"alexanderjwhite/smoothLRC\")"},{"path":"https://alexanderjwhite.github.io/smoothLRC/index.html","id":"articles","dir":"","previous_headings":"","what":"Articles","title":"Tools For Clustering Spatial Transcriptomics Data Based On Low Rank Smoothing.","text":"Please visit smoothLRC documentation website details.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 smoothLRC authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/example_sce.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an example SummarizedExperiment object with spatial data — example_sce","title":"Create an example SummarizedExperiment object with spatial data — example_sce","text":"Create example SummarizedExperiment object spatial data","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/example_sce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an example SummarizedExperiment object with spatial data — example_sce","text":"","code":"example_sce(   n_row = 10,   n_col = 10,   n_gene = 1000,   lambda = 2,   frac_sparse = 0.95 )"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/example_sce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an example SummarizedExperiment object with spatial data — example_sce","text":"n_row integer; number simulated spatial pixel rows n_col integer; number simulated spatial pixel columns n_gene integer; number simulated genes lambda numeric; poisson parameter frac_sparse numeric; fraction 0s.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/example_sce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an example SummarizedExperiment object with spatial data — example_sce","text":"SummarizedExperiment object","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/example_sce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an example SummarizedExperiment object with spatial data — example_sce","text":"","code":"example_sce() #> class: SummarizedExperiment  #> dim: 1000 100  #> metadata(0): #> assays(2): counts logcounts #> rownames(1000): Feature 1 Feature 2 ... Feature 999 Feature 1000 #> rowData names(0): #> colnames(100): Pixel 1 Pixel 2 ... Pixel 99 Pixel 100 #> colData names(2): row col"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_clust.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster the right singular vectors from model output — smooth_clust","title":"Cluster the right singular vectors from model output — smooth_clust","text":"Cluster right singular vectors model output","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_clust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster the right singular vectors from model output — smooth_clust","text":"","code":"smooth_clust(v, n_clust)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_clust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster the right singular vectors from model output — smooth_clust","text":"v matrix; right singular vectors n_clust integer; number clusters.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_clust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster the right singular vectors from model output — smooth_clust","text":"vector cluster labels","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_clust.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster the right singular vectors from model output — smooth_clust","text":"","code":"sce <- example_sce() x <- SummarizedExperiment::assay(sce) coords <- SummarizedExperiment::colData(sce)[, c(\"col\", \"row\")] k <- 10 init <- smooth_init(x, coords, k) lambda <- 1 epsilon <- 1e-3 maxiter <- 5 model <- smooth_model(x, init$u0, init$v0, init$w, init$index, lambda, epsilon, maxiter) #> iteration: 1 | convergence: 0.0978677 | 0.0367396 | 1 #> iteration: 2 | convergence: 0.0733829 | 0.0299329 | 0.00495608 #> iteration: 3 | convergence: 0.0674642 | 0.0329445 | 0.00497391 #> iteration: 4 | convergence: 0.0660687 | 0.0349695 | 0.00512346 #> iteration: 5 | convergence: 0.0661369 | 0.0358345 | 0.00542723 n_clust <- 3 smooth_clust(model$v, n_clust) #> fitting ... #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>   [1] 3 2 3 3 1 3 3 3 1 2 3 3 1 3 3 1 1 3 3 3 1 3 1 3 3 3 3 2 2 1 1 1 3 3 3 2 1 #>  [38] 1 2 3 3 3 1 3 2 3 2 3 3 3 3 3 3 3 3 1 3 1 3 2 2 3 1 3 1 1 1 1 3 2 3 3 3 1 #>  [75] 2 3 3 1 1 3 3 1 3 3 3 3 1 3 3 2 3 3 3 1 3 3 3 3 2 1"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Selection via Cross-Validation — smooth_cv","title":"Parameter Selection via Cross-Validation — smooth_cv","text":"Parameter Selection via Cross-Validation","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter Selection via Cross-Validation — smooth_cv","text":"","code":"smooth_cv(   input,   lambda,   k,   test_size,   seed = 1,   epsilon = 0.001,   maxiter = 1000 )"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Selection via Cross-Validation — smooth_cv","text":"input SummarizedExperiment object containing counts assay row/col coordinates. lambda positive numeric; penalization parameter. k integer; indicates desired rank singular value decomposition. test_size number pixels use test set. seed random seed produce consistent pixel samples across parameter values cross-validation. epsilon positive numeric; convergence criterion. maxiter positive integer; maximum desired iterations","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter Selection via Cross-Validation — smooth_cv","text":"list containing penalized likelihood model cross-validated likelihood test set.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter Selection via Cross-Validation — smooth_cv","text":"","code":"sce <- example_sce() smooth_cv(sce, 1, 10, 100, maxiter = 10) #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC on training set...\" #> iteration: 1 | convergence: 0.100634 | 0.0352073 | 1 #> iteration: 2 | convergence: 0.0805562 | 0.0319074 | 0.0052013 #> iteration: 3 | convergence: 0.0761276 | 0.0356377 | 0.00534196 #> iteration: 4 | convergence: 0.0756976 | 0.0376116 | 0.00570168 #> iteration: 5 | convergence: 0.0768885 | 0.038213 | 0.00626252 #> iteration: 6 | convergence: 0.0795182 | 0.038371 | 0.00699932 #> iteration: 7 | convergence: 0.081943 | 0.0385264 | 0.00788443 #> iteration: 8 | convergence: 0.0833938 | 0.0387585 | 0.00889833 #> iteration: 9 | convergence: 0.0837714 | 0.0390335 | 0.0100277 #> iteration: 10 | convergence: 0.0832448 | 0.0393198 | 0.0112618 #> [1] \"Compute neighborhood likelihood...\" #> [1] \"Done!\" #> $penal_like #> [1] -79866.23 #>  #> $cv_like #> [1] -1005.049 #>"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialization objects for smoothLRC — smooth_init","title":"Initialization objects for smoothLRC — smooth_init","text":"Initialization objects smoothLRC","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialization objects for smoothLRC — smooth_init","text":"","code":"smooth_init(x, coords, k, knn = 6)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialization objects for smoothLRC — smooth_init","text":"x matrix; count assay. coords matrix; spatial coordinates. k integer; indicates desired rank singular value decomposition. knn integer; nearest neighbors.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialization objects for smoothLRC — smooth_init","text":"list objects smooth_model function.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialization objects for smoothLRC — smooth_init","text":"","code":"sce <- example_sce() x <- SummarizedExperiment::assay(sce) coords <- SummarizedExperiment::colData(sce)[, c(\"col\", \"row\")] k <- 10 smooth_init(x, coords, k) #> $u0 #>               [,1]          [,2]          [,3]          [,4]          [,5] #>    [1,] 0.13376047  0.0255174355  1.089626e-01 -0.1028664035 -8.623944e-02 #>    [2,] 0.24954316  0.0538685856 -2.206028e-01  0.0184517201  6.538114e-02 #>    [3,] 0.06383108  0.0037074422 -6.747351e-02  0.0226186908 -2.296333e-02 #>    [4,] 0.11745078  0.0743094180  4.758409e-02  0.1434469355 -6.215356e-02 #>    [5,] 0.04019505 -0.0045931597  1.513208e-02  0.0639618693 -3.086230e-02 #>    [6,] 0.16025325 -0.0392326646 -9.008983e-02 -0.0846950647 -3.500846e-02 #>    [7,] 0.12796368  0.1566078964  4.087371e-02 -0.0263154668 -6.580420e-02 #>    [8,] 0.11755399 -0.0162206675 -7.529852e-02  0.1070163173 -7.678155e-02 #>    [9,] 0.14962893  0.1028605748 -2.029476e-02 -0.0471310377  9.250207e-02 #>   [10,] 0.18757946  0.0162117818  1.417473e-02  0.0440227155  6.475499e-02 #>   [11,] 0.07693816 -0.0982056682  1.120641e-01 -0.0499135232 -1.499409e-02 #>   [12,] 0.09646743  0.0673368069  4.643185e-02 -0.0635654152  1.136402e-02 #>   [13,] 0.08965070  0.0100095754 -3.533877e-02 -0.1011376762  8.756413e-02 #>   [14,] 0.11891723  0.1805523683 -8.737288e-03  0.1292754144 -1.669718e-01 #>   [15,] 0.05429500 -0.0238937377 -5.113250e-02  0.0401368335  1.950156e-02 #>   [16,] 0.10205568  0.0503815954 -6.579591e-02 -0.0831285496 -1.396525e-01 #>   [17,] 0.06019145 -0.0222009566 -7.568717e-02 -0.0198072261 -1.438718e-02 #>   [18,] 0.03550541 -0.0019044543 -5.493423e-03 -0.0224450794  2.080436e-02 #>   [19,] 0.27777945  0.3194587026  5.617768e-02  0.3679573638  7.934295e-02 #>   [20,] 0.12935761  0.0024368661  1.043701e-01 -0.1376452041 -1.095893e-01 #>   [21,] 0.15290248  0.0905940617  3.818486e-02 -0.1973846242  1.611731e-01 #>   [22,] 0.14364181  0.1059774136  6.642681e-02  0.1038337843  3.576048e-02 #>   [23,] 0.24683180 -0.4484037891  1.403925e-01  0.1799526320 -1.626478e-01 #>   [24,] 0.07238278  0.0436544112  3.110337e-02 -0.0626116038 -3.954598e-02 #>   [25,] 0.24785488  0.1950415879  2.034276e-01  0.1180601105  1.029590e-01 #>   [26,] 0.16767288  0.0360592138  6.496149e-02  0.0281540153  1.559539e-01 #>   [27,] 0.07979327 -0.0075573449  3.480889e-02 -0.0413444795 -3.912547e-02 #>   [28,] 0.17846268 -0.2006385502  1.719290e-01  0.0988768006  5.316181e-02 #>   [29,] 0.15855493  0.0639583882  2.193667e-04  0.0445472232  2.861508e-02 #>   [30,] 0.07891284  0.0177152445  5.769839e-02  0.0136029925  1.578183e-01 #>   [31,] 0.13592923  0.0112485775 -2.910990e-02 -0.0461838350  1.507864e-01 #>   [32,] 0.12475076  0.1016826436  1.687649e-01  0.0035709737 -9.080014e-02 #>   [33,] 0.02348638 -0.0606820168  5.967707e-02  0.0261141478  4.321368e-02 #>   [34,] 0.09446947  0.0625870296 -7.028160e-03 -0.0314334394 -5.111723e-03 #>   [35,] 0.31789735 -0.6756471396 -3.561066e-01  0.0710276136 -2.380659e-02 #>   [36,] 0.09558330 -0.0829237384 -5.647040e-02  0.0353458857 -6.621692e-02 #>   [37,] 0.08868046 -0.1526160969 -1.706321e-02  0.1269344021 -3.418545e-02 #>   [38,] 0.09037551  0.0699485450  1.853431e-02 -0.0252079298 -4.233001e-02 #>   [39,] 0.06084329 -0.0924648932  1.399012e-02 -0.0576348641  1.276982e-02 #>   [40,] 0.12320028  0.1434029483 -5.541879e-02  0.0897698692 -1.202612e-01 #>   [41,] 0.11837841 -0.0368184600  1.410740e-01  0.0629396123  8.629327e-03 #>   [42,] 0.11591099  0.0048332388  1.034730e-01  0.0056352139 -8.187670e-03 #>   [43,] 0.29299612 -0.0480899515 -2.446623e-01  0.1888262519  2.848823e-01 #>   [44,] 0.06645005  0.0111466514  1.990055e-02  0.0399490993  5.856286e-02 #>   [45,] 0.18942872 -0.0326914132  9.124465e-02  0.2825553716 -1.081369e-01 #>   [46,] 0.10505413  0.0659260598 -1.637689e-02 -0.1489379128 -3.269696e-02 #>   [47,] 0.18113356 -0.1727166417 -2.823445e-01  0.0947181789  2.177105e-03 #>   [48,] 0.09673110  0.0214319779  4.554485e-02 -0.0071592288 -5.504669e-02 #>   [49,] 0.07638688  0.0577263949  5.984288e-02  0.1308306159  7.998007e-02 #>   [50,] 0.16916202 -0.0868364972 -6.216865e-02  0.1075183209 -5.967656e-02 #>   [51,] 0.09999942 -0.0323358993 -9.486070e-05  0.0497237424  1.770994e-02 #>   [52,] 0.18700757 -0.0118338406  7.906517e-02 -0.0605248521  1.263401e-01 #>   [53,] 0.04407963  0.0512281534 -2.821524e-02  0.0012424507 -3.967009e-02 #>   [54,] 0.20491992 -0.1761332114  2.116846e-01 -0.0579392193 -4.767516e-02 #>   [55,] 0.18058143  0.0057681506  5.139437e-02  0.0174710311  1.275786e-01 #>   [56,] 0.08302194 -0.0095900485 -2.550109e-02 -0.0774486067 -7.411958e-02 #>   [57,] 0.12708332  0.1192915380 -1.816614e-02  0.2558520795 -1.886376e-01 #>   [58,] 0.05243612 -0.0371435348 -1.189942e-01  0.0359561212 -2.507543e-02 #>   [59,] 0.02316712  0.0180315215  1.875175e-02  0.0118378082 -1.996926e-02 #>   [60,] 0.13471338  0.0212164580  9.286047e-02 -0.1236815550  1.946465e-01 #>   [61,] 0.07453522  0.0269486814  5.683614e-02 -0.0848169771 -6.388725e-03 #>   [62,] 0.00000000  0.0000000000  0.000000e+00  0.0000000000  0.000000e+00 #>   [63,] 0.17781159  0.0851163619  1.142515e-01  0.0242955536  4.632758e-02 #>   [64,] 0.17859834  0.1814750420  1.181060e-01  0.2150089772 -2.222641e-01 #>   [65,] 0.16605324  0.0492483307 -3.808382e-02 -0.0385930724  2.696790e-01 #>   [66,] 0.09706021  0.0025831111 -5.996082e-03 -0.0606617160 -4.052799e-02 #>   [67,] 0.30883538 -0.0584256147  1.016005e-01  0.4955063799 -4.043333e-01 #>   [68,] 0.09609270 -0.2451765208  9.186340e-02  0.1134275748 -1.648619e-01 #>   [69,] 0.11860423 -0.0238051066 -1.142125e-02 -0.0321883157  4.529302e-02 #>   [70,] 0.23783502 -0.0107786592  6.258031e-02  0.1765918784 -2.148987e-01 #>   [71,] 0.07793104  0.0597763033  4.286766e-02 -0.0682980271  5.505324e-03 #>   [72,] 0.23436813  0.0223349841 -1.491590e-01  0.1250684080  1.679615e-01 #>   [73,] 0.06169711 -0.0248838306  4.612784e-02 -0.1090184464  1.443800e-02 #>   [74,] 0.04151882  0.0125483382 -1.050820e-02 -0.0059208864  2.750565e-02 #>   [75,] 0.12520530  0.0158248128  8.154026e-02 -0.0873551373  3.759379e-02 #>   [76,] 0.03598551  0.0098084921 -2.019935e-02 -0.0369304436  3.588843e-02 #>   [77,] 0.00000000  0.0000000000  0.000000e+00  0.0000000000  0.000000e+00 #>   [78,] 0.06212102  0.0409279595  2.844740e-02 -0.0452350649  6.484156e-03 #>   [79,] 0.20666196  0.0042887607 -8.963348e-02  0.1162071963  1.355804e-01 #>   [80,] 0.10290786  0.0700381066 -1.038659e-02 -0.0312907040  4.307280e-02 #>   [81,] 0.06013332 -0.0178489087  5.433377e-02 -0.0304505851  1.912426e-01 #>   [82,] 0.08581044 -0.0071970730 -2.775053e-02  0.0190021259 -3.967879e-02 #>   [83,] 0.10657514  0.0323054112 -1.026134e-01 -0.0728621953  1.460551e-02 #>   [84,] 0.09815518 -0.0204118579 -2.385945e-02 -0.0282864347 -5.343552e-02 #>   [85,] 0.19536506 -0.0750972428 -1.678895e-01 -0.1636789693 -1.119256e-01 #>   [86,] 0.07736600 -0.0327871968  6.683795e-02 -0.0774814516  1.241651e-01 #>   [87,] 0.08864991 -0.0080890263  1.806362e-02 -0.0444036818 -6.247542e-02 #>   [88,] 0.16722923 -0.0892748832  3.208577e-02  0.0213218334  7.673917e-02 #>   [89,] 0.08775169  0.0982539604  5.164079e-02 -0.0260646732 -3.643946e-02 #>   [90,] 0.07806311 -0.2545438554  1.515848e-01  0.1001306117  1.460525e-02 #>   [91,] 0.11575595  0.1039120832 -3.035890e-02 -0.1513267047 -8.574483e-02 #>   [92,] 0.02183332 -0.0102413291 -2.545795e-05  0.0133465117 -4.589962e-02 #>   [93,] 0.06409480 -0.0495895105  9.926402e-02 -0.0292296967  5.894370e-02 #>   [94,] 0.14464139 -0.0452723316 -2.520897e-01  0.0892595606  1.191787e-01 #>   [95,] 0.08266907  0.0949649333  1.116718e-02  0.1177721218  1.102453e-01 #>   [96,] 0.06893077  0.0542869096  5.405939e-02  0.0715531704  2.364743e-03 #>   [97,] 0.13843644  0.0329792149 -6.010907e-02  0.0459652354 -1.016817e-01 #>   [98,] 0.06832452 -0.0338594764 -1.532479e-02 -0.0392837685  3.936200e-02 #>   [99,] 0.09370226 -0.0888240820 -9.196249e-02  0.0261810295  2.382755e-03 #>  [100,] 0.12424331  0.0665175254 -4.714694e-02  0.0176534647  9.363124e-02 #>                  [,6]          [,7]          [,8]          [,9]         [,10] #>    [1,] -0.1358532038  2.108449e-06 -0.0424797340  1.051054e-02  1.750582e-01 #>    [2,]  0.1091879678  9.113659e-02  0.1114684624  8.027838e-02  7.107309e-02 #>    [3,] -0.0100300898 -4.991962e-02 -0.0585566755  2.751601e-02 -4.358540e-02 #>    [4,]  0.0142114633  9.898288e-02 -0.1049683823 -4.632122e-02 -2.729605e-02 #>    [5,] -0.0165357501 -1.364941e-01 -0.0470900331 -3.353581e-02 -4.122644e-02 #>    [6,]  0.1551538502  1.231901e-02 -0.0598386056  3.086175e-03 -1.369415e-01 #>    [7,] -0.0216149930  5.447063e-02 -0.0286491712 -4.987109e-02 -9.641681e-02 #>    [8,] -0.0273249427  8.038264e-02 -0.0305524479  1.256081e-01  6.761496e-02 #>    [9,] -0.0832347158 -9.243497e-02  0.0703856351  1.735018e-01 -7.964846e-02 #>   [10,] -0.0784050278  1.806829e-01 -0.1165028515 -1.149682e-03  3.492307e-01 #>   [11,]  0.0924725811  1.714804e-02  0.0966485393  1.980200e-02  2.700626e-04 #>   [12,]  0.0457295228 -9.731198e-03  0.0340401008 -2.725482e-02  1.037677e-02 #>   [13,] -0.1188466976  5.086492e-02 -0.1408500084 -2.645960e-02  2.064132e-02 #>   [14,]  0.1320642029  8.313581e-02 -0.1820677034  1.542685e-02 -1.188452e-01 #>   [15,]  0.0211264653  3.819232e-02  0.0311158882 -4.817705e-02 -2.544274e-02 #>   [16,]  0.1000164798  3.566255e-02 -0.0128881383 -5.987270e-02  1.459393e-01 #>   [17,] -0.0487087436 -8.929109e-02 -0.0699086437  4.252530e-03  6.935366e-03 #>   [18,] -0.0059870599  1.294935e-02 -0.0294889919 -9.472590e-03  2.408301e-02 #>   [19,]  0.0699489741  5.211993e-02  0.1263216588 -2.515598e-01 -5.257629e-02 #>   [20,]  0.0447305178  6.426984e-02  0.1241803617  1.334636e-02  1.649383e-02 #>   [21,]  0.0530481801 -1.779391e-02 -0.2027433501  6.420525e-02 -2.149106e-02 #>   [22,] -0.0642244564  1.264917e-01  0.2113900106 -1.956189e-01 -3.925893e-02 #>   [23,]  0.0833538835  8.830904e-03  0.3333642058  1.650779e-02 -1.592971e-01 #>   [24,]  0.0014070377  7.457729e-02 -0.0293888564  5.615506e-03  3.478035e-02 #>   [25,] -0.2219845688  6.210371e-02 -0.0176529877 -1.671123e-01  8.320182e-02 #>   [26,]  0.0280874715 -2.815479e-02  0.2225177985  1.084828e-01  7.926081e-02 #>   [27,] -0.0918401252 -7.227283e-02 -0.0436310815 -2.034283e-02  6.220633e-02 #>   [28,]  0.0889389876 -1.919399e-01  0.1277995996  1.949520e-01  1.429511e-01 #>   [29,]  0.0324334344  1.371551e-01 -0.1074844996 -1.410561e-01  6.794204e-03 #>   [30,]  0.1821085974 -8.914441e-04 -0.0629957177 -2.561684e-02  2.712094e-02 #>   [31,] -0.0388730227  5.668093e-02  0.0587980276  9.813165e-02 -8.991793e-02 #>   [32,] -0.0179358410  1.658618e-01  0.1120550712 -5.371345e-02 -3.627936e-02 #>   [33,]  0.0043414750 -3.181633e-02 -0.0347817211  2.370555e-02  2.716211e-02 #>   [34,] -0.0540693392 -9.090079e-04 -0.0349307586  1.334368e-01  4.789452e-02 #>   [35,] -0.0425669790  4.376407e-01  0.0250527496 -1.298291e-01 -6.958901e-02 #>   [36,]  0.0629910330  1.762907e-01  0.0109809969  3.825039e-02 -7.582152e-02 #>   [37,]  0.0245240485  8.964331e-02 -0.0035059812 -3.225077e-02 -9.206770e-03 #>   [38,]  0.0606961919 -4.874312e-02  0.0241838652  4.015374e-02  1.490948e-01 #>   [39,] -0.0236878352  1.893869e-02 -0.0243167817  1.580640e-01 -5.826207e-02 #>   [40,]  0.0565960767 -4.400661e-04 -0.1247141952 -8.946145e-02  4.417329e-02 #>   [41,] -0.2069075689 -2.637619e-01 -0.0307663647 -5.880050e-02 -1.443879e-01 #>   [42,] -0.2123002165  6.336511e-02  0.0465053253  6.253386e-02  9.549537e-02 #>   [43,] -0.2615490941  1.120331e-01  0.2330223762 -2.583273e-01 -1.295360e-01 #>   [44,]  0.0362390217  9.584297e-03 -0.0430310967 -5.458684e-02  6.323693e-02 #>   [45,]  0.2368774975  5.937434e-03 -0.1048718980 -1.377009e-02  2.502202e-02 #>   [46,] -0.0457904242 -1.812779e-03 -0.0465674882  4.814404e-02 -6.898786e-02 #>   [47,]  0.0107480079  2.357244e-01 -0.0741299374 -1.349155e-01 -1.090621e-01 #>   [48,] -0.0201358655  2.270166e-02  0.0536118958  1.501999e-02  3.098420e-02 #>   [49,] -0.0263288254  1.407481e-01  0.0433366715  1.329107e-01  2.324397e-01 #>   [50,]  0.0301866633  7.984815e-02  0.2374667846 -1.296458e-01 -1.616990e-01 #>   [51,] -0.0177788893 -1.934586e-02 -0.0368430552 -6.769163e-02 -6.763474e-04 #>   [52,] -0.1338586600 -2.021846e-01 -0.2384102417  3.623684e-02  4.979404e-02 #>   [53,] -0.0298493420  1.524234e-02  0.0074956903  5.698390e-02  2.522350e-02 #>   [54,] -0.0706815913  2.260102e-01 -0.2361537996 -7.415203e-02  1.940792e-01 #>   [55,] -0.0800263826  1.250718e-01  0.0232097591  1.902294e-01 -7.095735e-02 #>   [56,]  0.0933082629  1.934252e-03 -0.1255069708  1.013009e-01 -2.709981e-02 #>   [57,]  0.0652313962  4.594145e-02 -0.1251267290 -5.540947e-02 -1.023994e-02 #>   [58,] -0.0410455857 -8.194338e-02 -0.0123725677  3.819970e-02 -1.079836e-02 #>   [59,] -0.0053944307 -1.350166e-02  0.0790647645 -6.215246e-02 -3.204629e-02 #>   [60,]  0.0037197298  9.541175e-02 -0.0536536219  7.130545e-02  6.042415e-02 #>   [61,] -0.0787824398 -1.539889e-04 -0.0691238515  5.591314e-03  4.427384e-02 #>   [62,]  0.0000000000  0.000000e+00  0.0000000000  0.000000e+00  0.000000e+00 #>   [63,] -0.0727223339  1.193275e-01  0.1910777209 -3.958056e-02 -4.376494e-02 #>   [64,]  0.0450778758  4.109654e-02 -0.1601460159 -9.236167e-02 -2.522058e-02 #>   [65,]  0.1111510013 -2.372436e-01 -0.1427067385  1.441084e-02  1.137431e-02 #>   [66,] -0.0583553056  9.595668e-04  0.1732751081 -1.329542e-02 -4.543378e-02 #>   [67,]  0.1095668035 -4.328097e-01 -0.1965915755  2.773333e-02 -6.914736e-02 #>   [68,] -0.0124789919  1.076755e-01  0.0158352196  1.826849e-02 -3.766594e-02 #>   [69,] -0.0919851177 -7.894210e-03  0.0635224196 -1.979033e-02 -4.985059e-02 #>   [70,]  0.0075718292  1.783864e-01  0.0269031067 -4.337682e-02 -3.832465e-02 #>   [71,]  0.0055416081  5.836499e-02 -0.0540810754  7.527087e-03 -8.443247e-02 #>   [72,]  0.2094984946  1.366797e-01  0.0419722257 -6.959002e-02  1.207498e-01 #>   [73,]  0.0124955653  3.887318e-02  0.0103580570 -1.800450e-01 -5.398551e-02 #>   [74,]  0.0431361812  3.976569e-04 -0.0454603725 -5.085084e-02 -4.140032e-02 #>   [75,] -0.1936350439 -1.235919e-01  0.1383642053  1.059187e-01 -1.118907e-01 #>   [76,] -0.0640286775 -1.423539e-02 -0.0147766172 -3.122222e-02  3.873615e-02 #>   [77,]  0.0000000000  0.000000e+00  0.0000000000  0.000000e+00  0.000000e+00 #>   [78,] -0.0338007495  1.915187e-02 -0.0860188000  4.081544e-02 -6.800099e-03 #>   [79,]  0.0042834549 -2.703937e-03 -0.0013240464  3.468358e-01 -8.025841e-03 #>   [80,] -0.0179144563 -4.829517e-02  0.0524845358  4.878817e-02 -2.004710e-01 #>   [81,]  0.1776313399 -6.023261e-02 -0.0109253149  4.229618e-02  1.193047e-02 #>   [82,]  0.0578471069 -1.610013e-02 -0.0567750982 -1.632907e-02 -6.104392e-03 #>   [83,] -0.0736010022 -2.196364e-01 -0.1240185163  5.363240e-02 -9.162072e-02 #>   [84,] -0.1419093081 -1.589377e-01  0.0015809105  3.364343e-02 -1.159531e-01 #>   [85,]  0.1568675527  9.761942e-02  0.1028918485  6.954010e-02  1.249652e-01 #>   [86,]  0.1544852197 -4.949990e-03 -0.0657804145 -1.034097e-01  6.382831e-02 #>   [87,] -0.0964934076 -3.196245e-02 -0.0573825273 -7.353485e-02  9.880927e-03 #>   [88,]  0.0223367521 -1.377060e-01 -0.0820115675 -1.461191e-02  4.782585e-02 #>   [89,] -0.0252231326  1.440577e-01 -0.0747451192  4.945600e-02 -1.960650e-02 #>   [90,]  0.0121349078 -2.020346e-02 -0.0425143686  5.246751e-02  2.505945e-02 #>   [91,] -0.0439290624  1.349153e-01 -0.1378241313  1.389944e-01 -2.558950e-02 #>   [92,]  0.0010789855  2.196196e-02  0.0096135340 -1.621438e-02  6.633268e-03 #>   [93,] -0.0347232055 -5.454778e-02 -0.0748202347  1.069783e-02  5.601932e-02 #>   [94,] -0.0854059953  1.427121e-01 -0.0402500111 -3.623979e-02  1.045467e-01 #>   [95,]  0.0204345561  1.012141e-02  0.0360501035  8.771127e-02  1.451458e-01 #>   [96,] -0.0520271611  9.759064e-02 -0.0174463032  8.995503e-02  1.224495e-01 #>   [97,] -0.0689998870 -2.199453e-02  0.1334685946 -4.821073e-02 -5.505336e-02 #>   [98,]  0.0117460365 -2.574368e-02 -0.1092650879 -8.714305e-02  3.882841e-02 #>   [99,] -0.0303177172  9.470734e-02 -0.0279528327  2.663953e-02  3.821219e-02 #>  [100,]  0.0718602875 -1.848013e-01 -0.1384362258 -8.600059e-02  6.103987e-03 #>  [ reached getOption(\"max.print\") -- omitted 900 rows ] #>  #> $v0 #>             [,1]         [,2]          [,3]         [,4]         [,5] #>   [1,] 0.6550246 -0.077143051 -0.6895898849 -1.213849045 -0.839791325 #>   [2,] 0.4548884  0.312477049  0.0238418082  0.416289444  0.215713775 #>   [3,] 0.3609754 -0.024581761  0.0787314799  0.326913254 -0.157446724 #>   [4,] 0.3905585  0.142509044  0.3966302071 -0.122927491  0.069011255 #>   [5,] 0.4231895  0.373202535 -0.1433185625 -0.041482472  0.152823110 #>   [6,] 0.5124610 -0.149328662 -0.2475361997 -0.263509559  0.206554227 #>   [7,] 0.5346019 -1.324132260  0.3559901263  0.459002537 -0.607131519 #>   [8,] 0.4207679  0.480473732 -0.1367149582 -0.380661664 -0.290137077 #>   [9,] 0.4920674 -0.059961030  0.5860847950  0.294426937  0.589971536 #>  [10,] 0.3993476  0.298294896  0.3026750384 -0.009740067  0.101204452 #>  [11,] 0.3362979  0.239813694 -0.0073575108  0.241436861 -0.095279403 #>  [12,] 0.3947955  0.296695922 -0.0475063005 -0.266389595  0.307438598 #>  [13,] 0.3987205 -0.331546789 -0.2890792026 -0.104086594 -0.095440322 #>  [14,] 0.5440370 -0.089352081  0.1417350039  0.673724534 -1.024496654 #>  [15,] 0.4056029  0.334208325 -0.0126704504  0.115369347  0.128167155 #>  [16,] 0.3363484  0.299680948 -0.1892734530 -0.052920491 -0.043161020 #>  [17,] 0.2906118  0.122388847  0.0486320571 -0.192924049  0.033321762 #>  [18,] 0.3183599  0.266635515 -0.1396493617  0.116641058 -0.176213262 #>  [19,] 0.5312070 -0.128904957  0.3941867804 -0.071055243  1.172692155 #>  [20,] 0.3466794  0.009265938  0.1548264427 -0.292446742  0.138909127 #>  [21,] 0.4716954 -0.928765562 -0.3293863595 -0.006968719 -0.267389867 #>  [22,] 0.4000566  0.125889959 -0.0388129732 -0.182144230 -0.134266779 #>  [23,] 0.4554425  0.048522074  0.1010617290 -0.010494184 -0.023447629 #>  [24,] 0.4090329 -0.079389681 -0.0987039659  0.192487215 -0.178402927 #>  [25,] 0.4329363  0.020475376 -0.0205216027 -0.064751085  0.913972042 #>  [26,] 0.4179056  0.163223912 -0.0477771252  0.007069679  0.334300474 #>  [27,] 0.3717737  0.139239961 -0.0365325622 -0.156719374  0.255525520 #>  [28,] 0.4596525 -0.159226444  0.2949767613 -0.228611202 -0.279664244 #>  [29,] 0.3547496  0.149092846  0.1971810088 -0.192826376  0.135015172 #>  [30,] 0.4214159 -0.366929469  0.4859189792 -0.083613043  0.117721548 #>  [31,] 0.3848841  0.001028562  0.1093770937  0.080349586  0.248058424 #>  [32,] 0.4459391  0.222707248  0.1625933783 -0.258328190 -0.325426522 #>  [33,] 0.2956170 -0.036897646  0.2483691794 -0.381439915 -0.078223841 #>  [34,] 0.2883749  0.080432344 -0.0511384207 -0.283685365 -0.112649071 #>  [35,] 0.3713561  0.078344908 -0.1744271771  0.287368052  0.019499879 #>  [36,] 0.4245069  0.350428480 -0.2116100993  0.033895413  0.156715680 #>  [37,] 0.2862215 -0.006536580  0.0033150964 -0.186005630  0.248325062 #>  [38,] 0.4771151 -0.030743653  0.0254387517  0.026064592  0.177494319 #>  [39,] 0.3491082  0.141885629  0.1878647740 -0.114501323 -0.224124240 #>  [40,] 0.4104244  0.120884853  0.4800126036 -0.461297508  0.008924213 #>  [41,] 0.4440873  0.091150506  0.0869049693  0.090309935  0.189240456 #>  [42,] 0.3355918  0.145171085 -0.0239264675 -0.211026823 -0.320946660 #>  [43,] 0.3730972  0.049014091  0.1354897633 -0.226808497 -0.182433057 #>  [44,] 0.2858952  0.107730996 -0.0180742228 -0.108306582  0.005213904 #>  [45,] 0.4525909  0.125548146 -0.1167398056 -0.307412719 -0.407779461 #>  [46,] 0.4164507  0.017730019 -0.0647974060 -0.457571064 -0.013749304 #>  [47,] 0.3109875  0.093535150  0.0898234044  0.091023163  0.191901148 #>  [48,] 0.5840829  0.270913806  0.2738981020  0.169855652 -0.285999128 #>  [49,] 0.3156900 -0.205247325 -0.0206525711 -0.035120868 -0.005980735 #>  [50,] 0.7002357  0.900397756 -0.0796236896  1.180344513 -0.919365425 #>  [51,] 0.6827341 -0.521704301 -1.8765297116  0.216489482  0.662108451 #>  [52,] 0.4483463  0.330636767 -0.0295851033  0.201551585 -0.052723197 #>  [53,] 0.5537116  0.222001918 -0.5251260894 -0.313174197  0.060677745 #>  [54,] 0.3928556 -0.204811334  0.3984278194 -0.093187919  0.018177903 #>  [55,] 0.3472987 -0.097081415 -0.0002346127  0.120825188 -0.414756093 #>  [56,] 0.3334999 -0.580532585  0.1571848949 -0.061486220 -0.153798323 #>  [57,] 0.3099288  0.035121141 -0.0380992044 -0.306317479  0.214486069 #>  [58,] 0.3812540  0.089626931 -0.1432574711  0.062447691 -0.311697875 #>  [59,] 0.4301633  0.004931777 -0.1703946667  0.544917519  0.022775408 #>  [60,] 0.3735936 -0.575227684  0.5499657370  0.236409851  0.390485517 #>  [61,] 0.4298781  0.371103907  0.0455879133 -0.280621362 -0.272696677 #>  [62,] 0.4012394 -0.046730253  0.2274433857  0.282181662 -0.417629506 #>  [63,] 0.4139859 -0.268528095  0.2190417652 -0.224832261 -0.210207095 #>  [64,] 0.3313332 -0.106379972  0.0017163870 -0.010215916  0.256182105 #>  [65,] 0.3539486 -0.209817948 -0.3871718818  0.336607323  0.067089072 #>  [66,] 0.4739806  0.112253650  0.4664725893 -0.697716925 -0.044930879 #>  [67,] 0.4227330  0.065016883 -0.3245516433 -0.212341361 -0.065922458 #>  [68,] 0.4081673 -0.635129896 -0.0399039230 -0.108794959  0.098104266 #>  [69,] 0.3088233  0.095291091 -0.0200203439 -0.129817425 -0.029541217 #>  [70,] 0.4039787  0.230704632 -0.0315751305  0.308340483 -0.075586061 #>  [71,] 0.3859831  0.343352867 -0.3448452201  0.136529764 -0.148720082 #>  [72,] 0.4446494 -0.460932364 -0.2143430880 -0.469724496  0.198229524 #>  [73,] 0.5658424  0.620325006  0.7272353045  0.345744484  0.177616394 #>  [74,] 0.4927401 -0.091999926  0.4802566705 -0.577524067  0.313023686 #>  [75,] 0.4581933 -0.032045811 -0.2301230750  0.079337894  0.174080051 #>  [76,] 0.2954019  0.027846984  0.0988800325  0.231451836  0.014272086 #>  [77,] 0.4130823  0.278419399 -0.2240702777 -0.216589117  0.045999198 #>  [78,] 0.4497021 -0.413715711  0.4247565299  0.170686117  0.052349609 #>  [79,] 0.2850050 -0.094933087 -0.1433727880 -0.204605484 -0.209633382 #>  [80,] 0.2500020  0.134800725  0.0653322201 -0.109192716  0.104868875 #>  [81,] 0.4779124  0.131203042 -0.2246498028  0.262795167  0.231182357 #>  [82,] 0.4661387  0.320362692 -0.2584847311  0.501089130  0.681792175 #>  [83,] 0.4525663 -0.369537859  0.0684535082  0.340731064 -0.029448809 #>  [84,] 0.3711090 -0.009138827 -0.0339321318  0.092483197  0.017588319 #>  [85,] 0.5747267 -1.154863313  0.3308194561  0.512381262 -0.024168380 #>  [86,] 0.1995066 -0.038114725  0.1591734868  0.037474568  0.002309630 #>  [87,] 0.4365974  0.295950973  0.1424779758 -0.355154042  0.169233863 #>  [88,] 0.4461419  0.374142023  0.3007246544  0.533658120  0.245025526 #>  [89,] 0.4840281 -0.174121734 -0.6754605969  0.089655848 -0.213109229 #>  [90,] 0.3327340 -0.042996767  0.0416614869  0.214367695  0.220545181 #>  [91,] 0.2828961 -0.059362260  0.2492496632 -0.290636186  0.108476906 #>  [92,] 0.3469025  0.034325876  0.0705098360 -0.060814216  0.170487044 #>  [93,] 0.3927426 -0.376858830  0.1852353307 -0.107272892 -0.252965007 #>  [94,] 0.4923048 -0.304842644 -0.2967943482  0.075988352  0.156719217 #>  [95,] 0.3165418  0.228504751  0.1082454470 -0.420093640 -0.344490039 #>  [96,] 0.3597224  0.198830711 -0.4147118195  0.393439547  0.201762526 #>  [97,] 0.3485422  0.092281618  0.1145417502 -0.021200164  0.154498382 #>  [98,] 0.3769749  0.161197384  0.0745038492  0.085265075 -0.223914408 #>  [99,] 0.3838484 -0.052597343  0.1632032539 -0.278428495 -0.293150085 #> [100,] 0.3940946  0.143876120  0.0660611778 -0.045374359  0.065898430 #>                 [,6]          [,7]         [,8]         [,9]         [,10] #>   [1,]  9.011486e-01 -0.6181083392  0.650917120 -0.089737668  0.9874061956 #>   [2,] -2.326183e-01  0.0620297367  0.638888799 -0.114022001  0.3081553176 #>   [3,] -8.362214e-02 -0.6802805943 -0.234094428 -0.165480134 -0.2006611383 #>   [4,] -4.723191e-01 -0.0628409906 -0.543614651  0.127264639  0.5353332717 #>   [5,] -2.587609e-01 -0.2053595036  0.112581019  0.358703042 -0.3003409173 #>   [6,] -5.467347e-01 -0.2265712282  0.157612290 -0.582856245  0.6464749549 #>   [7,]  3.508931e-02  0.3532722823  0.205338701  0.066406210 -0.2271908262 #>   [8,]  1.991982e-02  0.0049654135 -0.007577933  0.490794059 -0.7514685129 #>   [9,] -4.193499e-01 -0.0989748268 -0.215730214 -0.171923719 -0.1636420162 #>  [10,] -1.463004e-02  0.3478466142 -0.154612090 -0.042054809 -0.4883016021 #>  [11,]  3.716439e-02  0.3383505223 -0.153503424 -0.235823688  0.2211087532 #>  [12,] -3.622765e-01  0.0273934142 -0.363834020  0.150344325 -0.1171757791 #>  [13,]  5.065719e-03  0.2825817085  0.183450789  0.470670868 -0.3724842674 #>  [14,] -1.883311e-02 -0.5072716019 -0.615616208 -0.126698270 -0.0064152656 #>  [15,] -4.235848e-01 -0.0396781049  0.352200766 -0.066915094 -0.0029278798 #>  [16,]  2.335433e-01  0.1699978846 -0.165078504  0.250571837 -0.1417195289 #>  [17,]  1.559800e-01 -0.0860043801  0.166171656  0.049233412 -0.1762732898 #>  [18,] -1.101423e-01  0.1798489454 -0.012183704  0.311277286  0.1305554828 #>  [19,]  1.269241e+00 -0.2945481795 -0.273186452 -0.048346054  0.1383573937 #>  [20,] -1.424428e-01 -0.1426527340 -0.359225970 -0.179251943  0.1398363412 #>  [21,]  4.767739e-01  0.7370116942  0.210960093 -0.303244378 -0.5330314320 #>  [22,]  1.075102e-05  0.4417840704 -0.476178388  0.421905287  0.1624452333 #>  [23,] -1.787572e-01 -0.2853998125  0.143214083  0.218059273  0.4027898262 #>  [24,]  1.123008e-01  0.4643883847 -0.034210741  0.251352881 -0.0280735299 #>  [25,]  3.415484e-01 -0.1142407234  0.013725539  0.361548704  0.0563228145 #>  [26,]  1.278411e-01 -0.3130362182  0.048208644  0.042754611 -0.3108921206 #>  [27,]  5.438912e-01  0.1165772694 -0.045271527  0.060475428 -0.2234940945 #>  [28,] -8.107892e-01 -0.7468091412  0.261511931 -0.018492485 -0.4853559513 #>  [29,] -1.199024e-01  0.3253008125  0.208802169 -0.011006150 -0.0279693714 #>  [30,]  4.508517e-01  0.1012674850  0.549492314 -0.035049319  0.1167051053 #>  [31,]  1.189032e-01 -0.0099168561  0.262704363 -0.346559070  0.0320347406 #>  [32,] -2.241753e-01  0.1499392206  0.453522052 -0.010424143 -0.1626429730 #>  [33,] -2.602589e-02  0.3832172234 -0.396449663  0.062651724 -0.5469873343 #>  [34,] -1.390557e-01 -0.2516360564  0.136103897 -0.015259436  0.0071782526 #>  [35,]  2.115773e-01  0.1430898496 -0.061268617 -0.292016254  0.1927648065 #>  [36,]  3.366310e-02  0.0845090413  0.250827544  0.536029304 -0.7395512377 #>  [37,] -1.051153e-02 -0.1600430637  0.248523076  0.430677852 -0.0717330977 #>  [38,] -2.363638e-01 -0.1175260349  0.318358385 -0.267715254 -0.5792804974 #>  [39,] -3.565846e-02  0.3049149929  0.025772175 -0.155229458 -0.0211716991 #>  [40,]  6.067873e-01  0.5476265693  0.032003349  0.345315250 -0.4779705013 #>  [41,]  1.850303e-01 -0.1280423838 -0.141001520 -0.266009967  0.2347981369 #>  [42,]  4.992525e-01  0.1761671160 -0.162005892  0.123655409  0.0569111018 #>  [43,] -6.334963e-01  0.2586530125 -0.050965153  0.135967381  0.0108867052 #>  [44,] -1.610138e-01 -0.0335470796  0.107052913  0.161349931  0.0492238705 #>  [45,]  6.569872e-01 -0.2839312476 -0.409083909 -0.069012271 -0.2568531951 #>  [46,] -1.341592e-01 -0.0320499669 -0.290834257 -0.396585434  0.2238381777 #>  [47,] -1.579838e-02  0.0475996145  0.031356632  0.365623673  0.1030842188 #>  [48,] -7.658440e-02 -0.1889116150  1.103423894 -0.860979183 -0.4378874366 #>  [49,]  1.749433e-01  0.0970309292 -0.030103472 -0.177647889  0.2815531666 #>  [50,]  5.963528e-01  0.0008858321 -0.587756362 -0.212500017 -0.0865182597 #>  [51,] -4.134913e-01  0.6169561784 -0.148646498 -0.601949471  0.0344697915 #>  [52,] -6.484922e-02 -0.4514786056  0.390556714  0.299871115  0.6326766784 #>  [53,] -7.442654e-01 -0.1406970718 -0.398702980  0.608828578 -0.2934437373 #>  [54,] -5.317250e-01 -0.2622249018  0.321831503  0.053078581 -0.0604446500 #>  [55,]  9.664766e-03  0.1938757816  0.084649321 -0.141714920  0.0571864694 #>  [56,]  2.748685e-02  0.3212114785 -0.219379009  0.038724028  0.2578555711 #>  [57,] -2.414978e-01  0.1348531947  0.134452475  0.049087471 -0.1311960326 #>  [58,]  2.298914e-01 -0.1832571448  0.075993560 -0.224686902  0.0869986255 #>  [59,] -4.030070e-03  0.1173655706  0.220721547 -0.067582438  0.0773333584 #>  [60,]  3.888777e-02 -0.2808682307 -0.306260847  0.207188397  0.2341688979 #>  [61,] -1.615196e-01  0.3730685873 -0.285447536  0.277979019  0.2149716263 #>  [62,] -7.234102e-02  0.3459722306 -0.291815103 -0.059754006  0.0466294240 #>  [63,]  1.145524e-01  0.0020650628  0.031413778  0.153188696 -0.1151158257 #>  [64,]  1.004934e-01  0.0807977438 -0.181141290 -0.001062136  0.1042389407 #>  [65,] -1.169732e-01 -0.1232920711  0.233610905  0.186152293 -0.0206820592 #>  [66,]  2.800199e-03  0.1920656322 -0.560730521 -0.145862630  0.1670970175 #>  [67,]  1.097506e-01 -0.1377268312  0.538872144 -0.055113397  0.1116899214 #>  [68,] -2.008024e-01 -0.0138797121 -0.046980689  0.894828448 -0.0313725638 #>  [69,]  1.455367e-01 -0.0427416594 -0.160112434  0.072910407 -0.0873494122 #>  [70,] -1.042290e-01 -0.1082112107  0.024622487  0.186712328 -0.1849176941 #>  [71,]  1.000664e-01  0.0615175401  0.363490805  0.291560448  0.1313674073 #>  [72,] -2.884781e-01  0.3113181323 -0.490797265 -0.370291779  0.3966582651 #>  [73,] -1.238013e-01  0.4624554319  0.670310007 -0.596657167  0.1682234682 #>  [74,]  2.668243e-03  0.1437736656  0.056598518 -0.822525159 -0.5145577251 #>  [75,]  2.128307e-01 -0.9473269600 -0.624778349 -0.078629502 -0.3468597747 #>  [76,]  5.212668e-02  0.3154172367 -0.037990551  0.020939875 -0.0313327870 #>  [77,]  2.860215e-02  0.1286158731  0.377973308  0.374689146 -0.1917640056 #>  [78,] -1.768466e-01  0.2327692818 -0.328985199  0.005536176  0.4473866275 #>  [79,]  8.603115e-02  0.1281779170  0.015679744 -0.424529513  0.1457228749 #>  [80,]  1.850008e-01  0.1081040422 -0.087813189 -0.017422998  0.0075339059 #>  [81,]  1.282804e-01  0.2722319737  0.061127500  0.602824721  0.3476092192 #>  [82,]  5.523965e-01 -0.5058312314 -0.253672764 -0.342543516 -0.1644384774 #>  [83,] -3.766090e-01 -0.5268388942 -0.283916102 -0.291481041 -0.2486867031 #>  [84,] -1.432029e-01  0.1360806317 -0.096298345 -0.230671265  0.0048862785 #>  [85,]  3.741054e-01 -0.6507057046  0.429164893  0.794274878 -0.0007136567 #>  [86,] -1.541179e-01 -0.0061536474  0.021075805  0.040461264  0.1423458712 #>  [87,] -3.085757e-03 -0.5772524742 -0.114245487 -0.126279075  0.1541425232 #>  [88,] -1.651093e-01  0.4982552181  0.367750203  0.751111354  1.0829574179 #>  [89,] -2.328742e-01 -0.5116189547 -0.203140920  0.171508309 -0.0634345117 #>  [90,]  2.283134e-02  0.2934364023 -0.148934874 -0.043249762  0.1622364072 #>  [91,]  1.945020e-02  0.0837371707 -0.219597539 -0.294157577  0.1817055506 #>  [92,] -3.516797e-01 -0.3218486379  0.001233486 -0.021659411  0.1433561815 #>  [93,] -2.520512e-01  0.1283974969 -0.135765984 -0.164919050  0.2536845883 #>  [94,] -2.234184e-02  0.1940643262  0.335250984 -0.129054995 -0.4121107528 #>  [95,]  7.873424e-02  0.0590568118  0.121552349  0.047527204  0.1286161121 #>  [96,]  7.644267e-02  0.2010927961 -0.119928525 -0.249150874  0.0966177305 #>  [97,] -2.119781e-02  0.1111659400 -0.146171992 -0.054583399 -0.1552061894 #>  [98,] -4.732592e-02  0.3465169227 -0.427560763 -0.069800943 -0.0421273732 #>  [99,] -2.022173e-01 -0.1865656607 -0.348375513 -0.042049713  0.2111219162 #> [100,] -1.200118e-02  0.0403506204 -0.089495007  0.115601513 -0.2565775532 #>  #> $w #> 100 x 100 sparse Matrix of class \"dgCMatrixsuppressing 67 columns and 70 rows in show(); maybe adjust 'options(max.print= *, widthindex #>        [,1] [,2] [,3] [,4] [,5] [,6] #>   [1,]    2   11   12    3   21   13 #>   [2,]    1   12    3   11   13   22 #>   [3,]   13    2    4   12   14    1 #>   [4,]   14    5    3   15   13   24 #>   [5,]   15    4    6   14   16   25 #>   [6,]   16    7    5   17   15   26 #>   [7,]   17    6    8   16   18   27 #>   [8,]   18    9    7   19   17   10 #>   [9,]   10   19    8   20   18   29 #>  [10,]    9   20   19    8   30   18 #>  [11,]   12    1   21    2   22   13 #>  [12,]   11    2   13   22    1    3 #>  [13,]    3   12   23   14    2   22 #>  [14,]    4   15   24   13    5   25 #>  [15,]    5   14   25   16    4   24 #>  [16,]    6   17   26   15    7   27 #>  [17,]    7   16   27   18    6   26 #>  [18,]    8   19   28   17    9   29 #>  [19,]   20    9   18   29   10    8 #>  [20,]   19   10   30    9   29   18 #>  [21,]   22   11   31   12   32   23 #>  [22,]   21   23   12   32   11   13 #>  [23,]   22   13   24   33   12   14 #>  [24,]   25   14   23   34   15   13 #>  [25,]   24   15   35   26   14   34 #>  [26,]   27   16   36   25   17   37 #>  [27,]   26   17   28   37   16   18 #>  [28,]   29   18   27   38   19   17 #>  [29,]   30   28   19   39   20   18 #>  [30,]   29   20   40   19   39   28 #>  [31,]   32   41   21   42   22   33 #>  [32,]   31   42   33   22   41   43 #>  [33,]   43   32   34   23   42   44 #>  [34,]   35   44   33   24   45   43 #>  [35,]   34   45   25   36   44   24 #>  [36,]   37   46   26   35   47   27 #>  [37,]   36   47   38   27   46   48 #>  [38,]   48   39   37   28   49   47 #>  [39,]   40   49   38   29   50   48 #>  [40,]   39   50   30   49   29   38 #>  [41,]   42   31   51   32   52   43 #>  [42,]   41   32   43   52   31   33 #>  [43,]   33   42   44   53   32   34 #>  [44,]   45   34   43   54   35   33 #>  [45,]   44   35   46   55   34   36 #>  [46,]   47   36   45   56   37   35 #>  [47,]   46   37   48   57   36   38 #>  [48,]   38   49   47   58   39   37 #>  [49,]   50   39   48   59   40   38 #>  [50,]   49   40   60   39   59   48 #>  [51,]   52   61   41   62   42   53 #>  [52,]   51   62   53   42   61   63 #>  [53,]   63   52   54   43   62   64 #>  [54,]   55   64   53   44   65   63 #>  [55,]   54   65   56   45   64   66 #>  [56,]   57   66   55   46   67   65 #>  [57,]   56   67   58   47   66   68 #>  [58,]   68   59   57   48   69   67 #>  [59,]   60   69   58   49   70   68 #>  [60,]   59   70   50   69   49   58 #>  [61,]   62   51   71   52   72   63 #>  [62,]   61   52   63   72   51   53 #>  [63,]   53   62   64   73   52   54 #>  [64,]   65   54   63   74   55   53 #>  [65,]   64   55   75   66   54   74 #>  [66,]   67   56   76   65   57   77 #>  [67,]   66   57   68   77   56   58 #>  [68,]   58   69   67   78   59   57 #>  [69,]   70   59   68   79   60   58 #>  [70,]   69   60   80   59   79   68 #>  [71,]   72   81   61   82   62   73 #>  [72,]   71   73   82   62   81   83 #>  [73,]   72   83   74   63   82   84 #>  [74,]   75   84   73   64   85   83 #>  [75,]   74   85   65   76   84   64 #>  [76,]   77   86   66   75   87   67 #>  [77,]   76   87   78   67   86   88 #>  [78,]   79   88   77   68   89   87 #>  [79,]   80   78   89   69   90   88 #>  [80,]   79   90   70   89   69   78 #>  [81,]   82   91   71   92   72   83 #>  [82,]   81   92   83   72   91   93 #>  [83,]   93   82   73   84   92   72 #>  [84,]   94   85   74   83   95   75 #>  [85,]   95   84   75   86   94   74 #>  [86,]   96   87   76   85   97   77 #>  [87,]   97   86   77   88   96   76 #>  [88,]   98   89   78   87   99   79 #>  [89,]   90   99   88   79  100   98 #>  [90,]   89  100   80   99   79   88 #>  [91,]   92   81   82   93   71   83 #>  [92,]   91   82   93   81   83   72 #>  [93,]   83   92   94   82   84   91 #>  [94,]   84   95   93   85   83   74 #>  [95,]   85   94   96   84   86   75 #>  [96,]   86   97   95   87   85   76 #>  [97,]   87   96   98   86   88   77 #>  [98,]   88   99   97   89   87  100 #>  [99,]  100   89   98   90   88   79 #> [100,]   99   90   89   98   80   88 #>"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_lrc.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster spatial transcriptomics data — smooth_lrc","title":"Cluster spatial transcriptomics data — smooth_lrc","text":"Cluster spatial transcriptomics data","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_lrc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster spatial transcriptomics data — smooth_lrc","text":"","code":"smooth_lrc(input, lambda, k, n_clust, epsilon = 0.001, maxiter = 1000)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_lrc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster spatial transcriptomics data — smooth_lrc","text":"input SummarizedExperiment object containing counts assay row/col coordinates. lambda positive numeric; penalization parameter. k integer; indicates desired rank singular value decomposition. n_clust integer; number clusters. epsilon positive numeric; convergence criterion. maxiter positive integer; maximum desired iterations","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_lrc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster spatial transcriptomics data — smooth_lrc","text":"SummarizedExperiment object u, v cluster labels.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_lrc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster spatial transcriptomics data — smooth_lrc","text":"","code":"sce <- example_sce() lambda <- 5 k <- 10 n_clust <- 5 epsilon <- 1e-3 maxiter <- 5 smooth_lrc(sce, lambda, k, n_clust, epsilon, maxiter) #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC...\" #> iteration: 1 | convergence: 0.0985133 | 0.0325876 | 1 #> iteration: 2 | convergence: 0.0860786 | 0.0313545 | 0.00441249 #> iteration: 3 | convergence: 0.0790279 | 0.0313457 | 0.00423158 #> iteration: 4 | convergence: 0.0757831 | 0.0317639 | 0.00420728 #> iteration: 5 | convergence: 0.0749528 | 0.0324045 | 0.00432117 #> [1] \"Clustering right singular vectors...\" #> fitting ... #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #> [1] \"Done!\" #> class: SummarizedExperiment  #> dim: 1000 100  #> metadata(2): smooth_u smooth_v #> assays(2): counts logcounts #> rownames(1000): Feature 1 Feature 2 ... Feature 999 Feature 1000 #> rowData names(0): #> colnames(100): Pixel 1 Pixel 2 ... Pixel 99 Pixel 100 #> colData names(3): row col smooth_cluster"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Main smoothLRC algorithm — smooth_model","title":"Main smoothLRC algorithm — smooth_model","text":"Main smoothLRC algorithm","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main smoothLRC algorithm — smooth_model","text":"","code":"smooth_model(x, u_init, v_init, w, index, lambda, epsilon, maxiter)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main smoothLRC algorithm — smooth_model","text":"x sparse matrix; assay matrix u_init matrix; u initialization matrix v_init matrix; v initialization matrix w matrix; distance matrix. null, computed specification k nearest neighbors. index w indicies. lambda positive numeric; penalization parameter. epsilon positive numeric; convergence criterion. maxiter positive integer; maximum desired iterations","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main smoothLRC algorithm — smooth_model","text":"SummarizedExperiment object u, v cluster labels.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Main smoothLRC algorithm — smooth_model","text":"","code":"sce <- example_sce() x <- SummarizedExperiment::assay(sce) coords <- SummarizedExperiment::colData(sce)[, c(\"col\", \"row\")] k <- 10 init <- smooth_init(x, coords, k) lambda <- 1 epsilon <- 1e-3 maxiter <- 5 smooth_model(x, init$u0, init$v0, init$w, init$index, lambda, epsilon, maxiter) #> iteration: 1 | convergence: 0.100083 | 0.0368995 | 1 #> iteration: 2 | convergence: 0.077226 | 0.0319263 | 0.0049489 #> iteration: 3 | convergence: 0.0712933 | 0.0369023 | 0.00506073 #> iteration: 4 | convergence: 0.0716642 | 0.0394365 | 0.00540793 #> iteration: 5 | convergence: 0.0749172 | 0.0403245 | 0.00599861 #> $u #>                  [,1]          [,2]          [,3]          [,4]          [,5] #>    [1,]  0.0288848398 -1.107455e-01  0.0657673714  9.875713e-04 -0.1200755791 #>    [2,]  0.0765609732 -3.242962e-02 -0.0797999768 -1.233660e-01 -0.0412584875 #>    [3,]  0.1461995761  1.730426e-02  0.0956516004 -8.987436e-02 -0.2154536714 #>    [4,]  0.1238200669 -1.062299e-01  0.0632855412  7.927694e-03  0.1596494411 #>    [5,] -0.0147470174 -7.427440e-02 -0.0841000880 -2.730149e-02  0.0026605116 #>    [6,]  0.1492996912  1.049311e-01  0.1741354283  3.607451e-03  0.0482957717 #>    [7,]  0.1376495332  8.488112e-02 -0.0243421173  1.775748e-01  0.0714743017 #>    [8,]  0.0617393246  5.688545e-02 -0.0943033203  4.023544e-02  0.1176659996 #>    [9,]  0.0428388730  4.747326e-02 -0.0297470222  2.287793e-02  0.0121890703 #>   [10,]  0.0277199892  3.563237e-02 -0.0983239231  6.483727e-02  0.1235264895 #>   [11,]  0.0513255080 -6.701125e-02 -0.0581732496  8.380906e-02  0.0023398614 #>   [12,] -0.0532738879 -4.123421e-02 -0.0434299451  4.118875e-02  0.0399743285 #>   [13,]  0.0227073313 -4.317575e-02 -0.0624981463  3.390117e-02 -0.0051380497 #>   [14,]  0.0565424609 -7.519088e-02 -0.0224126219 -7.593961e-02  0.0170007198 #>   [15,]  0.0546623275 -6.395123e-02 -0.0896597950  1.169054e-01  0.1364415193 #>   [16,]  0.1675828576 -2.311780e-01 -0.1140850477 -7.032850e-02 -0.2785430620 #>   [17,] -0.0067803249 -5.921441e-02 -0.0136953072  3.149293e-02  0.0069223796 #>   [18,]  0.1383512137 -7.892722e-02 -0.1779707425  6.056305e-02 -0.1377500510 #>   [19,]  0.0715272719 -7.569224e-02 -0.1185878784  4.187010e-02  0.0629455588 #>   [20,]  0.0253715313 -8.726363e-03  0.0488126270  1.390374e-01  0.0856588520 #>   [21,]  0.0264022377 -2.947985e-02 -0.0513825928  4.121110e-02 -0.0539358975 #>   [22,]  0.1165915089 -7.014785e-02  0.1030303555 -1.218898e-01 -0.0852540697 #>   [23,] -0.0415297006 -4.644834e-02 -0.0374374336  3.829586e-02  0.0370841651 #>   [24,]  0.0226293735 -8.434460e-02 -0.0857931050  9.277096e-02 -0.1083805658 #>   [25,]  0.1091943187 -1.561902e-01 -0.0449873821  2.632652e-01  0.0639760083 #>   [26,]  0.0460004059  8.803329e-02 -0.1288856946  7.103508e-02 -0.1204863126 #>   [27,]  0.0836728341 -7.937509e-02  0.0656552116 -1.687388e-02 -0.0540350492 #>   [28,]  0.0882203726  9.252823e-02 -0.1158489105 -8.402860e-02 -0.0175282591 #>   [29,]  0.0855168758 -4.494291e-02 -0.1752577762  1.168465e-01  0.0255071406 #>   [30,]  0.0202874332 -8.946998e-02 -0.0313215141  9.282328e-02  0.1049328897 #>   [31,]  0.0610348281 -7.595296e-02  0.0841371806 -4.868368e-03  0.0408490612 #>   [32,]  0.0624932203  4.473505e-02 -0.0568475180  7.860202e-02  0.0816625287 #>   [33,]  0.2587693889 -1.249656e-01 -0.0448153013  1.777103e-01 -0.1843587416 #>   [34,]  0.1434826765  1.724767e-01  0.1960610875 -1.629238e-01 -0.1367140801 #>   [35,]  0.0170984397 -7.425566e-02  0.0769398008 -3.319894e-02  0.1132925020 #>   [36,]  0.0553546802  1.465881e-01  0.0819318711 -6.225737e-02  0.0236487138 #>   [37,] -0.0009368029 -7.399040e-02  0.1025791931  7.335796e-02 -0.0490619763 #>   [38,]  0.0557954258 -1.481029e-01  0.0808485387  3.150721e-02  0.1172213927 #>   [39,]  0.0482594600  1.939925e-02 -0.0582112636  1.360256e-02  0.0710381710 #>   [40,]  0.0252621102 -6.268358e-02  0.1278102412  3.323508e-02  0.0349171381 #>   [41,]  0.2646038109 -1.949464e-01  0.4056739320 -9.873085e-03 -0.3061169724 #>   [42,] -0.0304707180 -3.305349e-02 -0.0314103530  3.282441e-02  0.0583115412 #>   [43,]  0.0251205177 -9.151326e-02  0.1090375413 -2.067315e-02  0.0819597172 #>   [44,]  0.1018879906 -6.583287e-02 -0.0689524209  5.808886e-02 -0.1672053935 #>   [45,]  0.1221538463  2.352297e-02 -0.2054744324  1.313412e-01  0.0414900511 #>   [46,]  0.0170970969  8.638495e-02 -0.1252093960 -2.541439e-02 -0.1001734799 #>   [47,]  0.1605576590 -1.792665e-01 -0.2329406531 -2.913808e-01  0.1392886117 #>   [48,]  0.0602557867 -1.850497e-01  0.0401382481  7.121604e-02  0.0998944887 #>   [49,]  0.1295499011 -1.786508e-01  0.2108495679  1.616623e-01  0.1124038538 #>   [50,] -0.0029876778 -4.894936e-02  0.0033881074  6.120495e-02  0.0283995120 #>   [51,]  0.1160811212 -6.542359e-03 -0.0262550251 -1.305224e-01  0.2240258536 #>   [52,]  0.1368634248 -1.457986e-01 -0.1749640147  3.675264e-01  0.0769808066 #>   [53,]  0.0566887443  1.436238e-01  0.1370316165 -1.140719e-01  0.0635255051 #>   [54,]  0.0178997199  1.279196e-02 -0.0655172962 -7.306630e-02 -0.0474533588 #>   [55,]  0.1203648012  1.002360e-01 -0.0240708625 -2.325100e-02 -0.0593985357 #>   [56,]  0.0278065852  1.183645e-01  0.0630211101  4.408817e-02  0.0879890196 #>   [57,] -0.0407418938 -4.289617e-02 -0.0519929078  4.830202e-02  0.0425175280 #>   [58,]  0.0078992236 -8.149866e-02 -0.0226746022 -5.611986e-02 -0.0564365236 #>   [59,]  0.1099477802 -9.433264e-02 -0.0563685599  1.329271e-02  0.0672329238 #>   [60,]  0.0651329538 -6.704217e-03 -0.0906248095 -1.964902e-02  0.0728640509 #>   [61,] -0.0150003432 -1.751458e-03  0.0026539308  2.336290e-02  0.0495536530 #>   [62,]  0.0923762900 -3.360326e-02 -0.1410126444 -2.663603e-02 -0.1414061752 #>   [63,]  0.0934054298  1.463719e-01 -0.1066474724  5.338891e-02 -0.0664216920 #>   [64,] -0.0280134500 -3.831623e-02 -0.0404362894  5.028893e-02  0.0238767222 #>   [65,]  0.0912438093 -9.161213e-02 -0.1958026192  2.216338e-01 -0.1068600804 #>   [66,] -0.0233989481  1.816826e-02 -0.0708822409  3.882574e-02 -0.0635258352 #>   [67,]  0.0186289910 -5.825939e-02 -0.0465166075  6.215358e-02  0.0149237636 #>   [68,]  0.0365849052 -1.129808e-01  0.0566813335  9.398336e-02  0.1087034805 #>   [69,]  0.0664295193  1.074406e-01 -0.0905995608 -4.986627e-02 -0.0520873168 #>   [70,]  0.0108986243 -4.829831e-02 -0.0541260634  2.486606e-02  0.0827024103 #>   [71,]  0.1952076171 -1.074688e-01 -0.0800596558  1.559293e-01 -0.1928087217 #>   [72,]  0.0246206731  7.078320e-02 -0.0417267655  4.938383e-02  0.0776421058 #>   [73,]  0.0409181808 -4.204746e-02  0.1144477775  5.814459e-02 -0.0523863116 #>   [74,]  0.0270073730 -6.560091e-02 -0.0337417354  1.090054e-01 -0.0793298194 #>   [75,]  0.0936356510 -2.998775e-02 -0.1185346060  3.772347e-02 -0.0345284576 #>   [76,]  0.0696725923 -1.081991e-01  0.0671190400  1.717686e-01 -0.0521732346 #>   [77,]  0.0584236175 -6.102504e-02 -0.0478941021  1.134906e-01  0.0498219099 #>   [78,]  0.1028578771 -5.813480e-02 -0.1315297138  4.336159e-02  0.0600836729 #>   [79,]  0.0800688824  2.549356e-01 -0.0174406566  7.325104e-02  0.0441676880 #>   [80,] -0.0033359348  4.361679e-02  0.0202187779  4.591077e-02  0.0646373609 #>   [81,]  0.0548262045 -3.712093e-02 -0.1088450125  3.196279e-02  0.0724903393 #>   [82,]  0.0032317899 -3.718466e-02  0.0482472929  7.193030e-02  0.0310396621 #>   [83,] -0.0144839802 -7.518946e-02 -0.0534969011  6.196962e-02  0.0706368461 #>   [84,]  0.0231416553 -3.635952e-02 -0.0872452728  2.286139e-02  0.0715644243 #>   [85,]  0.0628386071  2.007103e-02 -0.0944008350  3.293209e-02 -0.1811913792 #>   [86,]  0.0132321915 -5.596756e-02 -0.0329073741  8.945093e-02  0.0573612751 #>   [87,]  0.1190389348 -1.080448e-01  0.0922524503  6.105528e-02 -0.2213494196 #>   [88,]  0.0510055636 -8.626201e-02 -0.0754176214  1.939175e-01  0.0646231325 #>   [89,]  0.0198375011 -9.711334e-02 -0.0190977889  2.639520e-02 -0.0538952129 #>   [90,]  0.0054702031 -5.203889e-02 -0.0800345078  9.347971e-02 -0.0047066295 #>   [91,]  0.1988752173 -5.144355e-02 -0.1149041063  1.003657e-01 -0.1679410040 #>   [92,]  0.2581732084  5.818094e-02 -0.2841979671  9.887685e-02  0.3977343086 #>   [93,]  0.0164926428  8.957343e-02 -0.0683425118  3.678653e-02  0.0791684360 #>   [94,]  0.2436375648  2.181919e-01  0.0635056527 -1.657923e-01  0.1053125835 #>   [95,]  0.0887185704 -1.098524e-01  0.0225259603  7.610031e-02  0.1653764187 #>   [96,]  0.0649242485  1.459770e-01 -0.0625228466 -1.438937e-01 -0.0781641114 #>   [97,]  0.1068953197 -6.026876e-02  0.1001902805  1.032757e-01  0.1438170872 #>   [98,]  0.1342268605 -8.757681e-02 -0.1070795940 -1.215033e-01  0.1617095680 #>   [99,]  0.0467160074 -1.671439e-01 -0.1204485318 -1.564518e-01  0.1469843377 #>  [100,] -0.0121264056  6.944309e-02 -0.1086765574  5.756344e-02  0.0503855672 #>                  [,6]          [,7]          [,8]          [,9]         [,10] #>    [1,] -3.841181e-02 -0.0273560136  0.0690386175 -0.0553619587  0.1613501289 #>    [2,] -6.615200e-02  0.0921452412 -0.1257986943  0.0615420455 -0.0459532395 #>    [3,]  2.306960e-03  0.0405360011  0.0696377886  0.0592118662  0.1083547094 #>    [4,] -7.787986e-02  0.1537007728 -0.1212495050  0.0558634301 -0.2445435646 #>    [5,] -4.407948e-03  0.0081502987  0.0220055959  0.1111313686 -0.0466395040 #>    [6,] -1.253993e-01 -0.3033112654  0.0940398045  0.0375166325 -0.1348200789 #>    [7,] -2.964035e-01 -0.1385746992 -0.0364481643 -0.2012363682  0.0867541250 #>    [8,]  7.374401e-02  0.1114135663 -0.0055974368  0.1294622548 -0.0785174370 #>    [9,] -7.785282e-02 -0.0611744914  0.0392110060 -0.0680695689 -0.0630566168 #>   [10,]  1.950363e-01  0.0584101916 -0.1896741564  0.2012919472  0.1948753396 #>   [11,] -2.815820e-02  0.0783075119  0.0849619889 -0.0798749200  0.0799047671 #>   [12,] -3.565147e-02  0.0435703632  0.0374159228  0.0413910851 -0.0420030225 #>   [13,] -1.162113e-04  0.0595952513  0.0319107877  0.0306360023 -0.0025531187 #>   [14,]  9.892016e-02 -0.0399633232  0.0662517262  0.0923895972  0.0070194565 #>   [15,]  1.073339e-01 -0.0597726854  0.1048209000  0.1317282289  0.0236570608 #>   [16,] -9.906609e-02 -0.2057785609  0.1924331240 -0.0954214375  0.1104756440 #>   [17,]  1.088655e-04  0.0853919174  0.0178884434  0.0466119343 -0.1520903506 #>   [18,] -1.343503e-01 -0.0844499322  0.1706023723  0.1350772611 -0.1870332298 #>   [19,] -1.373331e-02 -0.0276964930  0.0301164696 -0.0485922408  0.0780890145 #>   [20,] -7.422360e-02 -0.0069170843  0.0493050065  0.0361990477 -0.0185516017 #>   [21,] -4.710440e-02 -0.0224843317  0.0201638414  0.0439954424  0.0599598617 #>   [22,]  1.894761e-01  0.0786813708 -0.0095178192 -0.0193940109 -0.1574270867 #>   [23,] -2.657265e-02  0.0554151169  0.0462904293  0.0346950600 -0.0517799275 #>   [24,]  1.768840e-02  0.0422538944  0.0639979986  0.0711035556 -0.0875763014 #>   [25,]  4.142695e-02 -0.1346556922  0.0908691539 -0.0354289301 -0.0450589775 #>   [26,] -7.760232e-02 -0.0481948510  0.0562033503 -0.0148967922 -0.0196447840 #>   [27,]  1.090188e-01  0.0389704395  0.0778017368 -0.0126837018 -0.0516423528 #>   [28,] -9.608145e-02  0.0252308004  0.0438433845  0.0023012077 -0.0097012728 #>   [29,]  1.358397e-01  0.0765435284  0.0221701615  0.2568856737  0.2051545433 #>   [30,]  2.618773e-02  0.0791553075  0.0396254804  0.0602161781 -0.0679989797 #>   [31,] -4.606313e-02  0.0718355867  0.0950632871  0.0762035821 -0.0622778586 #>   [32,]  7.149365e-02  0.1561756045 -0.0178341528 -0.1157308728 -0.0259507014 #>   [33,]  4.380834e-03  0.2034378726 -0.3608695381  0.0727326432 -0.1839068953 #>   [34,] -7.196756e-02  0.0117421492 -0.0270498374 -0.0954936111  0.0808855655 #>   [35,] -8.504432e-02  0.0797398691  0.0366382960 -0.0028259821 -0.0995452016 #>   [36,] -1.937797e-01 -0.2306712628  0.0533800902 -0.1332010999 -0.0324931382 #>   [37,]  1.085917e-01 -0.0413508748  0.0813552538  0.0520602501 -0.0017921052 #>   [38,]  1.058882e-01  0.0468956557  0.0660016922  0.1068718110  0.1160129719 #>   [39,] -6.574261e-02  0.0215815371  0.1687268467 -0.0358997624  0.0062661176 #>   [40,] -2.956973e-03  0.0559822546  0.0552026031  0.0333522543  0.0443449735 #>   [41,]  2.033265e-01 -0.1521660581  0.0682023907 -0.0788795461  0.1721632682 #>   [42,] -4.509154e-02  0.0695282130 -0.0089263065  0.0140474012 -0.0024538806 #>   [43,]  7.458177e-02  0.0496585987  0.0761639448 -0.0337351244 -0.0978150996 #>   [44,]  3.010786e-02  0.0896215795  0.2234977992  0.0928661562  0.1005109338 #>   [45,]  8.111750e-02  0.0558669652  0.0132925778  0.1918148806  0.2330933766 #>   [46,]  5.672611e-02  0.1082489743 -0.0040654163 -0.0939606841 -0.1886910651 #>   [47,] -1.430966e-01  0.1449850718 -0.2406285091  0.0769063574 -0.1302985649 #>   [48,] -7.312746e-02  0.0498810499 -0.0319305534  0.0017330360  0.0284809825 #>   [49,]  2.821241e-01 -0.2231599648  0.2210828625 -0.1295495022 -0.1310758774 #>   [50,] -3.537697e-02  0.0664737327  0.0345131246  0.0617994906 -0.1521520001 #>   [51,] -1.337469e-01  0.2046256679  0.1951383370  0.0314115351  0.1346338952 #>   [52,] -3.717214e-02 -0.0199418346  0.2150653042  0.0281704895 -0.1414370947 #>   [53,] -4.262419e-02  0.1125569846  0.0051532518  0.1292131086 -0.1544983814 #>   [54,] -5.839523e-02  0.0600591093 -0.0038037280  0.0787913982 -0.0596472539 #>   [55,] -1.037972e-02  0.1123554438  0.1569546739 -0.0004987080 -0.0803877842 #>   [56,] -1.586673e-01 -0.0931113503 -0.0861455544  0.0510829807  0.1182662303 #>   [57,] -3.134979e-02  0.0521657752  0.0378806932  0.0385535401 -0.0607594952 #>   [58,] -1.147243e-04  0.0414924672 -0.1408541637  0.0600331982 -0.0812031229 #>   [59,]  1.455422e-01  0.0651011152  0.0334317003 -0.2048028659 -0.0611645882 #>   [60,] -5.710239e-02  0.0279696262 -0.0860970032 -0.0050860012 -0.0192458143 #>   [61,] -6.034538e-02  0.0314738222  0.0233372740  0.0429732175 -0.0507230039 #>   [62,] -2.002813e-01 -0.2514331268  0.1238978970 -0.1114965046 -0.0547222144 #>   [63,]  8.864783e-03 -0.0376389967  0.0432350296 -0.0584522347 -0.0199836028 #>   [64,] -6.738940e-02  0.0359538925  0.0182711748  0.0618160514 -0.0730693164 #>   [65,] -1.601670e-01 -0.0098324053  0.0589302954  0.0209956501 -0.1942436986 #>   [66,] -3.798866e-02  0.0317963162  0.0344845162  0.0021455220 -0.0466510450 #>   [67,] -2.620602e-02  0.0619876498 -0.0529021086  0.0244516691 -0.0537808380 #>   [68,]  1.923345e-01 -0.1389092270  0.1536887216 -0.0995633290 -0.0580464551 #>   [69,] -1.292399e-03  0.0458762113 -0.1783567660  0.0322750244 -0.0722086526 #>   [70,] -7.462520e-02  0.0351801330  0.0258963025  0.0149620916 -0.0385100269 #>   [71,]  1.528546e-02  0.1399519918 -0.1934620514  0.2555963373 -0.2246460944 #>   [72,] -5.666922e-02 -0.0383740812  0.1018724874  0.0771744480 -0.0023118945 #>   [73,] -1.394248e-01  0.1739808616  0.0529173102  0.1214248235 -0.0682160781 #>   [74,] -3.099528e-02  0.0491839434  0.0184110864  0.0647904582  0.0264217477 #>   [75,] -1.550135e-02  0.0951693270  0.1901093753 -0.0845827266 -0.0276255783 #>   [76,] -9.790849e-02  0.1684695649 -0.0574378905  0.1634763055 -0.2188263122 #>   [77,]  2.579777e-02  0.0485172052  0.0431235434 -0.0385607650  0.1784867856 #>   [78,]  1.197460e-02  0.1055090002  0.0412148506 -0.0570958518  0.0665956076 #>   [79,] -1.174137e-01  0.1093664101  0.1195857240  0.0653584800  0.1654838232 #>   [80,] -7.294269e-02 -0.0257380655  0.0442517184  0.0257301284 -0.0412415153 #>   [81,]  1.401417e-01  0.0429506671  0.0568992303  0.0075760262  0.0059241331 #>   [82,] -7.055795e-02  0.0405728000  0.1046933975  0.0746529177 -0.0281371374 #>   [83,] -3.414955e-02  0.0414213686  0.0314745935  0.0835864394 -0.0229190408 #>   [84,]  4.297179e-02  0.0777419592 -0.0055469398  0.0369910138  0.0729889122 #>   [85,]  1.267494e-01  0.1656200540 -0.1197708464 -0.1085365865 -0.2070597695 #>   [86,]  1.897813e-02  0.0285820796  0.0134816442 -0.0007969217 -0.0417954607 #>   [87,] -1.126426e-01 -0.0830770832 -0.0612530171  0.0179559267 -0.0389632676 #>   [88,] -1.404614e-01  0.0340520897 -0.0665248238 -0.0225335348 -0.1264475374 #>   [89,] -5.273240e-02  0.0334373381  0.0397214427 -0.0438696911  0.0449419277 #>   [90,] -1.305131e-03  0.0435436712  0.0554175596  0.0449441568 -0.0818137348 #>   [91,] -9.175818e-02  0.0625276642  0.2674453133 -0.0165119261 -0.1369390844 #>   [92,]  3.612509e-01 -0.0563846502 -0.0806511012  0.3154745029  0.2760694195 #>   [93,]  3.515877e-02 -0.0114314316 -0.0189147322  0.0248845817  0.0167645509 #>   [94,] -4.937455e-02 -0.0531528970  0.0896050537  0.2201697081 -0.4593249702 #>   [95,]  3.172963e-02 -0.0349804308  0.0774863979 -0.0223492585  0.0762236465 #>   [96,] -3.445475e-02  0.0843530443  0.0515932577  0.0759157648 -0.1118265257 #>   [97,] -1.007441e-01  0.1144168460 -0.2240093838 -0.1130660460  0.0789269333 #>   [98,]  1.183926e-01 -0.3409030260  0.2750118047  0.0737105378 -0.1476344450 #>   [99,] -1.346797e-01  0.0304783436  0.0430223974 -0.0040298523 -0.0370854001 #>  [100,]  9.657800e-02  0.0425997165  0.0642286015  0.0561573542 -0.0679385592 #>  [ reached getOption(\"max.print\") -- omitted 900 rows ] #>  #> $v #>             [,1]         [,2]         [,3]          [,4]         [,5] #>   [1,] 0.4040879 -0.295445056  0.396136321 -0.0265215766 -0.445619078 #>   [2,] 0.2961337 -0.056188038 -0.421714913 -0.1737597511  0.033138564 #>   [3,] 0.3839064 -0.074028852  0.353386257 -0.2415670893 -0.496952530 #>   [4,] 0.3748125 -0.069162373 -0.412698559  0.1000120499  0.456991720 #>   [5,] 0.3298916 -0.274158158  0.671564232 -0.0071807813 -0.171876457 #>   [6,] 0.3766592  0.194199844  0.380897080 -0.4263433400  0.226893402 #>   [7,] 0.2872993  0.084899904  0.404885239 -0.1144552901 -0.163508664 #>   [8,] 0.2786145 -0.362533889  0.378737950  0.0412111113 -0.035442848 #>   [9,] 0.3089132 -0.234248388 -0.125147777  0.1455968651  0.413574262 #>  [10,] 0.3868257 -0.591150277  0.375455588  0.4335408396  0.608611192 #>  [11,] 0.3617228 -0.402001131 -0.602479550 -0.1274810383 -0.811353733 #>  [12,] 0.2598603  0.032974895 -0.174256738 -0.0688888683 -0.069001085 #>  [13,] 0.2782739  0.135731048  0.021384630  0.0994371817 -0.100088433 #>  [14,] 0.4352382  0.716316709  0.623732353 -0.3656968930  0.131117290 #>  [15,] 0.2951066  0.159046735  0.056821816  0.4348282109  0.120443721 #>  [16,] 0.4297699  0.452492895  0.221668888 -0.1248832382 -0.049467732 #>  [17,] 0.3460727  0.647129461  0.083794215 -0.1317932077 -0.166693656 #>  [18,] 0.3566292 -0.163930331 -0.068603416  0.4226103623 -0.323646938 #>  [19,] 0.2162392  0.137906094  0.076560927  0.0962425925  0.070591386 #>  [20,] 0.3419631  0.097245214  0.247800870  0.1022643498  0.067776809 #>  [21,] 0.2259759  0.100306620  0.216464187 -0.2455701164 -0.154236512 #>  [22,] 0.4160668  0.168431818 -0.170110758 -0.2157539714  0.743011813 #>  [23,] 0.2566603  0.283822895  0.045747935  0.1572443197 -0.016687251 #>  [24,] 0.4992108  1.493557619  0.061000866  0.0505631679  0.094505000 #>  [25,] 0.4367736 -0.013467554 -0.609868916  0.3624782637 -0.293117855 #>  [26,] 0.3210982 -0.064122980  0.619919883  0.2062784985 -0.349757927 #>  [27,] 0.2581675 -0.023796096  0.075562408  0.1233081131  0.063529252 #>  [28,] 0.2461933  0.036223842 -0.359929124  0.2044315483 -0.106626133 #>  [29,] 0.3996493  0.492422648  0.177650121 -0.3363746879  0.549104240 #>  [30,] 0.2260119  0.085342054 -0.064580957 -0.1195066121 -0.355895895 #>  [31,] 0.2752936 -0.027746222 -0.196121121 -0.2563119113  0.139905788 #>  [32,] 0.3278080 -0.087518587 -0.095474040 -0.0214050905  0.296962121 #>  [33,] 0.5526588 -1.477474315 -1.233183707 -1.3085007848  0.766965842 #>  [34,] 0.2362721  0.102769064 -0.101247758 -0.0007745184 -0.218134095 #>  [35,] 0.2449912  0.202918003  0.026443077 -0.0953837073 -0.346628452 #>  [36,] 0.3021334 -0.214790710  0.304016489  0.5154483023  0.353779399 #>  [37,] 0.2876047 -0.255974113 -0.248924145 -0.0516954110  0.037221979 #>  [38,] 0.2676766 -0.136883776  0.078349630 -0.1883275445 -0.138469746 #>  [39,] 0.2449634  0.097745871  0.140308522 -0.1265970305  0.157485380 #>  [40,] 0.2159483 -0.088434563 -0.237056516 -0.3375672698 -0.059378141 #>  [41,] 0.2684893  0.142615105 -0.007975288 -0.1079197958  0.133182639 #>  [42,] 0.2928745  0.058461685 -0.390181368  0.0330359312 -0.153623017 #>  [43,] 0.3444574  0.003731516  0.271649315  0.3193830772  0.126486607 #>  [44,] 0.3438170 -0.365961330 -0.239721175 -0.3171976831 -0.723439091 #>  [45,] 0.3911009 -0.161327872 -0.326343162  0.5723713369  0.003678552 #>  [46,] 0.4186336  0.264326955 -0.577242841 -0.0760671352 -0.695748361 #>  [47,] 0.1914520 -0.079474041  0.122529897 -0.0935589209 -0.079393558 #>  [48,] 0.3435173 -0.194533595 -0.490217813 -0.6960839793  0.167090768 #>  [49,] 0.2441810 -0.133991403  0.097467415 -0.1459498454 -0.048854416 #>  [50,] 0.2910749 -0.097947407 -0.151330735 -0.2937250167 -0.329428230 #>  [51,] 0.3541634  0.163718027 -0.119077186  0.2500599720  0.065839657 #>  [52,] 0.3178030  0.381339274 -0.180208207  0.0184407632  0.376960538 #>  [53,] 0.4869158 -0.255249588 -0.709333692  1.8861886002  0.096854091 #>  [54,] 0.3624620  0.178756768  0.276526864  0.4875076034  0.535982225 #>  [55,] 0.3465401 -0.106322993 -0.413336093 -0.0568955931 -0.092267164 #>  [56,] 0.3015076 -0.415242971  0.177104397 -0.2603913206  0.483134950 #>  [57,] 0.3350518 -0.303750582  0.172398765 -0.2333401898 -0.399605801 #>  [58,] 0.2790655  0.108945350 -0.036857623  0.1745814409 -0.151563777 #>  [59,] 0.3702166  0.513898289 -0.612200666  0.1121745766  0.037917798 #>  [60,] 0.4410630 -0.426702322  0.535270147  0.9069368835 -0.207607710 #>  [61,] 0.3609469 -0.237592418  0.225317898  0.3507088601 -0.413154895 #>  [62,] 0.4091577  0.202997776 -0.293179207  0.2295280623  0.282626737 #>  [63,] 0.3235536  0.257736519 -0.105874310  0.2862171483  0.082115788 #>  [64,] 0.2073868  0.019202884 -0.122799064  0.1214844040  0.016308876 #>  [65,] 0.3404642 -0.076528809  0.356981956 -0.2536267725 -0.518867921 #>  [66,] 0.2708099  0.186949271  0.314822588 -0.0777232314  0.133378944 #>  [67,] 0.3353264  0.332530899 -0.294934274 -0.0462191022 -0.622504447 #>  [68,] 0.3126315 -0.489703152  0.045899465  0.3536643493 -0.275188745 #>  [69,] 0.3366030  0.564341776  0.338935476  0.1685760193  0.196409221 #>  [70,] 0.4355010 -0.537655926  1.223063778 -0.2806235687 -0.391572388 #>  [71,] 0.3988990 -0.243417427  0.987887649  0.0642000934  0.727366458 #>  [72,] 0.2763396  0.052187091  0.084099206  0.0512407045 -0.164929856 #>  [73,] 0.4003439 -0.227052960 -0.013199144  0.4258814787 -0.682121564 #>  [74,] 0.2289985 -0.020920771  0.137200132 -0.2036216967 -0.270988414 #>  [75,] 0.2932987 -0.024918368  0.329229860 -0.1569372633  0.225488237 #>  [76,] 0.3375941  0.532989651 -0.640193050  0.1696580232  0.509268916 #>  [77,] 0.3437769  0.098587043  0.116483569 -0.0209650144  0.334472615 #>  [78,] 0.1885908 -0.232139735  0.062925961  0.0309909489 -0.156863186 #>  [79,] 0.2691497  0.201207953 -0.108944358 -0.1065472075 -0.024310855 #>  [80,] 0.3717755  0.667297900  0.401760490 -0.2980833620 -0.005816596 #>  [81,] 0.1791368 -0.283037558  0.144480325 -0.1610950519  0.137052968 #>  [82,] 0.3875703  0.637236137 -0.376351285 -0.4101608389 -0.286264625 #>  [83,] 0.3845670 -0.348925656  0.306956512 -0.2041594593 -1.093745634 #>  [84,] 0.3320198 -0.058023883 -0.353371689 -0.3386706000 -0.275707252 #>  [85,] 0.3895522  0.256201717  0.475277866 -0.5754682733 -0.280301486 #>  [86,] 0.3493823 -0.045048907  0.295469295 -0.0453428248 -0.175630987 #>  [87,] 0.2533818  0.245002455  0.064692376  0.1777665639  0.243298370 #>  [88,] 0.3153923  0.668182151 -0.068996053 -0.1876901381  0.027391334 #>  [89,] 0.2887235  0.018799573  0.153540972 -0.1771457602  0.024482343 #>  [90,] 0.1908375  0.246223560  0.205984306 -0.2456427818  0.211785328 #>  [91,] 0.2462551  0.334794489 -0.049089721 -0.4624891274 -0.307154098 #>  [92,] 0.2422506  0.089796706 -0.158173062 -0.1693650166 -0.189134856 #>  [93,] 0.2297202  0.051126511  0.066862275  0.3130543001 -0.254499535 #>  [94,] 0.2729322  0.004612801  0.177133797 -0.1456614418  0.578219675 #>  [95,] 0.2978628 -0.482399533  0.224493669 -0.2981440813  0.454244383 #>  [96,] 0.3005676  0.466148211 -0.126601981 -0.4602488890 -0.432100061 #>  [97,] 0.3038024  0.180635301  0.351483557 -0.3356996834 -0.142655965 #>  [98,] 0.3693797  0.242408915 -0.086753568 -0.2429476256  0.255679137 #>  [99,] 0.3344374 -0.666751871  0.344511018 -0.4171240608  0.772418164 #> [100,] 0.3151874  0.096076994  0.039259357 -0.1276054864 -0.083377445 #>                 [,6]         [,7]         [,8]         [,9]        [,10] #>   [1,]  0.0089024655 -0.110679820  0.013825553 -0.132996785  0.736989705 #>   [2,]  0.2874840410 -0.116414306 -0.030416817  0.349307703  0.380338686 #>   [3,]  0.0563312326 -0.173204810  0.005513203  0.933736577  0.209765461 #>   [4,]  0.5782842398  0.196569159  0.049522672 -0.989366302  0.097637436 #>   [5,]  0.1520872874  0.260287109  0.131767160  0.091866321  0.376630980 #>   [6,] -0.1212331779  0.906307420 -0.376996617 -0.133223859  0.085371613 #>   [7,]  0.2481014846 -0.059909836 -0.206875812  0.353727901  0.071713029 #>   [8,]  0.1714235479 -0.102136797  0.151342864  0.083624149 -0.191464243 #>   [9,]  0.3661578993 -0.286705526  0.006032681 -0.070129596  0.030682623 #>  [10,]  0.7688185357 -0.715536085  0.745093933 -0.364169959 -0.345833575 #>  [11,] -0.4053367255 -0.458012842  0.431866800 -0.138965183 -0.070076652 #>  [12,]  0.1105926168  0.391661464  0.091456287 -0.100811650  0.218814826 #>  [13,]  0.0955950601 -0.071575530  0.014052825 -0.226975700  0.129524682 #>  [14,]  0.0310454911  0.346326829  0.004162137  0.386817888 -0.924016099 #>  [15,] -0.2321154450  0.177150221  0.126144314 -0.255310436  0.627700483 #>  [16,] -0.9019957956 -1.121887152  0.021708388 -0.616910145  0.075977984 #>  [17,] -0.0004453232 -0.276492500 -0.527654323 -0.319590938  0.711534629 #>  [18,]  0.4695891623  0.199253734  0.067919533  0.187912415 -0.131659892 #>  [19,]  0.0307573718  0.098433315 -0.083388292 -0.012096918 -0.068453983 #>  [20,] -0.5582425101  0.112951984  0.424375836  0.250167090 -0.005821180 #>  [21,] -0.0360565881 -0.157687220 -0.016265401  0.001976887  0.029940163 #>  [22,]  1.2855351864 -0.060331793 -0.300958526  0.078841117  0.181423050 #>  [23,] -0.2984140817 -0.111560214  0.094340474 -0.086791842  0.193894720 #>  [24,] -0.2298590906  0.951202221  1.201627808  0.290957331  0.543100749 #>  [25,]  0.1658923970  0.525891583  1.389606646 -0.035282293  0.372984570 #>  [26,]  0.6210938715 -0.403499594  0.269016997  0.019888952  0.312509754 #>  [27,] -0.1681858295  0.208344890 -0.251632950 -0.186045523  0.001673365 #>  [28,]  0.1854868261 -0.149535358  0.227284542 -0.222478785 -0.105581679 #>  [29,]  0.3310374736 -1.140440438  0.429564796  0.811613997 -0.881339304 #>  [30,] -0.0815624492  0.091833149  0.031789753  0.120634044  0.207481529 #>  [31,]  0.1608344519 -0.214095665 -0.047767741  0.021316671  0.211783857 #>  [32,] -0.0678626607 -0.139073893 -0.213589848 -0.328927481  0.397575783 #>  [33,] -1.1900584588  0.263809305  0.056412267  0.155020554  0.192396691 #>  [34,]  0.3054753232  0.023818733 -0.082247585 -0.139029326  0.286752711 #>  [35,] -0.0350477385  0.086797594  0.031372436 -0.134825904  0.085771305 #>  [36,]  0.1423830049 -0.087479986 -0.057811439  0.030689504 -0.068546183 #>  [37,]  0.2522556719  0.128212617  0.035571466 -0.443770042 -0.018376808 #>  [38,]  0.2680704173 -0.076479969  0.026448009 -0.286020476 -0.284910671 #>  [39,] -0.0517267066  0.257493981 -0.384583060 -0.271986821  0.316557272 #>  [40,]  0.0188159744 -0.034589757 -0.294543274 -0.032416023  0.114764214 #>  [41,]  0.0433720195  0.341901048  0.189253479 -0.350238104  0.252984161 #>  [42,] -0.1566298650 -0.397743475 -0.039834641  0.253807556 -0.026962950 #>  [43,] -0.2229748683 -0.415820602  0.275516299 -0.007213117 -0.286274204 #>  [44,]  0.2621014484 -0.224069772 -0.493769118  0.924839706 -0.075529504 #>  [45,] -0.3147580613 -0.437809665 -0.200464387  0.343909872 -0.118105570 #>  [46,]  0.5596969504  0.665874163 -0.516707884 -1.019838027 -0.542377298 #>  [47,]  0.1715458915  0.175535629  0.133030656 -0.141401531 -0.131298912 #>  [48,]  0.1597716212 -0.437717586  0.211579671  0.247804474  0.041381853 #>  [49,] -0.1586151792  0.113108271 -0.148237967 -0.303428893  0.020680167 #>  [50,]  0.0052746322  0.192601687  0.210148836 -0.081790122 -0.054500201 #>  [51,]  0.4100935843  0.297642495  0.080617090 -0.379586095 -0.126555892 #>  [52,]  0.3736389877 -0.250925426 -0.176438646 -0.125767821  0.402424852 #>  [53,] -0.5118056944 -0.135138630 -0.128877834  0.171220268 -0.644052441 #>  [54,] -0.5943489111  0.455714515 -0.970033287 -0.530851877 -0.278976963 #>  [55,] -0.1853762491 -0.402612820  0.488425904 -0.268273023  0.092926177 #>  [56,]  0.3659250873  0.351622711  0.071496883  0.325185417  0.480032989 #>  [57,]  0.0169687507 -0.294983556  0.214387603 -0.430652659  0.409805096 #>  [58,] -0.3827720900 -0.322177325  0.071056996 -0.263166086  0.291980302 #>  [59,]  0.5933977414 -0.057301951  0.178286859  0.103415598 -0.179071701 #>  [60,] -0.5517398798  1.039890798 -0.105348900  0.591985494 -0.115059970 #>  [61,] -0.1849832221  0.203503485  0.151801332  0.250790790  0.245136685 #>  [62,]  0.6367872879  0.057615479 -0.907320474  1.044537618  1.026590343 #>  [63,] -0.2044809847 -0.044504655  0.232098005 -0.094391069  0.351731869 #>  [64,]  0.0588468053  0.112549949 -0.008001495 -0.071811463 -0.294997043 #>  [65,]  0.1230199728 -0.005260941  0.124596154 -0.088508666  0.002365366 #>  [66,] -0.1718908409 -0.098285922 -0.137889443 -0.008776990 -0.036938531 #>  [67,]  0.0014652472 -0.160631297 -0.043763100 -0.381445039 -0.002882749 #>  [68,]  0.0761083650 -0.304691927 -0.091035914  0.001409780  0.170978568 #>  [69,] -0.8470048630 -0.685015844 -0.483225205  0.063715165  0.573918105 #>  [70,]  0.4691012403 -0.075918858  0.078305436 -0.147460766  0.166579418 #>  [71,]  0.0216317183  0.128860190  0.295771034  0.107687808 -0.031091282 #>  [72,] -0.2870594234 -0.111228607 -0.195964646  0.207725329 -0.304764788 #>  [73,]  0.2083430460 -0.196097110 -0.539784368 -0.016012295 -0.001794213 #>  [74,] -0.0053402624 -0.126580556 -0.089669540 -0.080252561  0.090625152 #>  [75,]  0.1648996354 -0.283096635 -0.005929116 -0.387754514 -0.204974648 #>  [76,]  0.0338338655 -0.039114556  0.017121267  0.784495555  0.378021443 #>  [77,]  0.1173933072 -0.108129846 -0.808072169  0.177631143 -0.249670768 #>  [78,]  0.0922138551 -0.053555948 -0.083829349  0.087312285  0.027462731 #>  [79,] -0.0640726261  0.037408873 -0.280904657  0.115483675  0.074667566 #>  [80,] -0.4240851091 -0.518908350  0.074893851 -0.204266421  0.106389256 #>  [81,] -0.2053896646 -0.067889061 -0.100180737  0.045594808 -0.241818465 #>  [82,]  0.0966019907  0.016543795  0.123587022 -0.105477134 -1.122383773 #>  [83,] -0.0480114365 -0.382148319 -0.117546623  0.014808188  0.043696017 #>  [84,]  0.0228207315 -0.042999864 -0.965990278  0.186519634 -0.375957354 #>  [85,] -0.4370630642  0.273670279  0.206012340  0.173491007 -0.061085455 #>  [86,]  0.1291806250  0.488014893 -0.225790052  0.205849656 -1.054207700 #>  [87,] -0.1450239499 -0.456986828 -0.367266854 -0.382343620 -0.054456629 #>  [88,]  0.1326977135 -0.105005308 -0.277315810 -0.220256115  0.022522310 #>  [89,]  0.4705791431 -0.276424600  0.176499968 -0.376389569  0.224144189 #>  [90,] -0.0326274635  0.023739351 -0.174081670  0.086633037  0.111873289 #>  [91,] -0.3154078938  0.322887904  0.089953179 -0.092867670  0.028552609 #>  [92,]  0.1924075906 -0.096529293 -0.096547444 -0.006653128  0.056606689 #>  [93,]  0.1150086068 -0.109372019 -0.314383972 -0.171658686  0.251268603 #>  [94,]  0.0545438168 -0.271221258  0.022372345 -0.386340688 -0.120598739 #>  [95,] -0.1443091957  0.378928623  0.132423517 -0.327010543 -0.405594717 #>  [96,]  0.1943804385  0.199071149 -0.037942244 -0.023855172 -0.181709978 #>  [97,] -0.2912901519 -0.178226274 -0.517002247 -0.475842237  0.096147815 #>  [98,] -0.3042987848 -0.181748769  0.289730737  0.379723346 -0.593198432 #>  [99,] -0.1437693233  0.131493342 -0.015190594 -0.161858735  0.127892489 #> [100,]  0.1428769725 -0.263133770  0.163200134  0.070281619  0.344946392 #>  #> $penal_lik #> [1] -100978.9 #>"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/spatial_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Spatial Plot of Feature Expression or Cluster Labels — spatial_plot","title":"Create Spatial Plot of Feature Expression or Cluster Labels — spatial_plot","text":"Create Spatial Plot Feature Expression Cluster Labels","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/spatial_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Spatial Plot of Feature Expression or Cluster Labels — spatial_plot","text":"","code":"spatial_plot(   input,   type = c(\"raw\", \"smooth\", \"cluster\"),   feature_name = NULL,   labels = NULL,   assay_type = \"logcounts\",   spot_size = 1.5 )"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/spatial_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Spatial Plot of Feature Expression or Cluster Labels — spatial_plot","text":"input SummarizedExperiment object containing counts assay row/col coordinates. type Plot type, \"raw\", \"smooth, \"cluster\". \"raw\", expression feature_name using assay_type plotted. \"smooth\" smoothed expression feature_name plotted. \"cluster\" cluster labels plotted. type=\"cluster\" labels=NULL, smoothLRC labels used. feature_name type=\"raw\" type=\"smooth\", name feature plotted. labels type=\"cluster\" vector labels observation. length number columns input. NULL, smoothLRC cluster labels used. assay_type type=\"raw\" type=\"smooth\", SummarizedExperiment assay type. spot_size size pixel.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/spatial_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Spatial Plot of Feature Expression or Cluster Labels — spatial_plot","text":"ggplot object.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/spatial_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Spatial Plot of Feature Expression or Cluster Labels — spatial_plot","text":"","code":"sce <- example_sce() spatial_plot(sce, feature_name = \"Feature 1\", spot_size = 10)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/news/index.html","id":"smoothlrc-0990","dir":"Changelog","previous_headings":"","what":"smoothLRC 0.99.0","title":"smoothLRC 0.99.0","text":"Initial release smoothLRC","code":""}]
