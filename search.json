[{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/Parameter Selection.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Parameter Selection","text":"smoothLRC method uses smoothing parameter (\\(\\lambda\\)) rank parameter (\\(k\\)) produce results. article demonstrates selection parameters.","code":"library(smoothLRC) library(ggplot2) library(dplyr) set.seed(1)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/Parameter Selection.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load Data","title":"Parameter Selection","text":"Using spatialLIBD package, ’ll load sample 151671 DLPFC data.","code":"sample <- \"151671\"  sce <- spatialLIBD::fetch_data(type = \"sce\") sce <- sce[, sce$sample_name == sample]"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/Parameter Selection.html","id":"parameter-grid","dir":"Articles","previous_headings":"","what":"Parameter Grid","title":"Parameter Selection","text":"’ll consider \\(\\lambda=(5, 10, 15)\\) \\(k=(10, 20)\\). , ’ll use 100 pixels test size.","code":"lambdas <- c(5, 10, 15) ks <- c(10, 20) parameter_grid <- expand.grid(lambda = lambdas, k = ks) test_size <- 100"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/Parameter Selection.html","id":"cross-validation","dir":"Articles","previous_headings":"","what":"Cross-Validation","title":"Parameter Selection","text":"Next, ’ll use cross-validation select optimal parameter values.   can see using recommend procedure, selected combination (\\(\\lambda=15\\), \\(k=20\\)). practice, recommend running much larger number iterations (e.g. 1,000) looking larger parameter space.","code":"metrics <- NULL for(combo in 1:nrow(parameter_grid)){   print(parameter_grid[combo,])   combination <- smooth_cv(sce, lambda = parameter_grid[combo,\"lambda\"], k = parameter_grid[combo,\"k\"], test_size, maxiter = 5)   metrics <- rbind(metrics, tibble(lambda = parameter_grid[combo,\"lambda\"],                                     k = parameter_grid[combo,\"k\"],                                    penal_lik = combination$penal_like,                                    cv_like = combination$cv_like)                    ) } #>   lambda  k #> 1      5 10 #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC on training set...\" #> iteration: 1 | convergence: 0.422554 | 0.0563444 | 1 #> iteration: 2 | convergence: 0.173078 | 0.0404936 | 0.00987567 #> iteration: 3 | convergence: 0.163679 | 0.0450668 | 0.0102672 #> iteration: 4 | convergence: 0.175742 | 0.0471282 | 0.0110242 #> iteration: 5 | convergence: 0.182077 | 0.0482414 | 0.0120774 #> [1] \"Compute neighborhood likelihood...\" #> [1] \"Done!\" #>   lambda  k #> 2     10 10 #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC on training set...\" #> iteration: 1 | convergence: 0.422057 | 0.0554037 | 1 #> iteration: 2 | convergence: 0.164508 | 0.0401319 | 0.00985858 #> iteration: 3 | convergence: 0.161535 | 0.0453195 | 0.010362 #> iteration: 4 | convergence: 0.186979 | 0.0486879 | 0.0112138 #> iteration: 5 | convergence: 0.184922 | 0.0508453 | 0.012346 #> [1] \"Compute neighborhood likelihood...\" #> [1] \"Done!\" #>   lambda  k #> 3     15 10 #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC on training set...\" #> iteration: 1 | convergence: 0.42013 | 0.0539799 | 1 #> iteration: 2 | convergence: 0.167513 | 0.0398524 | 0.00986839 #> iteration: 3 | convergence: 0.176619 | 0.0454105 | 0.0104753 #> iteration: 4 | convergence: 0.191349 | 0.0489113 | 0.0113943 #> iteration: 5 | convergence: 0.181778 | 0.0511128 | 0.012534 #> [1] \"Compute neighborhood likelihood...\" #> [1] \"Done!\" #>   lambda  k #> 4      5 20 #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC on training set...\" #> iteration: 1 | convergence: 0.496827 | 0.0727383 | 1 #> iteration: 2 | convergence: 0.234482 | 0.0531852 | 0.0114419 #> iteration: 3 | convergence: 0.209897 | 0.0595182 | 0.0125506 #> iteration: 4 | convergence: 0.185418 | 0.0596158 | 0.0143264 #> iteration: 5 | convergence: 0.183947 | 0.0612591 | 0.0167131 #> [1] \"Compute neighborhood likelihood...\" #> [1] \"Done!\" #>   lambda  k #> 5     10 20 #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC on training set...\" #> iteration: 1 | convergence: 0.492975 | 0.0694401 | 1 #> iteration: 2 | convergence: 0.227639 | 0.0526918 | 0.0111891 #> iteration: 3 | convergence: 0.2107 | 0.0592167 | 0.012326 #> iteration: 4 | convergence: 0.191362 | 0.0600496 | 0.0141495 #> iteration: 5 | convergence: 0.191143 | 0.0630135 | 0.0165308 #> [1] \"Compute neighborhood likelihood...\" #> [1] \"Done!\" #>   lambda  k #> 6     15 20 #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC on training set...\" #> iteration: 1 | convergence: 0.491289 | 0.0671663 | 1 #> iteration: 2 | convergence: 0.238924 | 0.052163 | 0.0110855 #> iteration: 3 | convergence: 0.201901 | 0.0582762 | 0.0122061 #> iteration: 4 | convergence: 0.189654 | 0.0588165 | 0.0140169 #> iteration: 5 | convergence: 0.187515 | 0.0622647 | 0.0163196 #> [1] \"Compute neighborhood likelihood...\" #> [1] \"Done!\"  metrics %>%    ggplot(aes(x = lambda, y = cv_like)) +   geom_point() +   geom_line() +   facet_wrap(~k) +   ylab(\"CV Likelihood\") metrics %>%    group_by(k) %>%   slice_max(order_by = cv_like, n = 1) %>%   ungroup() %>%   mutate(Selected = ifelse(penal_lik == max(penal_lik), \"Yes\", \"No\")) %>%   ggplot(aes(x = k, y = penal_lik, label = lambda)) +   geom_point() +   geom_line() +   geom_label(aes(color = Selected)) +   ylab(\"Penalized Likelihood\")"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/smoothLRC.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Introduction to smoothLRC","text":"smoothLRC novel tool clustering spatial transcriptomics data. technique utilizes regularized maximum likelihood estimator approximate noisy observed expression matrix incorporate spatial information address expression dropout. approximation Poisson distribution low-rank spatially smooth. Furthermore, smoothLRC enables spatial clustering modeling low-dimensional representation count-based gene expression matrix. Thus, approach encourages neighboring cells belong cluster via penalized matrix decomposition. smoothLRC employs SummarizedExperiment framework spatial transcriptomics data. example, cluster dorsolateral prefrontal cortex (DLPFC) collected annotated Maynard et al. (2020).","code":"library(smoothLRC) library(SummarizedExperiment) library(ggplot2) library(dplyr) set.seed(1)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/smoothLRC.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load Data","title":"Introduction to smoothLRC","text":"Using spatialLIBD package, ’ll load sample 151671 DLPFC data.","code":"sample <- \"151671\"  sce <- spatialLIBD::fetch_data(type = \"sce\") sce <- sce[, sce$sample_name == sample]"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/smoothLRC.html","id":"expression-plot","dir":"Articles","previous_headings":"","what":"Expression Plot","title":"Introduction to smoothLRC","text":"’ll find highly variable gene (HVG) sample explore expression spatial context.","code":"hvg <- rownames(sce)[which.max(apply(assay(sce), 1, var))] sce %>%    spatial_plot(feature_name = hvg)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/smoothLRC.html","id":"clustering","dir":"Articles","previous_headings":"","what":"Clustering","title":"Introduction to smoothLRC","text":"Next, ’ll use smoothLRC perform low-rank clustering data. recommend setting maximum number iterations large value (e.g. 1,000). smoothLRC add clustering results colData model results metadata SummarizedExperiment object.","code":"sce <- smooth_lrc(sce, lambda = 5, k = 30, n_clust = 5, maxiter = 5) #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC...\" #> iteration: 1 | convergence: 0.517552 | 0.0777191 | 1 #> iteration: 2 | convergence: 0.258088 | 0.0619568 | 0.0124418 #> iteration: 3 | convergence: 0.224198 | 0.0678516 | 0.0140945 #> iteration: 4 | convergence: 0.198246 | 0.0673172 | 0.0170241 #> iteration: 5 | convergence: 0.190463 | 0.0720095 | 0.0208061 #> [1] \"Clustering right singular vectors...\" #> [1] \"Done!\""},{"path":"https://alexanderjwhite.github.io/smoothLRC/articles/smoothLRC.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"Introduction to smoothLRC","text":"’ll visualize results model pre-computed model larger number iterations compare manual annotations.    Finally, can reexamine HVG using smoothed results model.  Reproducibility","code":"clust_1000 <- read.csv(\"151671.csv\", colClasses = \"factor\")$smooth_cluster_1000 manual_labels <- colData(sce)$layer_guess_reordered  sce %>%    spatial_plot(type = \"cluster\") +    ggtitle(\"smoothLRC (5 iterations)\") sce %>%    spatial_plot(type = \"cluster\", labels = clust_1000) +   ggtitle(\"smoothLRC (1000 iterations)\") sce %>%    spatial_plot(type = \"cluster\", labels = manual_labels) +   ggtitle(\"Manual Annotation\") sce %>%    spatial_plot(feature_name = hvg, type = \"smooth\") sessionInfo() #> R version 4.1.3 (2022-03-10) #> Platform: x86_64-w64-mingw32/x64 (64-bit) #> Running under: Windows 10 x64 (build 19044) #>  #> Matrix products: default #>  #> locale: #> [1] LC_COLLATE=English_United States.1252  #> [2] LC_CTYPE=English_United States.1252    #> [3] LC_MONETARY=English_United States.1252 #> [4] LC_NUMERIC=C                           #> [5] LC_TIME=English_United States.1252     #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] dplyr_1.0.9                 ggplot2_3.3.6               #>  [3] SummarizedExperiment_1.24.0 Biobase_2.54.0              #>  [5] GenomicRanges_1.46.1        GenomeInfoDb_1.30.1         #>  [7] IRanges_2.28.0              S4Vectors_0.32.4            #>  [9] BiocGenerics_0.40.0         MatrixGenerics_1.6.0        #> [11] matrixStats_0.62.0          smoothLRC_0.99.0            #>  #> loaded via a namespace (and not attached): #>   [1] utf8_1.2.2                    R.utils_2.12.0                #>   [3] tidyselect_1.1.2              RSQLite_2.2.14                #>   [5] AnnotationDbi_1.56.2          htmlwidgets_1.5.4             #>   [7] grid_4.1.3                    BiocParallel_1.28.3           #>   [9] DropletUtils_1.14.2           munsell_0.5.0                 #>  [11] ScaledMatrix_1.2.0            codetools_0.2-18              #>  [13] ragg_1.2.2                    DT_0.23                       #>  [15] withr_2.5.0                   colorspace_2.0-3              #>  [17] filelock_1.0.2                config_0.3.1                  #>  [19] highr_0.9                     knitr_1.39                    #>  [21] rstudioapi_0.13               SingleCellExperiment_1.16.0   #>  [23] shinyWidgets_0.7.1            labeling_0.4.2                #>  [25] GenomeInfoDbData_1.2.7        bit64_4.0.5                   #>  [27] farver_2.1.1                  rhdf5_2.38.1                  #>  [29] rprojroot_2.0.3               vctrs_0.4.1                   #>  [31] generics_0.1.3                xfun_0.31                     #>  [33] BiocFileCache_2.2.1           R6_2.5.1                      #>  [35] doParallel_1.0.17             ggbeeswarm_0.6.0              #>  [37] rsvd_1.0.5                    locfit_1.5-9.6                #>  [39] fields_14.0                   bitops_1.0-7                  #>  [41] rhdf5filters_1.6.0            cachem_1.0.6                  #>  [43] DelayedArray_0.20.0           assertthat_0.2.1              #>  [45] promises_1.2.0.1              BiocIO_1.4.0                  #>  [47] scales_1.2.0                  beeswarm_0.4.0                #>  [49] gtable_0.3.0                  beachmat_2.10.0               #>  [51] benchmarkmeData_1.0.4         spam_2.9-0                    #>  [53] rlang_1.0.4                   systemfonts_1.0.4             #>  [55] scatterplot3d_0.3-41          rtracklayer_1.54.0            #>  [57] lazyeval_0.2.2                BiocManager_1.30.18           #>  [59] yaml_2.3.5                    httpuv_1.6.5                  #>  [61] tools_4.1.3                   usethis_2.1.6                 #>  [63] SpatialExperiment_1.4.0       ellipsis_0.3.2                #>  [65] jquerylib_0.1.4               RColorBrewer_1.1-3            #>  [67] sessioninfo_1.2.2             Rcpp_1.0.9                    #>  [69] sparseMatrixStats_1.6.0       zlibbioc_1.40.0               #>  [71] purrr_0.3.4                   RCurl_1.98-1.7                #>  [73] viridis_0.6.2                 cowplot_1.1.1                 #>  [75] ggrepel_0.9.1                 fs_1.5.2                      #>  [77] magrittr_2.0.3                data.table_1.14.2             #>  [79] magick_2.7.3                  pkgload_1.3.0                 #>  [81] mime_0.12                     evaluate_0.15                 #>  [83] xtable_1.8-4                  XML_3.99-0.10                 #>  [85] mclust_5.4.10                 sparsesvd_0.2                 #>  [87] gridExtra_2.3                 compiler_4.1.3                #>  [89] scater_1.22.0                 tibble_3.1.7                  #>  [91] maps_3.4.0                    crayon_1.5.1                  #>  [93] R.oo_1.25.0                   htmltools_0.5.2               #>  [95] later_1.3.0                   tidyr_1.2.0                   #>  [97] DBI_1.1.3                     ExperimentHub_2.2.1           #>  [99] dbplyr_2.2.1                  rappdirs_0.3.3                #> [101] Matrix_1.4-1                  cli_3.3.0                     #> [103] R.methodsS3_1.8.2             benchmarkme_1.0.8             #> [105] parallel_4.1.3                dotCall64_1.0-1               #> [107] golem_0.3.3                   pkgconfig_2.0.3               #> [109] pkgdown_2.0.6                 GenomicAlignments_1.30.0      #> [111] plotly_4.10.0                 scuttle_1.4.0                 #> [113] xml2_1.3.3                    roxygen2_7.2.0                #> [115] foreach_1.5.2                 vipor_0.4.5                   #> [117] bslib_0.4.0                   dqrng_0.3.0                   #> [119] XVector_0.34.0                attempt_0.3.1                 #> [121] stringr_1.4.0                 digest_0.6.29                 #> [123] Biostrings_2.62.0             rmarkdown_2.14                #> [125] edgeR_3.36.0                  DelayedMatrixStats_1.16.0     #> [127] restfulr_0.0.15               curl_4.3.2                    #> [129] shiny_1.7.1                   Rsamtools_2.10.0              #> [131] rjson_0.2.21                  lifecycle_1.0.1               #> [133] jsonlite_1.8.0                Rhdf5lib_1.16.0               #> [135] BiocNeighbors_1.12.0          spatialLIBD_1.6.5             #> [137] desc_1.4.1                    viridisLite_0.4.0             #> [139] limma_3.50.3                  fansi_1.0.3                   #> [141] pillar_1.7.0                  lattice_0.20-45               #> [143] KEGGREST_1.34.0               fastmap_1.1.0                 #> [145] httr_1.4.3                    interactiveDisplayBase_1.32.0 #> [147] glue_1.6.2                    FNN_1.1.3.1                   #> [149] png_0.1-7                     iterators_1.0.14              #> [151] Polychrome_1.5.1              BiocVersion_3.14.0            #> [153] bit_4.0.4                     stringi_1.7.6                 #> [155] sass_0.4.1                    HDF5Array_1.22.1              #> [157] blob_1.2.3                    textshaping_0.3.6             #> [159] BiocSingular_1.10.0           AnnotationHub_3.2.2           #> [161] memoise_2.0.1                 irlba_2.3.5"},{"path":"https://alexanderjwhite.github.io/smoothLRC/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexander White. Author, maintainer. Sha Cao. Author. Pengtao Dang. Contributor. Changlin Wan. Contributor. Arnu Zhang. Contributor. Chi Zhang. Contributor.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"White , Cao S (2022). smoothLRC: Tools Clustering Spatial Transcriptomics Data Based Low Rank Smoothing.. R package version 0.99.0, https://alexanderjwhite.github.io/smoothLRC/.","code":"@Manual{,   title = {smoothLRC: Tools For Clustering Spatial Transcriptomics Data Based On Low Rank Smoothing.},   author = {Alexander White and Sha Cao},   year = {2022},   note = {R package version 0.99.0},   url = {https://alexanderjwhite.github.io/smoothLRC/}, }"},{"path":"https://alexanderjwhite.github.io/smoothLRC/index.html","id":"smoothlrc-","dir":"","previous_headings":"","what":"Tools For Clustering Spatial Transcriptomics Data Based On Low Rank Smoothing.","title":"Tools For Clustering Spatial Transcriptomics Data Based On Low Rank Smoothing.","text":"Smooth Low-Rank Clustering (smoothLRC) provides tools analyze cluster spatial transcriptomics data.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools For Clustering Spatial Transcriptomics Data Based On Low Rank Smoothing.","text":"can install development version smoothLRC GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"alexanderjwhite/smoothLRC\")"},{"path":"https://alexanderjwhite.github.io/smoothLRC/index.html","id":"articles","dir":"","previous_headings":"","what":"Articles","title":"Tools For Clustering Spatial Transcriptomics Data Based On Low Rank Smoothing.","text":"Please visit smoothLRC documentation website details.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 smoothLRC authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/example_sce.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an example SummarizedExperiment object with spatial data — example_sce","title":"Create an example SummarizedExperiment object with spatial data — example_sce","text":"Create example SummarizedExperiment object spatial data","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/example_sce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an example SummarizedExperiment object with spatial data — example_sce","text":"","code":"example_sce(   n_row = 10,   n_col = 10,   n_gene = 1000,   lambda = 2,   frac_sparse = 0.95 )"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/example_sce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an example SummarizedExperiment object with spatial data — example_sce","text":"n_row integer; number simulated spatial pixel rows n_col integer; number simulated spatial pixel columns n_gene integer; number simulated genes lambda numeric; poisson parameter frac_sparse numeric; fraction 0s.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/example_sce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an example SummarizedExperiment object with spatial data — example_sce","text":"SummarizedExperiment object","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/example_sce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an example SummarizedExperiment object with spatial data — example_sce","text":"","code":"example_sce() #> class: SummarizedExperiment  #> dim: 1000 100  #> metadata(0): #> assays(2): counts logcounts #> rownames(1000): Feature 1 Feature 2 ... Feature 999 Feature 1000 #> rowData names(0): #> colnames(100): Pixel 1 Pixel 2 ... Pixel 99 Pixel 100 #> colData names(2): row col"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_clust.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster the right singular vectors from model output — smooth_clust","title":"Cluster the right singular vectors from model output — smooth_clust","text":"Cluster right singular vectors model output","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_clust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster the right singular vectors from model output — smooth_clust","text":"","code":"smooth_clust(v, n_clust)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_clust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster the right singular vectors from model output — smooth_clust","text":"v matrix; right singular vectors n_clust integer; number clusters.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_clust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster the right singular vectors from model output — smooth_clust","text":"vector cluster labels","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_clust.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster the right singular vectors from model output — smooth_clust","text":"","code":"sce <- example_sce() x <- SummarizedExperiment::assay(sce) coords <- SummarizedExperiment::colData(sce)[, c(\"col\", \"row\")] k <- 10 init <- smooth_init(x, coords, k) lambda <- 1 epsilon <- 1e-3 maxiter <- 5 model <- smooth_model(x, init$u0, init$v0, init$w, init$index, lambda, epsilon, maxiter) #> iteration: 1 | convergence: 0.0969485 | 0.0366424 | 1 #> iteration: 2 | convergence: 0.0722831 | 0.0306596 | 0.00487695 #> iteration: 3 | convergence: 0.0674146 | 0.0341226 | 0.00487633 #> iteration: 4 | convergence: 0.0668668 | 0.0367569 | 0.00506556 #> iteration: 5 | convergence: 0.0699224 | 0.0378656 | 0.00549529 n_clust <- 3 smooth_clust(model$v, n_clust) #> fitting ... #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>   [1] 1 1 1 1 1 1 2 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 3 1 1 2 1 1 2 #>  [38] 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 2 1 1 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [75] 2 2 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter Selection via Cross-Validation — smooth_cv","title":"Parameter Selection via Cross-Validation — smooth_cv","text":"Parameter Selection via Cross-Validation","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter Selection via Cross-Validation — smooth_cv","text":"","code":"smooth_cv(   input,   lambda,   k,   test_size,   seed = 1,   epsilon = 0.001,   maxiter = 1000 )"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter Selection via Cross-Validation — smooth_cv","text":"input SummarizedExperiment object containing counts assay row/col coordinates. lambda positive numeric; penalization parameter. k integer; indicates desired rank singular value decomposition. test_size number pixels use test set. seed random seed produce consistent pixel samples across parameter values cross-validation. epsilon positive numeric; convergence criterion. maxiter positive integer; maximum desired iterations","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter Selection via Cross-Validation — smooth_cv","text":"list containing penalized likelihood model cross-validated likelihood test set.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter Selection via Cross-Validation — smooth_cv","text":"","code":"sce <- example_sce() smooth_cv(sce, 1, 10, 100, maxiter = 10) #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC on training set...\" #> iteration: 1 | convergence: 0.109983 | 0.0353055 | 1 #> iteration: 2 | convergence: 0.0878038 | 0.0276444 | 0.00521925 #> iteration: 3 | convergence: 0.0809419 | 0.0335208 | 0.00531674 #> iteration: 4 | convergence: 0.0788443 | 0.0370668 | 0.00565751 #> iteration: 5 | convergence: 0.0804564 | 0.0382317 | 0.00620999 #> iteration: 6 | convergence: 0.0828163 | 0.0387269 | 0.00693214 #> iteration: 7 | convergence: 0.0840712 | 0.0391454 | 0.00779395 #> iteration: 8 | convergence: 0.0845036 | 0.0395961 | 0.00878049 #> iteration: 9 | convergence: 0.0842482 | 0.0400416 | 0.00988202 #> iteration: 10 | convergence: 0.0832994 | 0.0404311 | 0.0110892 #> [1] \"Compute neighborhood likelihood...\" #> [1] \"Done!\" #> $penal_like #> [1] -78940.2 #>  #> $cv_like #> [1] -968.7851 #>"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialization objects for smoothLRC — smooth_init","title":"Initialization objects for smoothLRC — smooth_init","text":"Initialization objects smoothLRC","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialization objects for smoothLRC — smooth_init","text":"","code":"smooth_init(x, coords, k, knn = 6)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialization objects for smoothLRC — smooth_init","text":"x matrix; count assay. coords matrix; spatial coordinates. k integer; indicates desired rank singular value decomposition. knn integer; nearest neighbors.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialization objects for smoothLRC — smooth_init","text":"list objects smooth_model function.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialization objects for smoothLRC — smooth_init","text":"","code":"sce <- example_sce() x <- SummarizedExperiment::assay(sce) coords <- SummarizedExperiment::colData(sce)[, c(\"col\", \"row\")] k <- 10 smooth_init(x, coords, k) #> $u0 #>               [,1]          [,2]          [,3]          [,4]          [,5] #>    [1,] 0.19333562 -0.4470298285  0.1867022833 -1.684004e-01  1.540943e-01 #>    [2,] 0.08781481 -0.3636513135  0.1668916242 -1.328221e-01  4.483158e-02 #>    [3,] 0.14146130  0.0296644336 -0.1369058780 -1.580552e-02  1.364868e-01 #>    [4,] 0.06118425 -0.0415941183 -0.0159549291 -2.660093e-02 -5.382325e-02 #>    [5,] 0.17754225 -0.1638147977 -0.0942880651 -3.697441e-02  7.286467e-02 #>    [6,] 0.05231529 -0.0043781228  0.0103733001 -2.988755e-03 -4.940401e-02 #>    [7,] 0.08522298 -0.3957038186  0.1667363359 -1.241451e-01  9.691814e-02 #>    [8,] 0.11344826  0.1267560064  0.1020672843  3.722835e-02  2.986256e-02 #>    [9,] 0.10291648  0.0166940609  0.0514296831  1.584435e-01  8.511735e-02 #>   [10,] 0.13414914 -0.1763773687 -0.1372035292 -9.095209e-03  5.301584e-02 #>   [11,] 0.07585664 -0.2262615865  0.1250240226 -9.269217e-02  2.037343e-02 #>   [12,] 0.19956542  0.1231784531  0.0594134297  8.378835e-03  8.904174e-02 #>   [13,] 0.06111154  0.0238943310  0.0086209546  2.273437e-02 -4.586623e-02 #>   [14,] 0.05556560 -0.0171008503  0.0609381926 -4.012214e-02 -6.601782e-03 #>   [15,] 0.09406928  0.0077301128 -0.0038975302  3.931800e-02  7.531286e-03 #>   [16,] 0.13877792  0.0843132150  0.0858558081  2.483256e-01  6.824201e-02 #>   [17,] 0.12088329 -0.0006239150 -0.1114230257 -9.620227e-02 -5.792876e-02 #>   [18,] 0.20041526  0.2134535162  0.1903009881 -1.257682e-01  2.748727e-01 #>   [19,] 0.11420671 -0.1563536064  0.1168901907 -4.615791e-02 -9.204200e-02 #>   [20,] 0.12442616  0.1743786310  0.1974887825 -5.009334e-02  1.038130e-02 #>   [21,] 0.11894785  0.0947903007  0.0167475973 -9.953189e-02 -1.041522e-01 #>   [22,] 0.05746276  0.0289200109  0.0248733392 -2.792530e-02  1.565329e-02 #>   [23,] 0.06664935  0.0810851392 -0.0198683309 -1.025988e-02  1.483691e-03 #>   [24,] 0.14944520 -0.3150329630  0.1844799735 -2.227433e-01  8.565308e-02 #>   [25,] 0.21977275 -0.0040770604  0.0811385982  2.309580e-01 -3.248499e-01 #>   [26,] 0.12713347 -0.0510237845 -0.1331332954  7.761951e-02  7.609440e-02 #>   [27,] 0.07132843 -0.0258031002 -0.0317749230  5.942479e-03 -2.408007e-02 #>   [28,] 0.14790341 -0.0689866676 -0.0750959110 -1.144088e-02 -1.861068e-02 #>   [29,] 0.11525639 -0.3367397007  0.2206072464 -2.765906e-02  7.110096e-02 #>   [30,] 0.09967840 -0.1730705512 -0.0640013678  5.799609e-03  1.190513e-01 #>   [31,] 0.08393032  0.0445329831 -0.0025646026  5.782380e-02 -6.923817e-02 #>   [32,] 0.04464704 -0.0007401472  0.0107942197  8.592691e-03 -3.482429e-02 #>   [33,] 0.01481090 -0.0234015896  0.0070502389 -7.907649e-03  8.267105e-03 #>   [34,] 0.08832254  0.0483428037  0.0787843862  1.816413e-01 -1.201065e-01 #>   [35,] 0.08115833  0.0159480245 -0.0129181255 -1.626640e-02 -7.162622e-02 #>   [36,] 0.14057434  0.0410574441  0.1111576968 -2.108009e-01  1.531840e-01 #>   [37,] 0.06263240 -0.0431921960  0.0221806459 -3.390557e-02 -1.471878e-02 #>   [38,] 0.12018273 -0.1047918844 -0.0310198736  4.052438e-02 -1.371626e-01 #>   [39,] 0.08242365 -0.0722705360  0.0383323304  5.235897e-02 -8.084729e-02 #>   [40,] 0.09532316  0.0493437124  0.0663746987 -8.880584e-02  3.418160e-02 #>   [41,] 0.13798441  0.0206514114  0.0056371102  3.791218e-02 -8.691129e-03 #>   [42,] 0.13236493 -0.3812754640  0.1562924711  7.060953e-03  1.201314e-02 #>   [43,] 0.10878894  0.1949688181  0.1240874352 -2.524831e-01 -4.630178e-02 #>   [44,] 0.00000000  0.0000000000  0.0000000000  0.000000e+00  0.000000e+00 #>   [45,] 0.09504883  0.0232674071 -0.0298217366  3.238932e-02 -1.467176e-02 #>   [46,] 0.14807566 -0.1238306938  0.2366156559 -3.120371e-01  6.889588e-03 #>   [47,] 0.09285159 -0.2783846239  0.0834126170 -8.158554e-02  5.988331e-02 #>   [48,] 0.17337372  0.0888685547  0.0777114513 -2.897562e-01  2.711202e-01 #>   [49,] 0.14039306 -0.0514548365 -0.0051573359 -1.511707e-01 -4.805195e-02 #>   [50,] 0.14678862  0.0316001138  0.0263144423  8.492519e-02 -1.203687e-01 #>   [51,] 0.14312606 -0.0798686016 -0.0055404864  2.521578e-02 -1.367347e-01 #>   [52,] 0.09956415  0.1572498708  0.1111283412 -2.101766e-01 -5.817881e-02 #>   [53,] 0.08058267  0.0605249705  0.0945322180 -2.017052e-01 -4.477690e-02 #>   [54,] 0.21801184 -0.0809917588 -0.2013794246 -1.627838e-01  2.332619e-01 #>   [55,] 0.26636734 -0.0176169939  0.0625220849  7.561869e-02  7.027100e-02 #>   [56,] 0.02309781  0.0099334017 -0.0103361386 -2.140623e-02 -4.328268e-02 #>   [57,] 0.00000000  0.0000000000  0.0000000000  0.000000e+00  0.000000e+00 #>   [58,] 0.12187658  0.0952451925  0.0256375124 -1.095681e-01 -9.284342e-02 #>   [59,] 0.12441523 -0.4502782757  0.1270117717 -7.590483e-02  1.308287e-01 #>   [60,] 0.10151534 -0.0224273972  0.0255751630 -4.093753e-02  5.741964e-02 #>   [61,] 0.15495253  0.0162386577  0.2610266838  3.381399e-01  4.170100e-02 #>   [62,] 0.12442410  0.0561170529  0.0621302669  9.753770e-02  8.230991e-02 #>   [63,] 0.18050081  0.1503508935 -0.0528617122  1.628949e-01 -9.217547e-02 #>   [64,] 0.13856319  0.0937893891 -0.0297575730  7.500759e-02 -3.090133e-02 #>   [65,] 0.09229222 -0.0648754040  0.0524121660  6.547282e-02 -2.987483e-02 #>   [66,] 0.09732934  0.0518594424  0.0239511408 -5.666189e-02 -3.232357e-03 #>   [67,] 0.08335527  0.0355174407  0.0907026452  9.016205e-02  4.021947e-02 #>   [68,] 0.10099632 -0.2259515269  0.1103069087 -4.708882e-02  5.168859e-02 #>   [69,] 0.10430804 -0.0049969438 -0.0566657723 -4.041983e-02 -4.152623e-02 #>   [70,] 0.07123112  0.0287952680 -0.0295144800  9.236000e-02  6.491307e-02 #>   [71,] 0.17913061  0.1298187056 -0.0610238879  6.435566e-02 -4.139411e-02 #>   [72,] 0.08037481  0.0379325894  0.0503575646 -5.619280e-02 -1.187473e-01 #>   [73,] 0.11719995  0.0252168857  0.0624609987  9.103245e-02  5.710210e-02 #>   [74,] 0.19229622 -0.1638291629 -0.1877504209 -1.703691e-01  9.332150e-02 #>   [75,] 0.09813684  0.0150619675  0.0450270283  5.310036e-02  6.175325e-02 #>   [76,] 0.10673810  0.0253184168 -0.0102611829 -7.646100e-02 -9.930627e-02 #>   [77,] 0.10942321 -0.0612438967  0.0263349610  7.230436e-02  2.411480e-02 #>   [78,] 0.07211046 -0.0043186690  0.0237707127  1.329515e-01  1.494162e-01 #>   [79,] 0.06505865 -0.0557016417  0.0170127405 -4.445875e-02 -1.951226e-02 #>   [80,] 0.03973619  0.0136317135 -0.0314986676 -3.101192e-02 -4.875023e-02 #>   [81,] 0.14979272  0.1213589793  0.0134560522 -2.006749e-01 -3.924507e-02 #>   [82,] 0.16429730 -0.0600159448 -0.2767865321  1.290471e-01  2.536894e-01 #>   [83,] 0.05587078  0.0445177022 -0.0637580823  1.342554e-02 -4.145175e-03 #>   [84,] 0.10633905 -0.0045173298 -0.0767029572  1.204378e-02  3.209101e-02 #>   [85,] 0.09223507  0.0292855548 -0.0204026162 -9.964233e-02 -1.493274e-04 #>   [86,] 0.05658945 -0.0258560840  0.0402061631  1.241977e-01  5.401809e-02 #>   [87,] 0.20140626 -0.1590330730 -0.1809216999  7.484063e-02 -8.823150e-02 #>   [88,] 0.16434320 -0.1012360535 -0.0844674019 -7.907243e-02 -1.577176e-01 #>   [89,] 0.19289701 -0.3618349404  0.1858979701  3.814373e-03  1.125632e-01 #>   [90,] 0.11687866  0.0360491577 -0.0677436001  9.870103e-02 -1.172068e-01 #>   [91,] 0.07850186  0.0333849639  0.0014082351  1.054016e-01 -2.651399e-02 #>   [92,] 0.13109350  0.0835786476 -0.0851944391  2.855803e-02  6.183800e-03 #>   [93,] 0.21838723  0.0915791449 -0.1560113722 -6.307461e-04  7.423993e-02 #>   [94,] 0.04005842  0.0086786299  0.0261103573 -4.391415e-02  4.463404e-02 #>   [95,] 0.09313481  0.0040183564 -0.0772691964 -5.968225e-02  4.593314e-02 #>   [96,] 0.08529377 -0.0184112177 -0.0889228723 -6.673996e-02 -4.855185e-02 #>   [97,] 0.17562495  0.1155473583 -0.0306009769  2.265546e-02 -1.443951e-03 #>   [98,] 0.17940407  0.0964916723  0.1001767318  1.095932e-01  5.616328e-02 #>   [99,] 0.08000290 -0.3026785403  0.1398309597 -7.511693e-02  4.831368e-02 #>  [100,] 0.16687356 -0.0455133628 -0.2239500418 -9.840020e-02  9.829211e-02 #>                  [,6]          [,7]          [,8]          [,9]         [,10] #>    [1,]  0.0514928583 -1.082059e-01  2.217535e-01  2.172749e-01 -0.1198625421 #>    [2,] -0.0298404885 -5.494260e-02  1.743516e-01 -1.231309e-02 -0.1036848597 #>    [3,] -0.0166211956  1.593004e-02  3.357914e-02 -1.389353e-01  0.0935672419 #>    [4,] -0.0336665113 -2.294486e-02 -3.761254e-03  3.811370e-02  0.0579495762 #>    [5,] -0.1473781915 -4.596379e-02 -6.713743e-02  7.478942e-02  0.1041323961 #>    [6,]  0.0273926968  2.256693e-02  4.462655e-02  4.597854e-02  0.0090383958 #>    [7,]  0.0082901560 -3.426064e-02  1.058257e-01  3.267564e-02 -0.0620729243 #>    [8,]  0.0915525537 -7.225876e-02 -1.022453e-01  2.333679e-02 -0.0340914198 #>    [9,]  0.0652698393 -6.935331e-02  2.522894e-02 -6.133251e-03  0.0166481403 #>   [10,] -0.0119919273 -1.542397e-01  1.126675e-01  6.115422e-03 -0.0988695647 #>   [11,] -0.0054803547  1.611373e-02  1.157855e-01 -3.199025e-02 -0.0925520591 #>   [12,]  0.0712103713 -1.172215e-01 -4.061322e-02  2.126490e-01  0.0673506154 #>   [13,]  0.0027952867  1.737652e-02  1.629153e-02 -3.622647e-02 -0.0270549352 #>   [14,]  0.0026143837  2.172135e-02 -8.368108e-02 -6.667159e-02  0.1361894681 #>   [15,]  0.0195636815  1.297665e-01  9.406193e-02 -7.438978e-03  0.0618377657 #>   [16,] -0.1602662252  6.521155e-02  2.726857e-04 -7.831726e-03 -0.1012369857 #>   [17,]  0.1777996075 -4.161604e-02  8.751306e-02  2.892319e-02  0.0620861372 #>   [18,]  0.1748207712 -1.754097e-01  1.116508e-01  2.027624e-02 -0.0076371585 #>   [19,]  0.0260068155 -5.859508e-02 -2.650837e-01 -5.616214e-02  0.3558139583 #>   [20,] -0.1556549719  8.928609e-02 -2.383552e-02  8.732977e-02 -0.0598938345 #>   [21,]  0.0927972371  5.952626e-02 -1.019263e-01  1.695513e-01  0.1328174164 #>   [22,] -0.0250025015  1.087398e-02 -4.362296e-02  5.683658e-02 -0.0417734434 #>   [23,] -0.0157164039  4.899516e-02  1.826891e-02 -9.559874e-03 -0.0225293936 #>   [24,] -0.1277409282  5.415616e-02  1.146163e-01  3.253763e-02 -0.1101952918 #>   [25,]  0.0972117959 -2.404595e-01  5.156694e-02 -2.645187e-01 -0.1327791702 #>   [26,]  0.0115689434 -4.680300e-02 -3.333401e-02  7.949777e-02  0.1058734611 #>   [27,]  0.0552524663  3.407517e-02 -5.691744e-02 -2.689296e-02  0.0207010199 #>   [28,] -0.2896481361 -2.596652e-02  4.703532e-02  4.669767e-02  0.0562930526 #>   [29,] -0.0401627659 -5.791635e-02  1.454609e-01  6.111650e-03  0.0436326748 #>   [30,]  0.0563036729  6.120315e-02 -1.514211e-01  1.000948e-01  0.0357616082 #>   [31,]  0.0103893011  1.264688e-01  1.094527e-01 -6.145676e-02  0.0356592174 #>   [32,] -0.0004829827 -2.172649e-02  3.043353e-03 -5.175940e-02 -0.0380982295 #>   [33,] -0.0248525724 -7.398416e-03 -1.317319e-02 -2.568175e-02  0.0008795726 #>   [34,]  0.1322208598 -1.511010e-01 -4.055866e-02 -1.933756e-01 -0.0990612193 #>   [35,] -0.0209681034  4.287206e-02  2.781251e-02  7.163092e-02  0.0105951991 #>   [36,] -0.0304128226  3.048877e-02 -1.276114e-01 -4.071670e-02  0.0032705700 #>   [37,]  0.0560335137 -6.239088e-03  1.906400e-02  2.775849e-02  0.0410071863 #>   [38,]  0.0264285856 -1.245672e-01  2.618404e-02  3.007179e-02 -0.0746388717 #>   [39,]  0.0179832118  2.407826e-02 -4.049532e-02  6.502310e-02  0.0920576061 #>   [40,]  0.0178055344  2.163545e-02  2.162024e-02 -1.130227e-01  0.0128886161 #>   [41,] -0.1836307623 -1.168740e-01  9.975143e-02  1.481852e-01  0.0168060911 #>   [42,]  0.0706139250 -1.150806e-01  1.388927e-01 -4.872843e-02 -0.0230591049 #>   [43,] -0.0450848627  2.445866e-02 -2.762505e-02 -3.327782e-02 -0.1080495454 #>   [44,]  0.0000000000  0.000000e+00  0.000000e+00  0.000000e+00  0.0000000000 #>   [45,] -0.1001308819 -1.319310e-02  7.469069e-02  9.944372e-02 -0.0070328457 #>   [46,] -0.0540799496 -3.583484e-02  1.603395e-01  2.238574e-02 -0.0939068921 #>   [47,] -0.1042437090 -6.878039e-02  7.540661e-02 -4.408744e-02 -0.0327764540 #>   [48,]  0.0327501583  2.237085e-02 -1.104485e-01 -2.079631e-01  0.0590926744 #>   [49,] -0.0446895004  6.065493e-02  5.836455e-02 -8.293656e-02  0.0392504004 #>   [50,] -0.0018310086  1.743335e-01  2.708371e-02 -6.229815e-02  0.0599795801 #>   [51,]  0.0728106371  1.558591e-01  6.206850e-02 -1.233902e-01 -0.0567359531 #>   [52,]  0.1256608835 -5.718555e-02  1.386986e-02  3.581657e-02 -0.0419306729 #>   [53,] -0.1610760165 -1.095616e-02 -2.213327e-02 -1.632649e-02 -0.0645474983 #>   [54,]  0.1961732856  1.075078e-01 -1.536345e-01  1.061644e-02  0.0266975356 #>   [55,]  0.0568026477 -1.196614e-01  2.627767e-03 -2.095379e-01 -0.1160365686 #>   [56,] -0.0344459156 -2.830640e-02  2.083585e-02 -7.953941e-03 -0.0028943238 #>   [57,]  0.0000000000  0.000000e+00  0.000000e+00  0.000000e+00  0.0000000000 #>   [58,] -0.0403652621 -1.611523e-02  4.305689e-02  7.554683e-02 -0.0419947298 #>   [59,]  0.0010430402 -2.991859e-02  1.846275e-01 -2.864890e-02 -0.0912992098 #>   [60,] -0.0714122982  1.056875e-01 -7.686259e-02 -9.919960e-02 -0.1675385912 #>   [61,] -0.0317351179  4.274847e-02  7.410592e-02 -1.485646e-02  0.1365326356 #>   [62,]  0.0325599644  3.160728e-03  5.610868e-02  2.498804e-03 -0.0549719193 #>   [63,] -0.0465075766  2.832898e-01  1.751656e-01  1.446953e-02 -0.0457268290 #>   [64,] -0.0130806028  1.518085e-02 -1.928418e-01 -2.531223e-02 -0.2393616922 #>   [65,] -0.1016315227 -1.207706e-01 -9.502972e-02 -2.173039e-02  0.2466065516 #>   [66,]  0.0860513450  2.448615e-02  2.057209e-02  6.414173e-02  0.0664251060 #>   [67,] -0.0963468634  3.006392e-02 -5.611382e-02  4.653623e-02 -0.0979511468 #>   [68,]  0.0555389922  1.761217e-02  1.395104e-01 -2.895268e-02 -0.0318112764 #>   [69,]  0.0020906590 -2.709958e-02  4.792793e-02 -7.178450e-02  0.0371772350 #>   [70,] -0.1358699843 -2.183998e-02 -2.964060e-02  4.314104e-02 -0.0308232411 #>   [71,] -0.1179486642  2.072883e-01  2.677787e-01  3.125368e-02 -0.0036818440 #>   [72,] -0.0173299469  8.331724e-02  6.131568e-02  5.006565e-02  0.0278167760 #>   [73,] -0.1154023008 -4.013190e-03 -1.413087e-01  3.938922e-02 -0.0735213257 #>   [74,] -0.0447110884  5.910962e-02 -2.025934e-01  4.531393e-02 -0.1887370527 #>   [75,] -0.0761998457  3.525571e-02  1.863332e-02 -3.528371e-02  0.1274881712 #>   [76,] -0.0177315294 -5.955514e-02  8.511516e-02  1.312887e-01  0.0180146401 #>   [77,]  0.0077983528 -3.663080e-02  1.606559e-02 -7.754120e-03  0.1023952864 #>   [78,] -0.0106744021  2.082672e-02  1.948280e-02 -5.768546e-02 -0.0915184478 #>   [79,]  0.0491179748  1.435432e-02 -4.218637e-02  4.161828e-02  0.0457226374 #>   [80,] -0.0704853561 -2.800786e-02  9.463017e-03 -5.067093e-03 -0.0280717228 #>   [81,] -0.0231648990  3.881012e-02 -8.082028e-02  1.483496e-02 -0.0967589025 #>   [82,]  0.1332413281 -1.271223e-02  3.580021e-02  4.365741e-02 -0.0235114638 #>   [83,]  0.0330737177  1.343716e-01  1.332796e-01  5.267560e-02 -0.0279181868 #>   [84,]  0.0325880992  7.375736e-02 -5.153980e-02 -8.252130e-02 -0.1541909883 #>   [85,] -0.0418406148  1.851263e-02  2.195863e-02 -8.558876e-02 -0.0197196127 #>   [86,] -0.0569863189 -7.479347e-02  4.666745e-02 -8.187109e-03  0.0997426736 #>   [87,]  0.0880589094  6.279892e-02 -2.574614e-01  9.213340e-02 -0.0769575627 #>   [88,]  0.0255939129  1.448553e-01 -1.065310e-01  1.004684e-01  0.1411087092 #>   [89,] -0.0912235711 -7.564634e-02  9.566235e-02 -4.072822e-02 -0.0512933112 #>   [90,] -0.1074697690 -2.047579e-01 -3.964100e-02 -5.961837e-02 -0.1093239524 #>   [91,]  0.1397116867  1.951626e-02 -1.280997e-01 -4.831977e-02  0.0759527871 #>   [92,] -0.0146164439  3.140791e-02  1.498509e-01  1.613609e-02 -0.0187824638 #>   [93,]  0.2292711369  1.948012e-01  3.071559e-01 -9.419525e-03  0.1305852176 #>   [94,]  0.0043700056  1.525751e-02 -5.720462e-02 -1.001970e-01  0.0687933692 #>   [95,] -0.0080346384 -6.630348e-02 -2.515644e-02  6.946601e-02 -0.0391908332 #>   [96,] -0.0587491796  9.208397e-02  9.435099e-02  1.263021e-01 -0.0528682826 #>   [97,]  0.0471421630 -9.441997e-03  1.572317e-02 -8.883800e-02  0.0307559984 #>   [98,] -0.2830361433 -2.643568e-01  1.102132e-01  1.374539e-01  0.0685716445 #>   [99,] -0.0356156001 -5.318892e-02  1.451124e-01  2.071445e-02 -0.0482651285 #>  [100,] -0.0339987210  6.679199e-02 -1.804336e-01  9.057473e-03  0.0477928448 #>  [ reached getOption(\"max.print\") -- omitted 900 rows ] #>  #> $v0 #>             [,1]         [,2]         [,3]         [,4]         [,5] #>   [1,] 0.4506725  0.171594389 -0.216774395  0.244304906 -0.117236451 #>   [2,] 0.4421315  0.274061102  0.201938052 -0.247727837 -0.022710041 #>   [3,] 0.2413767 -0.024597835  0.063923154 -0.153021006  0.026577673 #>   [4,] 0.3693496  0.092906373 -0.095469921 -0.194224076 -0.389856451 #>   [5,] 0.5572818  0.888740949  0.590088976 -1.208774699 -0.121819946 #>   [6,] 0.4184882 -0.750520779  0.162177790 -0.224668121  0.334040609 #>   [7,] 0.4122523 -0.425839295  0.285211400  0.289113700 -0.004564363 #>   [8,] 0.5331371  0.422828431 -0.431603883  0.098003635  0.054438240 #>   [9,] 0.3963758 -0.222689118 -0.176640557  0.155148826  0.372016093 #>  [10,] 0.3981885 -0.048092414  0.019233701  0.223881917 -0.283072776 #>  [11,] 0.3170201  0.132422111  0.084340581 -0.110800904  0.353983522 #>  [12,] 0.3633435 -0.422530005  0.211723448 -0.091230841 -0.114338050 #>  [13,] 0.2900763  0.026462728 -0.345779983  0.025770736 -0.042741844 #>  [14,] 0.3172655  0.185182621  0.060161811  0.170691204  0.078882858 #>  [15,] 0.2864204 -0.222533565 -0.131681497 -0.076623077 -0.010566961 #>  [16,] 0.4111655  0.332351626  0.202144132 -0.526842492  0.240105676 #>  [17,] 0.3497493 -0.185724783 -0.070180802 -0.002937896 -0.168053423 #>  [18,] 0.3564198 -0.094791478 -0.052711444  0.094223727 -0.162585196 #>  [19,] 0.3310069  0.020162444 -0.260801288  0.193191180 -0.181121586 #>  [20,] 0.4121383 -0.023848678  0.112792053 -0.131909115  0.065406671 #>  [21,] 0.3987835  0.105743915 -0.117307115  0.332895421 -0.300814080 #>  [22,] 0.3278985  0.085118648 -0.157328976  0.058003280 -0.014542757 #>  [23,] 0.5167002  0.236709580  0.188821909  0.064997303 -0.518723163 #>  [24,] 0.3589617  0.103410039  0.177109602  0.424240616  0.121131012 #>  [25,] 0.4982581  0.254572340 -0.484705330  0.075556388 -0.324697606 #>  [26,] 0.3966854  0.338711959  0.130687471  0.308542215  0.065426161 #>  [27,] 0.4257224 -0.295657547 -0.540367661 -0.313948040 -0.402412802 #>  [28,] 0.4129130  0.063326800  0.026176538  0.092302684  0.430014367 #>  [29,] 0.4328336 -0.071259607  0.054981594  0.259083589 -0.123372845 #>  [30,] 0.3758567  0.053289100 -0.110458993  0.240239459  0.106515839 #>  [31,] 0.5023146  0.023628813 -0.901048024  0.368302374  0.136878528 #>  [32,] 0.5570444  0.438020950  0.281002272  0.234834678  0.152399577 #>  [33,] 0.3427636 -0.086486070  0.021087537 -0.113302850  0.012827725 #>  [34,] 0.4568044 -0.634573164 -0.861457134 -0.186007729  0.294961624 #>  [35,] 0.4489573 -0.181312149  0.160688859 -0.149620868 -0.080295988 #>  [36,] 0.2458303 -0.038673080 -0.113268192  0.020600796  0.075007323 #>  [37,] 0.4033745 -0.139091955 -0.582164186 -0.059154579  0.032583113 #>  [38,] 0.4145840 -0.306919414  0.144340212 -0.212879102  0.321830136 #>  [39,] 0.4622612 -0.078923477 -0.440826354 -0.338618845  0.270983441 #>  [40,] 0.3670046 -0.116727611 -0.145305067 -0.035659718  0.057750242 #>  [41,] 0.4665810  0.211791887  0.042981841 -0.201950540 -0.207838178 #>  [42,] 0.2988267 -0.100132987  0.145477223 -0.245747198 -0.098417194 #>  [43,] 0.3683423 -0.257308721 -0.166784145 -0.034921799  0.077269039 #>  [44,] 0.4479158  0.100447456  0.289370398 -0.420707232 -0.520399060 #>  [45,] 0.3573215  0.148051432  0.028297573 -0.084068440  0.015181782 #>  [46,] 0.4446294 -0.011589957 -0.309808318 -0.131918459  0.115077910 #>  [47,] 0.4628454  0.156567764  0.041039359 -0.064642523 -0.007202383 #>  [48,] 0.4676390 -0.456392349 -0.658856865  0.398473083  0.862287826 #>  [49,] 0.3525094 -0.010855480  0.214275495  0.020340940  0.127309601 #>  [50,] 0.3298833  0.005409991 -0.074089774 -0.036426137 -0.068246127 #>  [51,] 0.5004670 -0.686873951  0.327958790  0.362454547 -0.580930646 #>  [52,] 0.3996233 -0.059641923  0.076827931 -0.121759538 -0.113552073 #>  [53,] 0.5491266  0.108114830 -0.661401060 -0.327747997 -0.468806263 #>  [54,] 0.2752027 -0.066800391 -0.009454308 -0.004825294 -0.131531440 #>  [55,] 0.2978724  0.245192452 -0.048458238 -0.062966698 -0.020312548 #>  [56,] 0.4602581  0.068832031 -0.792158906 -0.142222727  0.227511191 #>  [57,] 0.4891743  0.145874778  0.068833595  0.643115350  0.171502037 #>  [58,] 0.3901108  0.133229381  0.178582207 -0.203556378  0.154670050 #>  [59,] 0.3410843  0.121778723 -0.200046501 -0.064246107 -0.082080014 #>  [60,] 0.3738342  0.061691497  0.229317934  0.780076558  0.422724019 #>  [61,] 0.5653649 -0.613230922  0.099013364  0.280611151 -1.113580622 #>  [62,] 0.2834620 -0.007670397  0.142935393  0.103334617 -0.208742252 #>  [63,] 0.6076685  0.268319715  0.272139091 -0.007775842  1.007608343 #>  [64,] 0.2918595 -0.076410876  0.064259639  0.172851723  0.317214226 #>  [65,] 0.2922010  0.036547308 -0.126568904  0.012057141 -0.355926727 #>  [66,] 0.4102500  0.291103390 -0.123470673 -0.194234202 -0.052411064 #>  [67,] 0.5285310  0.036052353  0.535409596 -0.642209052  0.627538926 #>  [68,] 0.4372510  0.055407544  0.164623291 -0.271980326  0.274427110 #>  [69,] 0.4216934  0.054823912 -0.309809547 -0.138137098 -0.078055299 #>  [70,] 0.3494532 -0.006073310  0.183392888  0.417108406 -0.167515550 #>  [71,] 0.3814819 -0.024870366 -0.060124721  0.142782916 -0.109138833 #>  [72,] 0.3707257 -0.072100676 -0.010279935  0.163562893 -0.325912568 #>  [73,] 0.4828752  0.239347380 -0.777538175 -0.012943752  0.156775561 #>  [74,] 0.5697711 -1.879854345  0.911564214 -0.575368351  0.308162849 #>  [75,] 0.5211946  0.172913467  0.371975759  0.567375923 -0.707597413 #>  [76,] 0.4660801  0.354938373  0.600787678  0.046518376  0.279408767 #>  [77,] 0.3642376  0.128528587 -0.143892783  0.043448234  0.064429079 #>  [78,] 0.3648949  0.194320861  0.043908627 -0.127887133  0.126797496 #>  [79,] 0.4881233  0.141784627  0.342328456  0.227121016  0.194730977 #>  [80,] 0.4045667 -0.047325219 -0.235017173  0.145039443 -0.177022301 #>  [81,] 0.4100322 -0.444941584  0.065768639 -0.309473743 -0.169397007 #>  [82,] 0.4159152 -0.099581858  0.090339104  0.240682611 -0.299140952 #>  [83,] 0.5809018  0.822553819  0.423917476 -0.760333990 -0.193156042 #>  [84,] 0.3753766 -0.346906038  0.103212207 -0.113717993  0.118022024 #>  [85,] 0.4343964 -0.100023664  0.286898744 -0.076762623 -0.419416967 #>  [86,] 0.3582847  0.067210747 -0.189630596 -0.133919331 -0.132572435 #>  [87,] 0.4268859  0.078094602 -0.069605377  0.011243807 -0.388365877 #>  [88,] 0.3188287  0.014201126 -0.021327911  0.089594145 -0.101053883 #>  [89,] 0.3999637 -0.158289497  0.296515088  0.028152995 -0.502721013 #>  [90,] 0.3556778 -0.227374632 -0.121331069 -0.225003793 -0.166836869 #>  [91,] 0.3970568  0.337485177 -0.121817979 -0.241875552  0.301373011 #>  [92,] 0.2545902  0.096909535  0.172198913 -0.247153710 -0.088835769 #>  [93,] 0.6463610  0.372996909  0.883536213  1.293073653  0.460378422 #>  [94,] 0.3366344 -0.005945801 -0.176820707  0.120065818 -0.003517776 #>  [95,] 0.4181961  0.207968708  0.015162389  0.301391641 -0.478154281 #>  [96,] 0.4294726 -0.055230969 -0.060072264  0.260550827  0.105730416 #>  [97,] 0.3930270  0.104017937  0.067786353 -0.019688551 -0.075517262 #>  [98,] 0.5433975 -0.141006691 -0.154442848 -0.065948298  0.656390658 #>  [99,] 0.4450818 -0.022495070 -0.254391770 -0.534078405  0.149026685 #> [100,] 0.4749153  0.083268567  0.102246862  0.354095397  0.408064094 #>                [,6]         [,7]         [,8]         [,9]        [,10] #>   [1,] -0.412910379  0.129402514  0.381858169  0.161929946 -0.102658378 #>   [2,]  0.593221605 -0.167061053 -0.040988177  0.014445804  0.083441467 #>   [3,] -0.105758021 -0.091989985 -0.068968482  0.066780652 -0.010012881 #>   [4,] -0.309318310 -0.249822601  0.182351674 -0.069056323 -0.024941254 #>   [5,] -0.278254568 -0.107918013 -0.072258773  0.098012296 -0.270397174 #>   [6,] -0.009546899 -0.024701194 -0.330216086  0.276964258  0.225686633 #>   [7,] -0.171286975 -0.264299622  0.054222055 -0.140204896  0.779940404 #>   [8,]  0.346795969  0.993425897  0.933887622  0.297622808 -0.116377317 #>   [9,]  0.241988814 -0.130047406 -0.196545706  0.258871721  0.285674526 #>  [10,] -0.061253337  0.139875440 -0.289573331  0.183106826  0.259322293 #>  [11,] -0.150927117 -0.209836653  0.023132125 -0.019032148  0.028486262 #>  [12,] -0.241383047  0.108260741  0.155628400 -0.194573381 -0.045677028 #>  [13,]  0.083456935 -0.011898615  0.043977576 -0.011595283  0.009245128 #>  [14,] -0.127715023 -0.242487682 -0.139494648 -0.023797523 -0.155823330 #>  [15,] -0.225281358 -0.055056998  0.017090747  0.123948323  0.106874736 #>  [16,]  0.253591437 -0.124192589  0.180172108 -0.370268369  0.201877771 #>  [17,] -0.222864079 -0.107216819 -0.019011435  0.129606861 -0.148554646 #>  [18,]  0.366584524  0.020378547 -0.307024793  0.616778722  0.088821770 #>  [19,] -0.190741647 -0.061149066 -0.041666501 -0.065256340 -0.043687434 #>  [20,]  0.595967349 -0.320638324  0.083092075  0.309248860  0.147426442 #>  [21,]  0.195984631  0.161191931  0.186117678  0.439631372  0.174816641 #>  [22,]  0.050922736  0.240763695  0.343035241  0.299048094  0.365485501 #>  [23,] -0.076904433  0.813078257  0.543564355 -0.539090911  0.189480349 #>  [24,]  0.153101625  0.419992244 -0.429518891 -0.008773842 -0.271712222 #>  [25,] -0.086557940 -0.472017904 -0.325821426 -0.186048225 -0.442788550 #>  [26,]  0.074782231  0.224562578 -0.576260245  0.109273763 -0.776715675 #>  [27,] -0.439688443  0.327795768  0.194118377  0.263070636 -0.134551613 #>  [28,]  0.625118313  0.025759929  0.052962445 -0.534323758  0.085849052 #>  [29,] -0.108858196 -0.094374428 -0.243788246  0.016715514 -0.360138831 #>  [30,]  0.141210003  0.174766278  0.497402818 -0.087152063  0.002258975 #>  [31,]  0.260807472 -0.676038178  0.191036782 -0.479262240 -0.060052588 #>  [32,] -0.621171131 -0.752535576  0.381806914  0.585896302  0.052117315 #>  [33,]  0.133186147 -0.103243254  0.137533672  0.095430444  0.201611602 #>  [34,]  0.211864433  0.233385941 -0.354998917  0.364979286  0.114855320 #>  [35,] -0.552350083  0.693121658 -0.248398448  0.002645604  0.243987731 #>  [36,]  0.193943578  0.130957221  0.015710633  0.020814887  0.100237093 #>  [37,] -0.115533106  0.034847918 -0.358197270 -0.215876970 -0.450844956 #>  [38,]  0.383388019  0.061199656  0.287822668  0.204395389 -0.156599244 #>  [39,]  0.526246989  0.112721523 -0.386760584 -0.151922514 -0.182411463 #>  [40,] -0.241159728 -0.026779581 -0.141573551  0.382914669  0.397846907 #>  [41,]  0.310598746 -0.025541969  0.273981684  0.066676793  0.169978439 #>  [42,]  0.034128265  0.025922676  0.139556156 -0.027607621 -0.066165073 #>  [43,] -0.437830937 -0.217352475 -0.050489493  0.010611244  0.180934872 #>  [44,]  0.084054200  0.298086862  0.303856489  0.068181632  0.142101649 #>  [45,]  0.035679546  0.384637061 -0.141929174 -0.146838322 -0.265420488 #>  [46,]  0.031939685  0.324014075 -0.341912521  0.147343945  0.118359412 #>  [47,] -0.235976647 -0.476230792 -0.046735453 -0.224327037  0.025318799 #>  [48,]  0.306756174 -0.138690968 -0.132968040  0.141858162  0.200285462 #>  [49,]  0.009216746  0.134365253 -0.044231712 -0.299925124 -0.095298196 #>  [50,]  0.108317842 -0.152680196  0.013900029  0.067983667 -0.016604212 #>  [51,]  0.709907192 -0.226391522  0.285228173 -0.365390021 -0.197002404 #>  [52,] -0.209638717  0.135453344 -0.121953590 -0.456911481 -0.103143873 #>  [53,]  0.411951580 -0.156482366  0.505410408 -0.386092977  0.066108829 #>  [54,] -0.082868563  0.040290713 -0.043926479  0.149820337  0.359168507 #>  [55,] -0.141331400  0.092375471 -0.065713379 -0.144007641  0.114961697 #>  [56,] -0.425616436 -0.451404314 -0.210071048  0.093953970 -0.277977777 #>  [57,]  0.385902172 -0.172777085 -0.343163210 -0.520224379 -0.001365833 #>  [58,] -0.250325921 -0.097149002 -0.192662436  0.204327099 -0.252912120 #>  [59,] -0.065243846 -0.136827804  0.202389301  0.003045319 -0.250830406 #>  [60,] -0.049628518 -0.269702468  0.419356214 -0.133737760  0.190264224 #>  [61,]  0.440828295  0.591215961 -0.465543583  0.643644477 -0.580152434 #>  [62,] -0.006642596 -0.217544866  0.069728957  0.212030131 -0.213204864 #>  [63,]  0.672409306 -0.466388649  0.207769868  0.333470951 -0.088172640 #>  [64,]  0.283223537  0.403561024  0.285546796 -0.461783603 -0.173574502 #>  [65,] -0.148128048 -0.080761822  0.240317543 -0.202929512 -0.248581795 #>  [66,] -0.016500535  0.423577369  0.269076565 -0.395633439  0.317812425 #>  [67,] -0.302354212  0.198703080 -0.470194187 -0.634233886  0.236776737 #>  [68,]  0.026786756  0.091918085 -0.341743276 -0.593808148  0.404657858 #>  [69,] -0.512938062  0.004176161 -0.157756073  0.039724999 -0.343875336 #>  [70,] -0.356779113 -0.445194247  0.167849793  0.274708847 -0.015193834 #>  [71,] -0.450485218 -0.410293831 -0.101437772 -0.271674375 -0.116380674 #>  [72,]  0.121725889 -0.103384210  0.117438871 -0.458285956 -0.133718580 #>  [73,] -0.335539528  0.165526278  0.907042393 -0.501771729  0.337713347 #>  [74,]  0.059039292 -0.185125020  0.916640620 -0.044914958 -0.559522595 #>  [75,]  0.452460635 -0.655352346 -0.006661472 -0.654154670 -0.481172812 #>  [76,]  0.166071689 -0.045668486  0.673537977  0.444678979  0.220482522 #>  [77,]  0.034903476 -0.123206853  0.248341770  0.382197781  0.045145652 #>  [78,] -0.086345801  0.225097158 -0.058724386 -0.351309797  0.283207351 #>  [79,] -0.231005529  0.093562440 -0.138226632  0.295779612  0.211506387 #>  [80,] -0.358373634 -0.436028758  0.043333686 -0.152824678 -0.052669079 #>  [81,] -0.710510825 -0.186771028 -0.088529937 -0.148763595 -0.171404459 #>  [82,] -0.018449284  0.115280421 -0.068286760 -0.050010034  0.221222493 #>  [83,]  0.626668151 -0.537773268 -0.287386963  0.485828350 -0.558943822 #>  [84,] -0.353718875 -0.103491528 -0.182729419 -0.353398535  0.012013287 #>  [85,]  0.080682663 -0.282293670 -0.781090964 -0.399340551  0.933787792 #>  [86,]  0.235504618  0.249336046 -0.113920192  0.200219590  0.398811087 #>  [87,]  0.546217779  0.337087952 -0.490055610  0.271505196  0.520270916 #>  [88,]  0.109119526 -0.038230145 -0.077853769  0.520294546  0.200699023 #>  [89,]  0.091876204 -0.016287313 -0.445614993 -0.191820175  0.960953346 #>  [90,] -0.148734759 -0.080581975  0.163963959  0.516792062 -0.088034505 #>  [91,] -0.024522500  0.237697369  0.096845669  0.120449900 -0.018518178 #>  [92,] -0.362694197  0.156906305 -0.026086735 -0.072112427 -0.090678458 #>  [93,] -0.698086713  0.764422188 -0.006652282  0.205222860 -0.261195397 #>  [94,] -0.077200832 -0.174939658 -0.073805905  0.466114750  0.153124326 #>  [95,] -0.101136090  0.044746747  0.001937849 -0.279444402 -0.163940680 #>  [96,] -0.561122103 -0.354468178 -0.071547048  0.239513985  0.280792960 #>  [97,] -0.093104950 -0.162978313  0.052870941  0.607979663  0.053724394 #>  [98,] -0.014913640  0.623675245 -0.513430432 -0.282709770 -1.098949434 #>  [99,] -0.299330669  0.385902411 -0.036448513  0.100240644  0.236738422 #> [100,]  0.174958310  0.117959194 -0.468506069 -0.078875110  0.245629833 #>  #> $w #> 100 x 100 sparse Matrix of class \"dgCMatrixsuppressing 67 columns and 70 rows in show(); maybe adjust 'options(max.print= *, widthindex #>        [,1] [,2] [,3] [,4] [,5] [,6] #>   [1,]    2   11   12    3   21   13 #>   [2,]    1   12    3   11   13   22 #>   [3,]   13    2    4   12   14    1 #>   [4,]   14    5    3   15   13   24 #>   [5,]   15    4    6   14   16   25 #>   [6,]   16    7    5   17   15   26 #>   [7,]   17    6    8   16   18   27 #>   [8,]   18    9    7   19   17   10 #>   [9,]   10   19    8   20   18   29 #>  [10,]    9   20   19    8   30   18 #>  [11,]   12    1   21    2   22   13 #>  [12,]   11    2   13   22    1    3 #>  [13,]    3   12   23   14    2   22 #>  [14,]    4   15   24   13    5   25 #>  [15,]    5   14   25   16    4   24 #>  [16,]    6   17   26   15    7   27 #>  [17,]    7   16   27   18    6   26 #>  [18,]    8   19   28   17    9   29 #>  [19,]   20    9   18   29   10    8 #>  [20,]   19   10   30    9   29   18 #>  [21,]   22   11   31   12   32   23 #>  [22,]   21   23   12   32   11   13 #>  [23,]   22   13   24   33   12   14 #>  [24,]   25   14   23   34   15   13 #>  [25,]   24   15   35   26   14   34 #>  [26,]   27   16   36   25   17   37 #>  [27,]   26   17   28   37   16   18 #>  [28,]   29   18   27   38   19   17 #>  [29,]   30   28   19   39   20   18 #>  [30,]   29   20   40   19   39   28 #>  [31,]   32   41   21   42   22   33 #>  [32,]   31   42   33   22   41   43 #>  [33,]   43   32   34   23   42   44 #>  [34,]   35   44   33   24   45   43 #>  [35,]   34   45   25   36   44   24 #>  [36,]   37   46   26   35   47   27 #>  [37,]   36   47   38   27   46   48 #>  [38,]   48   39   37   28   49   47 #>  [39,]   40   49   38   29   50   48 #>  [40,]   39   50   30   49   29   38 #>  [41,]   42   31   51   32   52   43 #>  [42,]   41   32   43   52   31   33 #>  [43,]   33   42   44   53   32   34 #>  [44,]   45   34   43   54   35   33 #>  [45,]   44   35   46   55   34   36 #>  [46,]   47   36   45   56   37   35 #>  [47,]   46   37   48   57   36   38 #>  [48,]   38   49   47   58   39   37 #>  [49,]   50   39   48   59   40   38 #>  [50,]   49   40   60   39   59   48 #>  [51,]   52   61   41   62   42   53 #>  [52,]   51   62   53   42   61   63 #>  [53,]   63   52   54   43   62   64 #>  [54,]   55   64   53   44   65   63 #>  [55,]   54   65   56   45   64   66 #>  [56,]   57   66   55   46   67   65 #>  [57,]   56   67   58   47   66   68 #>  [58,]   68   59   57   48   69   67 #>  [59,]   60   69   58   49   70   68 #>  [60,]   59   70   50   69   49   58 #>  [61,]   62   51   71   52   72   63 #>  [62,]   61   52   63   72   51   53 #>  [63,]   53   62   64   73   52   54 #>  [64,]   65   54   63   74   55   53 #>  [65,]   64   55   75   66   54   74 #>  [66,]   67   56   76   65   57   77 #>  [67,]   66   57   68   77   56   58 #>  [68,]   58   69   67   78   59   57 #>  [69,]   70   59   68   79   60   58 #>  [70,]   69   60   80   59   79   68 #>  [71,]   72   81   61   82   62   73 #>  [72,]   71   73   82   62   81   83 #>  [73,]   72   83   74   63   82   84 #>  [74,]   75   84   73   64   85   83 #>  [75,]   74   85   65   76   84   64 #>  [76,]   77   86   66   75   87   67 #>  [77,]   76   87   78   67   86   88 #>  [78,]   79   88   77   68   89   87 #>  [79,]   80   78   89   69   90   88 #>  [80,]   79   90   70   89   69   78 #>  [81,]   82   91   71   92   72   83 #>  [82,]   81   92   83   72   91   93 #>  [83,]   93   82   73   84   92   72 #>  [84,]   94   85   74   83   95   75 #>  [85,]   95   84   75   86   94   74 #>  [86,]   96   87   76   85   97   77 #>  [87,]   97   86   77   88   96   76 #>  [88,]   98   89   78   87   99   79 #>  [89,]   90   99   88   79  100   98 #>  [90,]   89  100   80   99   79   88 #>  [91,]   92   81   82   93   71   83 #>  [92,]   91   82   93   81   83   72 #>  [93,]   83   92   94   82   84   91 #>  [94,]   84   95   93   85   83   74 #>  [95,]   85   94   96   84   86   75 #>  [96,]   86   97   95   87   85   76 #>  [97,]   87   96   98   86   88   77 #>  [98,]   88   99   97   89   87  100 #>  [99,]  100   89   98   90   88   79 #> [100,]   99   90   89   98   80   88 #>"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_lrc.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster spatial transcriptomics data — smooth_lrc","title":"Cluster spatial transcriptomics data — smooth_lrc","text":"Cluster spatial transcriptomics data","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_lrc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster spatial transcriptomics data — smooth_lrc","text":"","code":"smooth_lrc(input, lambda, k, n_clust, epsilon = 0.001, maxiter = 1000)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_lrc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster spatial transcriptomics data — smooth_lrc","text":"input SummarizedExperiment object containing counts assay row/col coordinates. lambda positive numeric; penalization parameter. k integer; indicates desired rank singular value decomposition. n_clust integer; number clusters. epsilon positive numeric; convergence criterion. maxiter positive integer; maximum desired iterations","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_lrc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster spatial transcriptomics data — smooth_lrc","text":"SummarizedExperiment object u, v cluster labels.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_lrc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster spatial transcriptomics data — smooth_lrc","text":"","code":"sce <- example_sce() lambda <- 5 k <- 10 n_clust <- 5 epsilon <- 1e-3 maxiter <- 5 smooth_lrc(sce, lambda, k, n_clust, epsilon, maxiter) #> [1] \"Initializing components...\" #> [1] \"Running smoothLRC...\" #> iteration: 1 | convergence: 0.100351 | 0.0337224 | 1 #> iteration: 2 | convergence: 0.0846095 | 0.0324173 | 0.00435998 #> iteration: 3 | convergence: 0.07633 | 0.0325976 | 0.00409897 #> iteration: 4 | convergence: 0.0713086 | 0.0329443 | 0.00396169 #> iteration: 5 | convergence: 0.0697088 | 0.0331661 | 0.00394547 #> [1] \"Clustering right singular vectors...\" #> fitting ... #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #> [1] \"Done!\" #> class: SummarizedExperiment  #> dim: 1000 100  #> metadata(2): smooth_u smooth_v #> assays(2): counts logcounts #> rownames(1000): Feature 1 Feature 2 ... Feature 999 Feature 1000 #> rowData names(0): #> colnames(100): Pixel 1 Pixel 2 ... Pixel 99 Pixel 100 #> colData names(3): row col smooth_cluster"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Main smoothLRC algorithm — smooth_model","title":"Main smoothLRC algorithm — smooth_model","text":"Main smoothLRC algorithm","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main smoothLRC algorithm — smooth_model","text":"","code":"smooth_model(x, u_init, v_init, w, index, lambda, epsilon, maxiter)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main smoothLRC algorithm — smooth_model","text":"x sparse matrix; assay matrix u_init matrix; u initialization matrix v_init matrix; v initialization matrix w matrix; distance matrix. null, computed specification k nearest neighbors. index w indicies. lambda positive numeric; penalization parameter. epsilon positive numeric; convergence criterion. maxiter positive integer; maximum desired iterations","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main smoothLRC algorithm — smooth_model","text":"SummarizedExperiment object u, v cluster labels.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/smooth_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Main smoothLRC algorithm — smooth_model","text":"","code":"sce <- example_sce() x <- SummarizedExperiment::assay(sce) coords <- SummarizedExperiment::colData(sce)[, c(\"col\", \"row\")] k <- 10 init <- smooth_init(x, coords, k) lambda <- 1 epsilon <- 1e-3 maxiter <- 5 smooth_model(x, init$u0, init$v0, init$w, init$index, lambda, epsilon, maxiter) #> iteration: 1 | convergence: 0.106201 | 0.0371337 | 1 #> iteration: 2 | convergence: 0.0903484 | 0.0311731 | 0.00525504 #> iteration: 3 | convergence: 0.0870562 | 0.0367362 | 0.00560428 #> iteration: 4 | convergence: 0.0876035 | 0.0403189 | 0.00625686 #> iteration: 5 | convergence: 0.0890037 | 0.0420041 | 0.0071044 #> $u #>                  [,1]          [,2]          [,3]          [,4]          [,5] #>    [1,]  0.2007066735  8.865972e-02 -0.0671240212  0.0221808448 -0.3089801298 #>    [2,]  0.0068779493  4.225074e-02  0.0634413733  0.0059770036 -0.0051897911 #>    [3,]  0.1474356856  3.878247e-02  0.3524605550  0.2631222898  0.0083108161 #>    [4,]  0.1758078569  7.641218e-02 -0.0994096059  0.0392977980 -0.0755143651 #>    [5,]  0.0523636971  5.986077e-02  0.0098076570  0.0304484059 -0.0348481628 #>    [6,]  0.1442057406  1.416731e-01  0.3133375466  0.1137707557  0.1003648849 #>    [7,]  0.0532971171  4.387710e-02 -0.0863071615  0.0754363119 -0.0814809179 #>    [8,]  0.2205740278  3.011001e-01  0.0490613055 -0.3482692322 -0.1070543084 #>    [9,]  0.0746570395  5.414608e-02 -0.1160163893  0.0591123971  0.0629343738 #>   [10,]  0.0106591946  3.037733e-02 -0.0576274600  0.0576634995 -0.0239671931 #>   [11,]  0.0734189036  1.813488e-02 -0.1137814347  0.0093114216  0.0376100823 #>   [12,]  0.0789922001  1.507262e-02 -0.1302131670  0.0274423331 -0.0010450493 #>   [13,]  0.0612681065  3.513416e-03  0.0265970617 -0.1501539770 -0.0597147888 #>   [14,]  0.1937663701  2.341532e-02  0.1456436556 -0.1878269022 -0.0366633205 #>   [15,]  0.1065638279  1.347485e-01 -0.1152510032 -0.0907983826 -0.0122281114 #>   [16,]  0.1925211758 -2.790384e-02 -0.1243203230  0.1794781533  0.1976379866 #>   [17,]  0.0333029908  1.154662e-01  0.0357108169 -0.1163251629 -0.0362815652 #>   [18,]  0.0675422292  9.447625e-02  0.1667602378  0.0658661931 -0.0162974902 #>   [19,]  0.0610069136  1.073274e-01  0.2555974145  0.1054721570  0.0167433454 #>   [20,] -0.0256668678  3.990149e-02 -0.0409612167  0.0708914994 -0.0402666261 #>   [21,]  0.1295508997  4.871966e-02  0.0757343049 -0.1185101262 -0.0313169427 #>   [22,]  0.1229994476  1.001976e-02  0.1008258802  0.0895054918 -0.0310976643 #>   [23,]  0.0045216409  3.818953e-02 -0.0948238753  0.0662675543 -0.0009356166 #>   [24,]  0.1010423838  1.497169e-01  0.0601373379 -0.2851338137 -0.0511941482 #>   [25,]  0.0605055328  1.475781e-01  0.0376472791  0.0259878629 -0.0164971186 #>   [26,] -0.0151799690  9.034042e-02 -0.0617189230  0.0561316178  0.0042896253 #>   [27,]  0.0867396688  1.207830e-01 -0.0333724719  0.0655977713 -0.0461601368 #>   [28,]  0.1170477000 -5.921024e-02 -0.0570784354  0.0254073965  0.1987673309 #>   [29,]  0.1098341952  1.357562e-01 -0.1061515406 -0.1612299855  0.0160733449 #>   [30,] -0.0035738690  3.522324e-02 -0.0221909269 -0.0082103036 -0.0123589763 #>   [31,]  0.2603915083 -8.218033e-02 -0.1273625625  0.2449432940  0.2583705736 #>   [32,]  0.0168444599  5.903458e-02 -0.0148333523  0.0328390465  0.0081771004 #>   [33,]  0.0291858334  4.754408e-02  0.0115379053  0.0256341993  0.0266797942 #>   [34,]  0.0082246248  5.921923e-02  0.0723520957  0.0205583231 -0.0504449555 #>   [35,]  0.0538666178  1.505109e-02 -0.0687611900 -0.0007870401  0.0310764628 #>   [36,] -0.0210291773  6.749544e-02 -0.0227602559  0.0277247774 -0.0090546807 #>   [37,]  0.1890950618 -1.549371e-01  0.1395826214  0.1159481212 -0.1623220098 #>   [38,]  0.0792824202 -2.090137e-02  0.0052084003  0.0992171516 -0.2573076918 #>   [39,]  0.0252860294  5.100394e-02  0.0306379392  0.0190346581 -0.0364963579 #>   [40,]  0.0472026974  1.690404e-02  0.1980241203  0.1943563565 -0.0325927848 #>   [41,]  0.1384828110 -3.427575e-02  0.0022426605  0.0356678836 -0.1759588872 #>   [42,] -0.0031611172  9.505073e-02 -0.0297923511  0.0649329683 -0.0012840483 #>   [43,]  0.2563036641 -4.689148e-01 -0.2009638709  0.0979694737  0.0073417811 #>   [44,]  0.1162037849  1.833571e-01 -0.1439317651  0.0698613063 -0.0308369964 #>   [45,]  0.0064284386  7.864658e-02 -0.1086020661  0.0548502460 -0.0496703852 #>   [46,]  0.0725679327  7.660213e-02 -0.0158569175  0.1188521489 -0.0292352646 #>   [47,]  0.1479485089 -3.704375e-02 -0.1071841346  0.0599274149 -0.1389458756 #>   [48,]  0.0780417763  1.216165e-01 -0.1163015976  0.1888882950  0.0124732687 #>   [49,]  0.1104965723  3.082087e-02 -0.0683676104 -0.0416542627 -0.0922662861 #>   [50,]  0.0861975576 -2.096414e-02  0.0055342590 -0.0966823289 -0.1073734990 #>   [51,]  0.0552893731  7.545413e-02 -0.0829414015  0.0290662754  0.0950316026 #>   [52,]  0.0570641393  1.238584e-01 -0.0963074105  0.0467455776 -0.0509507345 #>   [53,] -0.0047869770  2.336536e-02 -0.0452590659  0.0588493087 -0.0442220726 #>   [54,]  0.0321476410  4.344545e-03 -0.1072919723  0.0446683501 -0.0438232449 #>   [55,]  0.0404498762  7.025164e-02  0.0986229655  0.0243401407 -0.0493128627 #>   [56,] -0.0188884364  3.485793e-02 -0.0633120663  0.0516649375 -0.0305288684 #>   [57,]  0.1438942261 -2.922097e-01 -0.2487522278  0.1878343368  0.0880538835 #>   [58,]  0.0091004708  2.723583e-02 -0.0569561706  0.0664620846 -0.0208367770 #>   [59,]  0.0881333636  9.354251e-02  0.0058170309  0.0429191698  0.0710920385 #>   [60,]  0.1126481808  1.879270e-02  0.0831718915  0.3164338063 -0.0537747504 #>   [61,]  0.0387658504 -9.413197e-03 -0.0710769728 -0.0651831050 -0.0256980641 #>   [62,]  0.0889589125 -5.139547e-02 -0.0703897367 -0.0604056034 -0.0596675990 #>   [63,]  0.1678009465 -1.177955e-02 -0.0443380833 -0.2011215064 -0.0994761493 #>   [64,]  0.1151844934 -3.067110e-02  0.2492941582 -0.1375567204 -0.0624134264 #>   [65,]  0.0244754667  1.735743e-02 -0.0350143719  0.0796422503 -0.0330602176 #>   [66,]  0.1056211361  4.834840e-02  0.0506117875  0.0814127630  0.0657425919 #>   [67,]  0.0401060086  2.372619e-02 -0.0657800635 -0.0371657376  0.0461537892 #>   [68,]  0.0303080907  1.027638e-01  0.0413353841  0.0100017463 -0.0151455793 #>   [69,]  0.1147273315  2.143274e-01 -0.1383956209  0.0398317935  0.0580743442 #>   [70,]  0.0224416041  3.709760e-02  0.0131977328 -0.1139083689 -0.0268965336 #>   [71,]  0.0372539557  6.624342e-02 -0.0142656288 -0.1048656592 -0.0549175282 #>   [72,]  0.2416317360  3.027947e-01 -0.0809408230  0.1453269456  0.0310899091 #>   [73,]  0.0415510289  3.147302e-02  0.0160845051 -0.0984404385 -0.1100811349 #>   [74,]  0.1867250409 -2.039713e-01  0.1228426297  0.0890582923 -0.2283637017 #>   [75,]  0.0281007989 -1.294362e-02 -0.0665732715  0.0623690218 -0.0491946894 #>   [76,]  0.2124574120  1.284490e-01  0.1546760809  0.2458556387 -0.1314332438 #>   [77,]  0.1170150274  4.374834e-02 -0.0698689896 -0.0770929413  0.0197378109 #>   [78,]  0.1496022375  1.203048e-01  0.0930899996  0.1297441365 -0.2636931190 #>   [79,]  0.0383910007  1.395806e-01  0.1708355939  0.1079151463  0.0389262885 #>   [80,]  0.0475253807 -2.097583e-02  0.1505831601  0.0316147923  0.0245105832 #>   [81,]  0.1206395620 -1.463422e-01 -0.1088588030 -0.0470422781  0.0154885425 #>   [82,] -0.0331112575  1.630393e-02  0.0034341302  0.0425238146 -0.0325672418 #>   [83,]  0.1774825031  1.987985e-01 -0.0212239187  0.1796320754  0.0291993305 #>   [84,]  0.0991928015  6.892928e-02  0.0062164983  0.0312663157  0.0215914195 #>   [85,]  0.0447199794  7.454482e-02 -0.1255961428  0.0636132262  0.0691665125 #>   [86,]  0.0328986092 -2.332612e-02  0.1180202524  0.1494714557 -0.0556888092 #>   [87,]  0.1529226087  5.017280e-02 -0.1887237306  0.0548737319 -0.0512544022 #>   [88,]  0.1729656718  1.180506e-01  0.1499932557  0.0411830573 -0.0681602828 #>   [89,]  0.2621162536 -5.000792e-01 -0.1106533400 -0.2152392859  0.0013071658 #>   [90,]  0.1535433038  1.572316e-01 -0.0942827752  0.0516211273 -0.0963399642 #>   [91,]  0.1195379493  7.183507e-02 -0.0745787403  0.1934899467 -0.0692007911 #>   [92,]  0.0140816701 -3.118873e-02 -0.0332242656  0.0166702593 -0.0371422785 #>   [93,]  0.1111031164  3.210763e-02 -0.1593914109  0.0013792903  0.0275452972 #>   [94,]  0.0634513237  8.022598e-02 -0.0993934927  0.0596453752  0.0882019987 #>   [95,]  0.0575641990  5.256782e-02 -0.1216738017 -0.1150217454  0.1046296464 #>   [96,]  0.1154559521  2.719382e-01  0.1449791775 -0.2147402383 -0.0467345114 #>   [97,]  0.0888308958 -1.219501e-01  0.0233159236  0.0238150619 -0.0410215206 #>   [98,]  0.0145436194  5.322205e-02  0.0425575130  0.0685137711  0.0298201816 #>   [99,]  0.1295013915 -6.433418e-02 -0.1916729790  0.1399459422  0.1570209984 #>  [100,]  0.0458464909  1.155659e-02 -0.0196672297 -0.0096317892 -0.1274901282 #>                 [,6]          [,7]          [,8]          [,9]         [,10] #>    [1,]  0.208176331 -0.4244605407 -0.1619187888  0.0493685146  1.579639e-01 #>    [2,]  0.022628988 -0.0482215840  0.0392023634  0.0850043012  4.986152e-02 #>    [3,]  0.013176348  0.0328130149 -0.1097599359  0.1661078603  5.372837e-02 #>    [4,] -0.018397104 -0.3434033499 -0.2987413563 -0.1057473747 -1.285573e-02 #>    [5,]  0.059126072  0.0910942357 -0.0435812612  0.0783955045 -9.985797e-03 #>    [6,]  0.097532640  0.1930207003 -0.0379461082  0.1969013801  2.720401e-01 #>    [7,]  0.061465838  0.0743903522 -0.0353751456 -0.0754749343  1.566203e-02 #>    [8,]  0.080783375  0.0357875574 -0.3653210065 -0.0044682710  5.350230e-02 #>    [9,] -0.030165658  0.0879251969 -0.0696500587  0.0140491269 -5.705238e-02 #>   [10,]  0.110955589  0.0691715212 -0.0466325887 -0.0422039952 -9.962702e-02 #>   [11,]  0.094739339 -0.0432288019 -0.1064740491  0.0370479313 -3.840687e-03 #>   [12,]  0.161758560  0.1314541297 -0.0683662313  0.0273256807 -3.181473e-02 #>   [13,]  0.051407686  0.1031704491  0.1543568298  0.1388908789 -7.203436e-04 #>   [14,] -0.045625988  0.0996786724 -0.0066474949  0.1607933154  2.951463e-02 #>   [15,]  0.110548586  0.0529091025 -0.1110524685 -0.1014682465 -7.313268e-02 #>   [16,] -0.211690206 -0.1297453968  0.0091113458  0.1695411473 -1.184478e-02 #>   [17,]  0.183715713 -0.1167408687 -0.1533352669 -0.1095224540  9.392686e-02 #>   [18,]  0.022726447  0.1181676014 -0.1201887429  0.1025726325  5.755983e-02 #>   [19,]  0.071116190  0.1884076650  0.0251634116  0.1130796369  2.098902e-01 #>   [20,]  0.039465340  0.0126455634 -0.0563474716  0.0412239412  3.823639e-02 #>   [21,]  0.147839784  0.1147806112 -0.1210666075  0.0313981738  2.147407e-02 #>   [22,] -0.059758309  0.0696322904 -0.0017680137 -0.0498824430  2.820375e-01 #>   [23,]  0.049099396  0.0047580132 -0.0926146699  0.0036741697  2.459304e-02 #>   [24,]  0.186231397 -0.1626310548 -0.2937054169  0.0558043487  5.938487e-02 #>   [25,]  0.105874280  0.1160972520  0.0277934980  0.1218299740  1.391006e-01 #>   [26,]  0.085374701  0.0751815459 -0.0393976495  0.0578134752  6.629325e-04 #>   [27,]  0.161411169 -0.0205577328  0.0435181184  0.0199850339 -8.226140e-02 #>   [28,] -0.109466189  0.0239142936 -0.0970156849 -0.1662879840  2.921723e-02 #>   [29,] -0.109619161 -0.0551339634 -0.1346530204  0.0231836143  5.614589e-03 #>   [30,]  0.067285441 -0.0180484693 -0.1020909814  0.0014935568  6.372262e-02 #>   [31,]  0.188788253 -0.0749112020 -0.1175861988 -0.4485472861 -4.690547e-02 #>   [32,]  0.089148261  0.0637398502 -0.0039819427  0.0510979652  1.151467e-01 #>   [33,] -0.077914665  0.0876528378 -0.0493457718 -0.0291340190  7.959136e-02 #>   [34,]  0.085709356  0.0919373431  0.0242801466  0.0678066472  1.629041e-01 #>   [35,]  0.040867260  0.0552961247  0.1069108843  0.1287971075 -7.154997e-02 #>   [36,] -0.048461916  0.0806186548 -0.0899894313  0.0233954870  6.883652e-02 #>   [37,]  0.028019191 -0.5250050832 -0.1732366467  0.0979486427 -7.213828e-02 #>   [38,]  0.093240187  0.1526073426 -0.0464657864 -0.2177966328  3.411686e-02 #>   [39,]  0.062957316  0.0959364963  0.0220498249  0.0510679190  1.201799e-01 #>   [40,]  0.066308421  0.0276974485 -0.0887417370  0.0377701550  3.740978e-02 #>   [41,]  0.017592053 -0.3760306726  0.0929267817 -0.0562214915 -2.732554e-02 #>   [42,] -0.010704172  0.0492120645 -0.0941979540 -0.0486691439 -7.304380e-04 #>   [43,]  0.142774625  0.1752291069 -0.2556335775 -0.2038525245  1.965002e-01 #>   [44,]  0.032122681  0.1046700939 -0.1190775121 -0.1233854249  3.097333e-02 #>   [45,]  0.032284105  0.0740106936 -0.0278407799  0.0126585070  3.943443e-02 #>   [46,]  0.084926424  0.1558729044 -0.0829627838  0.0371797190  7.595525e-02 #>   [47,]  0.101415488  0.1955115827 -0.1505089851  0.1156619380 -7.052376e-02 #>   [48,] -0.055893946  0.0199581196  0.2102985337  0.2366544906  7.243967e-02 #>   [49,] -0.118296471 -0.0732045005 -0.0710165121  0.1320079472 -8.825296e-02 #>   [50,] -0.177257921  0.0425706282 -0.0703064361 -0.1301330588  1.087575e-01 #>   [51,] -0.003517092  0.0092585609  0.0138239696  0.0430983276 -4.077510e-04 #>   [52,]  0.033208017  0.0212280298  0.0310855027  0.1084585074  5.785034e-02 #>   [53,]  0.024575246 -0.0368760802 -0.0402375122  0.0669341338  2.022732e-02 #>   [54,]  0.136207992  0.0935482372 -0.0702770232 -0.0877565360 -1.016640e-02 #>   [55,]  0.060770488  0.0476462320  0.0887371505  0.0707682592 -5.541385e-02 #>   [56,]  0.074185002  0.0305312849 -0.0496613999  0.0240096636 -5.364790e-05 #>   [57,]  0.138870806  0.0084158113  0.0297186760  0.2210063530  2.154089e-01 #>   [58,]  0.048976837  0.0542520460 -0.0732097184  0.0201069106  7.232679e-02 #>   [59,]  0.074801675  0.1354008581 -0.1559022550  0.0009583226 -2.825072e-02 #>   [60,]  0.132141808 -0.1957834906 -0.0342797758  0.0968653761  3.177423e-02 #>   [61,] -0.136166917 -0.0091143881 -0.0578239464  0.0629451631 -1.237207e-02 #>   [62,] -0.069428151  0.0873483531  0.1131870717  0.0978109422 -5.863740e-02 #>   [63,] -0.177585908 -0.0481565336 -0.2279521737  0.1734434752  4.402363e-02 #>   [64,] -0.164015598 -0.0374658755  0.0332035893  0.1298113889  2.753941e-02 #>   [65,]  0.058900742 -0.0028157879 -0.0745807220  0.0573134765 -5.584940e-02 #>   [66,]  0.195280169  0.1767338816  0.0667018760  0.0596501579  3.519800e-02 #>   [67,] -0.067374395  0.0817759191 -0.0531172069  0.1049032653 -4.063321e-02 #>   [68,]  0.115095365  0.1060956908 -0.0085870128  0.0631923895  1.445944e-01 #>   [69,]  0.083026341 -0.0069618021  0.0094252366  0.0934708541  1.107691e-01 #>   [70,]  0.075473585  0.0003144115  0.0176762498  0.0583964234 -3.113601e-02 #>   [71,]  0.036741062 -0.0768436815 -0.1270287995  0.0726802253  4.865493e-02 #>   [72,]  0.107630362 -0.0455540484  0.0127211180  0.0646582175 -1.851277e-01 #>   [73,]  0.090981520 -0.0445829503 -0.0100775780 -0.0281960496  9.884348e-02 #>   [74,] -0.157084160 -0.3604296255 -0.1265321512 -0.1545001392  1.091936e-01 #>   [75,]  0.048468607  0.0312810231 -0.0337865907 -0.0155399955  1.471336e-02 #>   [76,]  0.184830734  0.1807541477 -0.2931806752  0.0801507714  4.271267e-02 #>   [77,]  0.134697012  0.0908029684 -0.0412413069  0.0694495939 -6.035475e-02 #>   [78,] -0.046389239  0.0299368232  0.1319093421 -0.0921905942  5.607704e-02 #>   [79,] -0.011905204  0.1625075195 -0.0718334845  0.1029744775  1.162091e-01 #>   [80,]  0.170106802  0.0524242477  0.0721909691  0.0620962307  3.998930e-02 #>   [81,]  0.186706604  0.0327082410 -0.1539707091  0.1181008444  1.591435e-01 #>   [82,]  0.090065184  0.0275427870 -0.0067536644  0.0356092341  4.033550e-02 #>   [83,] -0.176001362  0.1795017330  0.1520085964  0.2404368460  1.844633e-01 #>   [84,] -0.018750299  0.1141314299 -0.2474429173  0.0075622993  8.455163e-02 #>   [85,] -0.077659827 -0.0128479198 -0.0367031117 -0.0815153687  6.587492e-02 #>   [86,]  0.122186093 -0.0828534461 -0.0889982215  0.0363676598  4.995994e-03 #>   [87,] -0.006931496 -0.0902201640  0.0226358992 -0.2278934623  3.200014e-02 #>   [88,]  0.169108342 -0.1667514666 -0.1606780731  0.1260788089  1.709060e-02 #>   [89,]  0.060337546  0.1228745640  0.1149764035  0.2887513923  1.423535e-01 #>   [90,]  0.043276389  0.0947810704  0.2051392901  0.2120636180  6.012679e-02 #>   [91,] -0.140439750 -0.0079812843  0.2450546830  0.1205803358  1.423457e-01 #>   [92,]  0.014545082  0.0509030824 -0.0440998758  0.0613515966  5.196905e-03 #>   [93,]  0.184132302  0.1110476920  0.0037206042  0.0973691931 -2.936501e-01 #>   [94,]  0.151048221  0.0082513143  0.1084265301 -0.0163743472 -1.734043e-01 #>   [95,]  0.062644157  0.1343520112 -0.0777500884  0.1144203604 -8.201987e-02 #>   [96,]  0.233089665 -0.1185246196 -0.2227373588  0.1158359163  3.163908e-02 #>   [97,] -0.235914116 -0.0872562720  0.1003636033  0.1336223890 -9.587557e-02 #>   [98,]  0.167519158  0.1023879834 -0.0132203565  0.0309516046 -1.766326e-02 #>   [99,]  0.021517058 -0.0151734950 -0.0924849608  0.0614425357  2.965564e-01 #>  [100,] -0.051733088 -0.1831777984 -0.1022405821  0.0628142978  6.648866e-03 #>  [ reached getOption(\"max.print\") -- omitted 900 rows ] #>  #> $v #>             [,1]         [,2]          [,3]          [,4]         [,5] #>   [1,] 0.2149260 -0.076190416 -0.0822264127 -0.2680622085 -0.088755782 #>   [2,] 0.2974099 -0.232937362 -0.0901852067 -0.0483096043 -0.052899648 #>   [3,] 0.3803527  0.489017270  0.5391790434 -0.0310228671  0.004716606 #>   [4,] 0.2849800  0.400455240  0.1658514778 -0.0294860829  0.516942557 #>   [5,] 0.4885513  0.677955132  0.6125165970 -1.1562645144 -0.155175908 #>   [6,] 0.4722826  0.026631083 -0.2578209026 -0.4143583341 -0.466522173 #>   [7,] 0.2505574  0.064087150  0.0925318622  0.2576670305  0.067305827 #>   [8,] 0.2253700 -0.059300085  0.0150463412 -0.0335798270  0.177201830 #>   [9,] 0.3175433  0.399589016  0.0537158239 -0.2465391217  0.069136695 #>  [10,] 0.5258952  0.962911199 -0.8886627745  0.3508963388  0.078743600 #>  [11,] 0.2303544 -0.065997430  0.1947274535 -0.2671454711  0.060202358 #>  [12,] 0.3282651 -0.160493664  0.1385537558 -0.2120140026  0.509570564 #>  [13,] 0.3228640 -0.306730119  0.1888055571  0.4611237092  0.365528059 #>  [14,] 0.2342243 -0.185433574 -0.2301694613 -0.0001633888  0.227240111 #>  [15,] 0.2014615 -0.180938351  0.0900545166 -0.0856514023 -0.108630519 #>  [16,] 0.2572740 -0.067160079  0.0663337931  0.1048991230 -0.038117931 #>  [17,] 0.3856626 -0.083690259  0.3803492442  0.6825630433 -0.119483416 #>  [18,] 0.3021844  0.034948908 -0.2266511422 -0.0474070970  0.084740279 #>  [19,] 0.2851221 -0.098416965  0.1545435813 -0.0923970828  0.254524320 #>  [20,] 0.5328422 -1.949104402 -0.9771492112 -0.0619439768  0.369542679 #>  [21,] 0.3222199  0.192036181 -0.1492608182 -0.1117176473  0.172440298 #>  [22,] 0.1540626 -0.080286063 -0.0018381742 -0.0773085134  0.190073355 #>  [23,] 0.2874883 -0.020398321 -0.0655621858  0.0510557254 -0.281658075 #>  [24,] 0.2739418  0.035421543  0.0900500387  0.2209373124  0.001857070 #>  [25,] 0.4008466  0.470269547 -0.0411605156 -1.0289755144  0.537932658 #>  [26,] 0.3837962 -0.462649264  0.0422903344  0.0878602156  0.455321338 #>  [27,] 0.4235156 -0.602883724  0.5915828841  0.3673574262 -0.556106952 #>  [28,] 0.2568168  0.003390262  0.1157055351  0.0343647311 -0.052906957 #>  [29,] 0.3607412  0.769415099 -0.3902604980  0.6635494374 -0.102940001 #>  [30,] 0.2475474 -0.483461138 -0.1607114216 -0.2968399920 -0.354084025 #>  [31,] 0.3075315  0.029731818  0.0576052587  0.3089014205 -0.429483726 #>  [32,] 0.2188245 -0.209851108  0.2381509207  0.0389135957  0.020540955 #>  [33,] 0.3533810 -0.056417296  0.2064956405 -0.4435013706  0.037010439 #>  [34,] 0.1998890 -0.043688528  0.1664296844  0.0206046153  0.257260288 #>  [35,] 0.2004848 -0.130836632  0.0711531102 -0.0780530306 -0.052179616 #>  [36,] 0.2482743 -0.162133436 -0.0314601953 -0.0970668644  0.062552320 #>  [37,] 0.3794031 -0.171107197 -0.1409103124  0.2956899868  1.107064676 #>  [38,] 0.3068617 -0.008584008 -0.2006073302  0.0916998906  0.326934694 #>  [39,] 0.3774921  0.297789679 -0.4535301836  0.0500693418  0.585463349 #>  [40,] 0.2820791 -0.135704393  0.5190805015  0.0709882989  0.105457133 #>  [41,] 0.2773272 -0.371826026 -0.0336403497 -0.1442956766 -0.048735280 #>  [42,] 0.2947680  0.039454913 -0.1330100071  0.0981748056 -0.197113608 #>  [43,] 0.2237271 -0.146204894 -0.0123229801 -0.0722456542  0.051779133 #>  [44,] 0.4893929  0.041773064 -0.4866427394  0.3658038681  0.693396063 #>  [45,] 0.3617168 -0.567190372  0.9087851351 -0.0545295751  0.211781264 #>  [46,] 0.2503159 -0.186543493  0.0620409823 -0.0568035794 -0.092979131 #>  [47,] 0.2323670 -0.098880133 -0.0350956006 -0.0345656037  0.132960984 #>  [48,] 0.2834040  0.134723128 -0.2263320209 -0.4001687401  0.359097062 #>  [49,] 0.2260726  0.123392451 -0.0943935892 -0.0521986671 -0.035178679 #>  [50,] 0.2670545 -0.308342775 -0.0008648042 -0.1166895752  0.072783302 #>  [51,] 0.2439850 -0.021424675 -0.1123268374 -0.1087985453  0.237570737 #>  [52,] 0.2974427 -0.074175177 -0.1260432002  0.1693843777  0.244866871 #>  [53,] 0.2007577 -0.118086624  0.3713457552 -0.0560206711 -0.197539814 #>  [54,] 0.3850171  0.133816261  0.2917843135  0.0132542783 -0.023005848 #>  [55,] 0.2666920 -0.115228898 -0.0359589458  0.3973397956 -0.175941945 #>  [56,] 0.5422125  0.103843196 -0.5977387652 -0.0642093520 -1.947392760 #>  [57,] 0.4237825  0.663122789 -0.4043623298 -0.5131672259 -0.013179763 #>  [58,] 0.3148849  0.185369973  0.0122641053  0.3429166455  0.084489146 #>  [59,] 0.2836933  0.035987587 -0.0782909331  0.0772479146 -0.154080314 #>  [60,] 0.3713090  0.145371071  0.1528781717 -0.1680665462  0.024712810 #>  [61,] 0.2825946 -0.110375344 -0.1301149892 -0.2375007506  0.009582661 #>  [62,] 0.3029739 -0.315281663  0.3716817926 -0.0428740086 -0.005890357 #>  [63,] 0.2113266  0.212236609  0.0770854037  0.3184069149 -0.142519887 #>  [64,] 0.1941621 -0.148110851  0.0209731956 -0.1705038062  0.186098778 #>  [65,] 0.2413661 -0.374593814 -0.0241057686 -0.0349413847 -0.011133682 #>  [66,] 0.3652099 -0.233862183 -0.3143100465 -0.2447641855  0.009260882 #>  [67,] 0.2280040  0.134207919 -0.1773819032 -0.1748581789  0.340656830 #>  [68,] 0.3756730  0.261653746  0.0385259025 -0.1414398182  0.215887496 #>  [69,] 0.2802568 -0.297344742 -0.0872736295 -0.2018010609  0.062441997 #>  [70,] 0.4792029  0.528826766  0.0080841026 -0.7257836954 -0.025143970 #>  [71,] 0.2677620  0.396922978 -0.0740489969  0.1718078696  0.295805542 #>  [72,] 0.3049306 -0.029236244 -0.2893005208 -0.1787351194 -0.128458190 #>  [73,] 0.4742746 -0.209666201 -0.0959889713  0.1239931896 -0.471218648 #>  [74,] 0.5117096  0.423306042  1.6612708828  0.8917260353  0.448592988 #>  [75,] 0.2981851 -0.132351141 -0.4053110756  0.2350450072  0.284131203 #>  [76,] 0.3732082 -0.011811016 -0.0659619601 -0.6645208779  0.158884685 #>  [77,] 0.3351017  0.068172313  0.2240278277  0.0473466200 -0.296940247 #>  [78,] 0.2840126 -0.476961395 -0.2619424656 -0.0046694786  0.206718753 #>  [79,] 0.4099535 -0.446932996  0.7843617008  1.1441859323 -0.144452308 #>  [80,] 0.4414757 -0.182042783  0.5907650958 -0.5053725611 -0.315021549 #>  [81,] 0.3489320  0.003042576 -0.1442799473 -0.0411653764  0.187536740 #>  [82,] 0.4525799  0.246623366 -0.1751828678  0.7654963894 -0.865706229 #>  [83,] 0.2656481 -0.400646732 -0.1181721326 -0.0762009136  0.034375926 #>  [84,] 0.2830458  0.157693752 -0.1909134851  0.0782065966  0.153281751 #>  [85,] 0.1930024 -0.182612498  0.1924962674 -0.1471814320  0.083300173 #>  [86,] 0.2924796 -0.242241368  0.5356802558 -0.4947953212  0.446963949 #>  [87,] 0.2570445 -0.187105456  0.0586041631 -0.0842090344 -0.131231020 #>  [88,] 0.2804309  0.158442242  0.2147863508 -0.1679680407  0.265124886 #>  [89,] 0.3057172  0.126014457  0.4608058605 -0.4738780869 -0.229220991 #>  [90,] 0.2973654 -0.233879948  0.0429093674 -0.2162018343 -0.559440661 #>  [91,] 0.4056711  0.216237703  0.6641400556 -0.2061471000 -0.011149722 #>  [92,] 0.3025589 -0.128097667  0.4446207105 -0.2293002293  0.011846570 #>  [93,] 0.5172331  0.572953234 -0.7714388093  0.9818085601  0.192697226 #>  [94,] 0.2785030 -0.404921073 -0.4513148827 -0.1058019288  0.043498628 #>  [95,] 0.1972177 -0.120601454  0.1169447614  0.0823344899  0.255632481 #>  [96,] 0.3859856 -0.462559975  0.1431492172 -0.4855087484 -0.346314778 #>  [97,] 0.4239506 -0.234623366 -0.0163490644 -0.6229517371  0.021633756 #>  [98,] 0.2754687  0.298160466  0.0735441924 -0.2754830599 -0.011155356 #>  [99,] 0.2839010 -0.383913076  0.0116048572  0.1047186716  0.046960720 #> [100,] 0.3702165 -0.273941741  0.4472915457 -0.2277925109 -0.233898219 #>                 [,6]         [,7]         [,8]         [,9]        [,10] #>   [1,]  0.2547440286  0.168580889  0.238120369 -0.178895832 -0.038999015 #>   [2,] -0.0164694431 -0.079552584 -0.190327378  0.145703678  0.336695347 #>   [3,]  0.3149674463 -0.159119998  0.311928987  0.150242263 -0.266908220 #>   [4,] -0.2733627187  0.160516283 -0.267054246 -0.486495219 -0.167115839 #>   [5,]  1.1960926641 -0.604500148 -0.942524266  0.078738985  0.277218956 #>   [6,]  0.4849638784  0.586423244  0.024577359 -0.471299361 -0.228243604 #>   [7,]  0.2602688165 -0.565803266  0.186190125  0.186915626 -0.049198341 #>   [8,] -0.0314835697 -0.124186011  0.241863182 -0.280811722 -0.100573117 #>   [9,]  0.4107510602 -0.379783993 -0.127956552  0.197622360  0.584510871 #>  [10,]  0.0365730128  0.176126557  0.108033824 -0.362374070  0.097757108 #>  [11,] -0.2974601837 -0.198393453  0.202273877 -0.007740457 -0.117793583 #>  [12,] -0.2062595940  0.163015120  0.047647233 -0.181176253  0.244200423 #>  [13,]  0.3177397804 -0.001065707  0.174220431  0.200680911 -0.266671030 #>  [14,] -0.0307815163  0.218336491 -0.284536782 -0.158758656 -0.229542818 #>  [15,] -0.1538896826 -0.179274634  0.103436551  0.273090505 -0.238357492 #>  [16,]  0.0609852669 -0.281550116  0.298061968 -0.080507801  0.008839671 #>  [17,] -0.2594970515 -0.275185404  0.574175116 -0.142554181  0.362411750 #>  [18,] -0.4702621745 -0.076632518  0.365183457  0.103563270 -0.046762562 #>  [19,] -0.1670904550  0.071321475  0.150762397 -0.206908581  0.231860148 #>  [20,]  0.7595153547  0.287018207 -0.376119394  0.898159118  0.971702426 #>  [21,] -0.0112900200 -0.500625069  0.448005550 -0.591598877  0.108089440 #>  [22,] -0.2157457153  0.102106354  0.029750065 -0.176875075 -0.156582849 #>  [23,] -0.0361053609  0.163938825  0.304640298 -0.072222067  0.108088967 #>  [24,] -0.1711443390 -0.232283941  0.023201688 -0.212317961  0.437878253 #>  [25,]  0.2394987388 -0.082703160  0.719735215 -0.335206216  0.603122823 #>  [26,] -0.1676885446 -0.347194001 -0.278206789 -0.476664067 -0.021677305 #>  [27,] -0.1447884096  0.244841883 -0.004201765 -1.267264098  0.298086623 #>  [28,]  0.0689683297 -0.181751316  0.116788936 -0.105583195  0.053546737 #>  [29,]  0.0336695323 -0.227913020  0.167505585  0.746992221 -0.038482186 #>  [30,] -0.2595428668  0.374450384  0.011246945  0.129106641 -0.332461203 #>  [31,] -0.1029592202 -0.307485506 -0.322067741  0.223347247 -0.411762696 #>  [32,] -0.1860044600 -0.004671251  0.207380768 -0.311526677 -0.193561335 #>  [33,]  0.3539427930 -0.412844422 -0.644798642 -0.288636145  0.014714085 #>  [34,] -0.1368834375 -0.072060078  0.062925977 -0.124409054 -0.053840953 #>  [35,] -0.3776745738  0.007010752  0.283885004 -0.059463311 -0.158191376 #>  [36,] -0.0961602521 -0.118665908  0.167970399 -0.118466411 -0.218569160 #>  [37,]  0.0374307193 -0.036637713  0.378914472 -0.520700884 -0.637846004 #>  [38,]  0.4980481581  0.134463430  0.139236384 -0.480705127 -1.066487750 #>  [39,] -0.6832876911 -0.289318188  0.173715387 -0.238475216 -0.290694719 #>  [40,]  0.0289828001  0.040361844  0.179857022  0.076731262 -0.077058849 #>  [41,] -0.5220171478  0.071087116 -0.097549725  0.023060073 -0.214726073 #>  [42,]  0.3983257880  0.290219349 -0.262429721 -0.293749449 -0.351761845 #>  [43,]  0.0024515738 -0.142922097  0.051711640 -0.009982002 -0.072819497 #>  [44,] -0.5919924640 -0.231619309 -0.468293711 -0.572436096  0.992497128 #>  [45,]  0.8383392720  0.049944049  0.668682258 -0.147813152 -0.087509893 #>  [46,]  0.0496007839 -0.324037755  0.240942797 -0.090076234 -0.191135054 #>  [47,]  0.0070510247  0.339936240 -0.215660176 -0.202270043 -0.150606032 #>  [48,] -0.1939965206  0.334817856 -0.095900041  0.288311497 -0.258437472 #>  [49,]  0.0172618638 -0.176193502 -0.289336137  0.086308545 -0.125265960 #>  [50,] -0.2594380857 -0.061810135  0.188894283  0.412231821 -0.315673331 #>  [51,]  0.2592854332 -0.054411829  0.075324259  0.021315835  0.211293029 #>  [52,]  0.0449375164 -0.233382911 -0.031949867 -0.843878300  0.080491983 #>  [53,]  0.0874539944  0.116820712 -0.058167031  0.115272545 -0.380116057 #>  [54,] -0.2056009760 -0.432731728  0.038136142  0.232318697 -0.073828605 #>  [55,] -0.0355122828 -0.179369598 -0.228635531  0.012359695 -0.059577505 #>  [56,]  0.1532658687  0.306487067  0.770451072 -0.733076046  0.590510479 #>  [57,] -0.3928205541  0.292812326 -0.021120457 -0.160528553  0.135058144 #>  [58,]  0.4466652448  0.254694259 -0.250682967 -0.037018717 -0.611712455 #>  [59,] -0.1594395643  0.044090082 -0.173840979 -0.219341187  0.190444076 #>  [60,]  0.1817297170  0.236726281  0.337898608  0.331766578  0.076412823 #>  [61,]  0.2727139418 -0.012716707  0.106912796  0.024947834 -0.032353838 #>  [62,] -0.6897258823 -0.324831717  0.108435400  0.035004568 -0.291684712 #>  [63,] -0.1770494839  0.055883012 -0.070065786 -0.087216390 -0.078540769 #>  [64,] -0.0631795611 -0.096487292  0.058892649  0.086868857  0.228468395 #>  [65,] -0.3705698490 -0.009465416  0.204554390 -0.097344226 -0.109352641 #>  [66,] -0.7164747403  0.094197103 -0.100050951  0.036431516 -0.227853278 #>  [67,]  0.0817635333 -0.018733244  0.428717114  0.244464277 -0.138709386 #>  [68,]  0.2724349460  0.141130282 -0.075127829  0.039483747  0.149668453 #>  [69,] -0.0659565565 -0.202052472  0.171284135  0.185663837  0.065886137 #>  [70,] -0.4237009593 -0.411551633 -0.830976686  0.399866542  0.140388109 #>  [71,]  0.3617910991  0.369864221 -0.200138439 -0.019184583 -0.363277377 #>  [72,]  0.0009644288  0.317020790  0.020923623 -0.084949793 -0.090057873 #>  [73,] -0.1565175605 -2.187194337 -0.323979144  0.051364162 -0.191720340 #>  [74,] -0.2147188097  0.968993066 -0.394521616  0.447211449  0.517589343 #>  [75,]  0.1176618066 -0.181010845  0.346515551  0.043034665 -0.049500501 #>  [76,]  0.2957110099  0.207529294  0.013925144  0.427481222 -0.505042521 #>  [77,] -0.4592205233  0.455723260 -0.308032753 -0.314869650 -0.452676346 #>  [78,]  0.0602985740 -0.090332568 -0.460301454  0.100296124 -0.157818881 #>  [79,]  0.4155500305 -0.492572007 -0.321668655 -0.182259051 -0.034729687 #>  [80,] -0.9660313344  0.092002950 -0.501336661  0.305617663 -0.166487994 #>  [81,] -0.1240598016  0.024665103 -0.885718585 -0.399502010 -0.168867232 #>  [82,] -0.0335121833  0.519769689 -0.773172617  0.582306358  0.031319478 #>  [83,] -0.0600854641 -0.268652726 -0.048556436  0.183298659 -0.257411071 #>  [84,]  0.4118478557 -0.076813221  0.171620384 -0.522752493 -0.388878617 #>  [85,]  0.1004374689  0.095970843  0.133387604  0.041416046 -0.292599274 #>  [86,] -0.1331831871 -0.079646144  0.758173477  0.200967719  0.099787271 #>  [87,] -0.0423677222  0.268038429 -0.071506221  0.266059779 -0.448278787 #>  [88,] -0.5055875092  0.308970888 -0.382332009 -0.134452903  0.165640712 #>  [89,] -0.3869736138 -0.165452687  0.207904279  0.295123996 -0.195371633 #>  [90,] -0.2183914331 -0.298787367  0.448240324 -0.133528592 -0.357831679 #>  [91,]  0.3258080498  0.434638587  0.541499734  0.133174438  0.726353936 #>  [92,] -0.1009565750 -0.361110662  0.453477377 -0.302787257 -0.092732110 #>  [93,] -0.2091130163 -0.062193785  0.854567797  1.252197921  0.237930779 #>  [94,]  0.4531727762  0.234990628 -0.197789206 -0.149451490 -0.063951215 #>  [95,] -0.0779829632  0.024509581  0.009517371  0.115410983 -0.026071212 #>  [96,] -0.2259513981  0.443588806  0.336673079  0.634519716 -0.386170314 #>  [97,] -0.9963902668  0.161206413  0.071057732 -0.105762544  0.273122691 #>  [98,]  0.0353323918 -0.059380730  0.127655377  0.208348778 -0.056791752 #>  [99,] -0.2968287439 -0.012681463 -0.206885586 -0.251720110  0.556237895 #> [100,] -0.5021861944 -0.247749187  0.480515033  0.131095213  0.067244273 #>  #> $penal_lik #> [1] -100578.5 #>"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/spatial_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Spatial Plot of Feature Expression or Cluster Labels — spatial_plot","title":"Create Spatial Plot of Feature Expression or Cluster Labels — spatial_plot","text":"Create Spatial Plot Feature Expression Cluster Labels","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/spatial_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Spatial Plot of Feature Expression or Cluster Labels — spatial_plot","text":"","code":"spatial_plot(   input,   type = c(\"raw\", \"smooth\", \"cluster\"),   feature_name = NULL,   labels = NULL,   assay_type = \"logcounts\",   spot_size = 1.5 )"},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/spatial_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Spatial Plot of Feature Expression or Cluster Labels — spatial_plot","text":"input SummarizedExperiment object containing counts assay row/col coordinates. type Plot type, \"raw\", \"smooth, \"cluster\". \"raw\", expression feature_name using assay_type plotted. \"smooth\" smoothed expression feature_name plotted. \"cluster\" cluster labels plotted. type=\"cluster\" labels=NULL, smoothLRC labels used. feature_name type=\"raw\" type=\"smooth\", name feature plotted. labels type=\"cluster\" vector labels observation. length number columns input. NULL, smoothLRC cluster labels used. assay_type type=\"raw\" type=\"smooth\", SummarizedExperiment assay type. spot_size size pixel.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/spatial_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Spatial Plot of Feature Expression or Cluster Labels — spatial_plot","text":"ggplot object.","code":""},{"path":"https://alexanderjwhite.github.io/smoothLRC/reference/spatial_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Spatial Plot of Feature Expression or Cluster Labels — spatial_plot","text":"","code":"sce <- example_sce() spatial_plot(sce, feature_name = \"Feature 1\", spot_size = 10)"},{"path":"https://alexanderjwhite.github.io/smoothLRC/news/index.html","id":"smoothlrc-0990","dir":"Changelog","previous_headings":"","what":"smoothLRC 0.99.0","title":"smoothLRC 0.99.0","text":"Initial release smoothLRC","code":""}]
